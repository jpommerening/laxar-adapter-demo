{"version":3,"sources":["webpack:///vendor.min.js","webpack:///webpack/bootstrap 91dda75be414ef65d874?66e4","webpack:///./vendor/laxar/laxar.js?f4d9","webpack:///./vendor/laxar/lib/utilities/assert.js?548f","webpack:///./vendor/laxar/lib/utilities/object.js?ecb9","webpack:///./vendor/laxar/lib/utilities/string.js?856e","webpack:///./vendor/laxar/lib/runtime/services.js?5730","webpack:///./~/page/index.js?6133","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?6f0e","webpack:///./~/page/~/path-to-regexp/index.js?9467","webpack:///./~/page/~/path-to-regexp/~/isarray/index.js?582c","webpack:///./vendor/laxar/lib/runtime/configuration.js?efe9","webpack:///./vendor/laxar/lib/runtime/browser.js?c332","webpack:///./vendor/laxar/lib/runtime/log.js?ae9e","webpack:///./vendor/laxar/lib/runtime/event_bus.js?6c80","webpack:///./vendor/laxar/lib/runtime/artifact_provider.js?18ae","webpack:///./vendor/laxar/lib/loaders/control_loader.js?1e77","webpack:///./vendor/laxar/lib/loaders/css_loader.js?6cab","webpack:///./vendor/laxar/lib/loaders/layout_loader.js?04a9","webpack:///./vendor/laxar/lib/loaders/page_loader.js?ab75","webpack:///./vendor/laxar/lib/utilities/json_validator.js?5b23","webpack:///./~/jjv/index.js?56fe","webpack:///./~/jjv/lib/jjv.js?7d93","webpack:///./~/jjve/jjve.js?5dc7","webpack:///./vendor/laxar/lib/loaders/features_provider.js?566e","webpack:///./vendor/laxar/static/schemas/page.json?4cbd","webpack:///./vendor/laxar/lib/tooling/pages.js?87d4","webpack:///./vendor/laxar/lib/loaders/theme_loader.js?0027","webpack:///./vendor/laxar/lib/loaders/widget_loader.js?5947","webpack:///./vendor/laxar/lib/runtime/storage.js?d8ea","webpack:///./vendor/laxar/lib/runtime/timer.js?145a","webpack:///./vendor/laxar/lib/runtime/flow_controller.js?a18e","webpack:///./vendor/laxar/static/schemas/flow.json?438d","webpack:///./vendor/laxar/lib/runtime/flow_service.js?1186","webpack:///./vendor/laxar/lib/runtime/heartbeat.js?ea70","webpack:///./vendor/laxar/lib/runtime/page_service.js?ee7b","webpack:///./vendor/laxar/lib/runtime/area_helper.js?177f","webpack:///./vendor/laxar/lib/runtime/layout_widget_adapter.js?800f","webpack:///./vendor/laxar/lib/runtime/pagejs_router.js?91dc","webpack:///./vendor/laxar/lib/runtime/locale_event_manager.js?85a3","webpack:///./vendor/laxar/lib/runtime/visibility_event_manager.js?1097","webpack:///./vendor/laxar/lib/runtime/widget_services.js?d8e6","webpack:///./vendor/laxar/lib/runtime/widget_services_i18n.js?a289","webpack:///./vendor/laxar/lib/runtime/widget_services_visibility.js?758a","webpack:///./vendor/laxar/lib/tooling/tooling.js?3d0c","webpack:///./vendor/laxar/lib/runtime/plain_adapter.js?588d","webpack:///./vendor/laxar/polyfills.js","webpack:///./~/promise-polyfill/promise.js","webpack:///(webpack)/~/node-libs-browser/~/timers-browserify/main.js","webpack:///(webpack)/~/node-libs-browser/~/timers-browserify/~/setimmediate/setImmediate.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./vendor/laxar/lib/polyfills/array_from.js","webpack:///./vendor/laxar/lib/polyfills/array_includes.js","webpack:///./vendor/laxar/lib/polyfills/object_assign.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","25","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","bootstrap","anchorElement","_ref","arguments","undefined","_ref$widgetAdapters","widgetAdapters","_ref$configuration","configuration","_ref$artifacts","artifacts","_assert2","isNotNull","hasType","services","_services","create","globalEventBus","log","storage","themeLoader","widgetLoader","load","adapterServices","artifactProvider","flowService","heartbeat","pageService","tooling","toolingProviders","adapterModules","plainAdapter","concat","adapters","bootstrapWidgetAdapters","registerWidgetAdapters","announceInstance","flowName","get","whenDocumentReady","trace","createControllerFor","flowController","loadFlow","then","err","fatal","stack","callback","document","readyState","addEventListener","adapterModulesByTechnology","artifactsByTechnology","forEach","technology","widgets","controls","type","artifact","descriptor","integration","name","push","adaptersByTechnology","keys","adapterModule","simpleId","Date","now","Math","floor","random","instances","idGenerator","instanceIdStorageKey","store","getApplicationSessionStorage","instanceId","getItem","setItem","addTag","optionalName","global","laxarInstances","defineProperty","value","string","object","assert","_assert","_object","_string","_plain_adapter","Function","eval","_","window","26","Assertion","subject","optionalDetails","this","subject_","details_","fail","message","details","detailString","_typeof","JSON","stringify","Error","checkType","actualType","TYPE_TO_CONSTRUCTOR","functionName","func","match","FUNCTION_NAME_MATCHER","exec","toString","trim","Symbol","iterator","constructor","actualString","expectedString","hasProperty","property","String","number","Number","boolean","Boolean","function","codeIsUnreachable","state","expression","27","options","defaults","assign","iteratorFunction","path","thePath","optionalDefault","pathArr","split","node","shift","setPath","last","pop","pathFragment","index","lookAheadFragment","fillArrayWithNull","parseInt","deepClone","result","tabulate","fn","reduce","table","k","toIndex","hasOwnProp","28","format","optionalIndexedReplacements","optionalNamedReplacements","DEFAULT_FORMATTER","createFormatter","defaultTypeFormatter","typeFormatters","indexed","named","chars","output","len","BACKSLASH","OPENING_BRACKET","closingIndex","indexOf","CLOSING_BRACKET","substring","replacePlaceholder","placeholder","context","specifier","subSpecifierString","placeholderParts","INTEGER_MATCHER","test","charAt","slice","part","specifierMatch","knownSpecifiers","filter","map","join","optionalValueMappers","DEFAULT_FORMATTERS","freeze","s","input","d","toFixed","f","precision","o","29","configurationSource","assets","configurationDefaults","baseHref","eventBusTimeoutMs","router","query","enabled","flow","entryPoint","target","parameters","i18n","fallback","strict","locales","logging","levels","threshold","theme","storagePrefix","_configuration","browser","_browser","_log","collectors","_tooling","createCollectors","_storage","timer","_timer","_artifact_provider","_heartbeat","timeoutFn","t","setTimeout","_event_bus","onNext","cssLoader","_css_loader","_theme_loader","layoutLoader","_layout_loader","pageLoader","_page_loader","pages","controlLoader","_control_loader","widgetServices","forWidget","_widget_loader","_widgetServices","apply","localeManager","_locale_event_manager","visibilityManager","_visibility_event_manager","_page_service","_pagejs_router","_page2","_flow_controller","_flow_service","createProviders","_widget_services","_page","30","process","page","route","Route","callbacks","middleware","start","unhandled","ctx","handled","current","hashbang","base","location","hash","replace","pathname","search","canonicalPath","stop","href","decodeURLEncodedURIComponent","val","decodeURLComponents","decodeURIComponent","Context","title","querystring","params","parts","method","regexp","pathtoRegexp","onclick","e","which","metaKey","ctrlKey","shiftKey","defaultPrevented","el","nodeName","parentNode","hasAttribute","getAttribute","link","sameOrigin","orig","substr","preventDefault","show","event","button","origin","protocol","hostname","port","running","prevContext","clickEvent","ontouchstart","history","dispatch","exits","popstate","onpopstate","click","url","removeEventListener","pushState","back","redirect","to","init","save","nextExit","j","prev","nextEnter","exit","replaceState","self","next","qsIndex","31","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","array","noop","nextTick","args","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","32","parse","str","res","tokens","PATH_REGEXP","escaped","offset","prefix","capture","group","suffix","asterisk","repeat","optional","delimiter","pattern","escapeGroup","compile","tokensToFunction","matches","RegExp","data","token","segment","TypeError","isarray","encodeURIComponent","escapeString","attachKeys","re","flags","sensitive","regexpToRegexp","groups","source","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","end","lastToken","endsWithSlash","33","34","ensure","35","selectResolver","URL","resolveUsingUrl","resolveUsingLink","baseUrl","abs","baseURI","absoluteBaseUrl","baseDocument","a","createElement","resolveDoc","implementation","createHTMLDocument","resolveDocBase","head","appendChild","resolve","fetch","console","36","optionalBrowser","startChannels","createConsoleChannel","Logger","_this","channels","queueSize_","channels_","counter_","messageQueue_","threshold_","tags_","levelToName_","level","levelName","toLowerCase","_len","_key","BLACKBOX","setLogThreshold","gatherSourceInformation","blackboxDepth","EMPTY_CALL_INFORMATION","rows","interpret","chromeStackInterpreter","firefoxStackInterpreter","row","CHROME_AND_IE_STACK_MATCHER","file","line","char","FIREFOX_STACK_MATCHER","messageObject","browserConsole","text","replacements","_messageObject$source","sourceInfo","logMethod","callArgs","mergeTextAndReplacements","pos","buffer","character","replacementIndex","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","_len2","_key2","time","tags","gatherTags","channel","debug","info","warn","error","addLogChannel","entry","removeLogChannel","channelIndex","splice","tag","setTag","removeTag","values","toUpperCase","37","_toArray","EventBus","timeoutFunction","errorHandler","createLogErrorHandler","nextTick_","timeoutFunction_","ms","timeoutMs_","errorHandler_","cycleCounter_","eventQueue_","subscriberTree_","waitingPromiseResolves_","currentCycle_","inspectors_","log_","enqueueEvent","eventItem","queuedEvents","processWaitingPublishPromises","processQueue","meta","cycleId","subscribers","findSubscribers","resolvePublish","serializedEvent","senderName","sender","subscriberItem","subscriberName","deliverToSender","clone","subscriber","Exception","Published event","Event meta information","Caused by Subscriber","notifyInspectors","action","eventObject","subscribedTo","newPromiseResolves","waitingResolves","unsubscribeRecursively","SUBSCRIBER_FIELD","_parts","rest","searchPart","WILDCARD","eventName","TOPIC_SEPARATOR","findSubscribersRecursively","sort","b","aWeight","subscriptionWeight","bWeight","_parts2","remainder","SUB_TOPIC_SEPARATOR","currentPart","lastIndexOf","calculateSubscriptionWeight","weight","infoObject","inspector","optionalErrorInformation","sensitiveData","formatString","REQUEST_MATCHER","addInspector","bind","subscribe","optionalOptions","eventNameParts","eventNamePart","bucketName","publish","_this2","optionalEvent","Promise","initiator","publishAndGatherReplies","finish","wasCanceled","timeoutRef","unsubscribeDidCollector","deferred","reject","givenDidResponses","_this3","pendingDidTimeout","eventNameSuffix","promise","willWaitingForDid","cycleFinished","unsubscribeWillCollector","senderIndex","Sender","After ms timeout","Responses missing from","38","makeProvider","bucket","cloneKeys","ref","api","aliases","artifactPromise","includes","lookup","_ref3","_ref3$assets","NOT_FOUND","lookupForTheme","_ref4","_ref4$assets","themedAssets","themeName","defaultAssets","provide","_ref5","content","provideUrl","_ref6","asset","assetUrl","assetForTheme","assetUrlForTheme","themeRef","themeIndex","themes","_ref2","_slicedToArray","forFlow","forTheme","forPage","forLayout","forControl","sliceIterator","_arr","_n","_d","_e","_s","_i","done","39","controlRef","notDeclaredMessage","errorInfoLink","_artifactProvider$for","all","styleSource","40","mergedCssFileLoaded","getElementsByTagName","some","loadedFiles","element","rel","41","layoutRef","templateSource","html","cssUrl","className","42","PageLoader","pageCollector","artifactProvider_","pageToolingCollector_","idCounter_","loadPageRecursively","pageRef","extensionChain","throwError","_self$artifactProvide","definition","foundPage","validatePage","areas","processExtends","generateMissingIds","checkForDuplicateIds","processCompositions","removeDisabledWidgets","collectPageDefinition","_pages","FLAT","has","basePage","mergePageWithBasePage","extendingAreas","mergedPageAreas","layout","areaName","mergeWidgetLists","topPage","topPageRef","processNestedCompositions","compositionChain","reverse","widgetSpec","ensureWidgetSpecHasId","compositionRef","composition","chainString","prefixCompositionIds","processCompositionExpressions","chain","collectCompositionDefinition","mergeCompositionAreasWithPageAreas","COMPACT","compositionSpec","insertAfterEntry","removeEntry","compositionAreaWidgets","prefixedAreas","widget","ID_SEPARATOR","throwPageError","replaceExpression","COMPOSITION_EXPRESSION_MATCHER","possibleNegation","COMPOSITION_TOPIC_PREFIX","topicFromId","SUBTOPIC_SEPARATOR","expressionData","features","iterateOverExpressions","featuresProvider","featuresForWidget","mergedFeatures","featurePath","currentValue","replacer","replacedKey","replacedValue","widgetList","idCount","duplicates","widgetId","generateDefaultWidgetSpecName","artifactName","SEGMENTS_MATCHER","dashToCamelcase","nextId","pageName","errors","_json_validator","validate","errorString","errorItem","targetList","sourceList","widgetConfiguration","insertBeforeId","what","segmentStart","ID_SEPARATOR_MATCHER","pagesCollector","_features_provider","43","jsonSchema","_jjv2","prohibitAdditionalProperties","defaultOptions","$schema","JSON_SCHEMA_V4_URI","origValidate","_jjve2","schema","additionalProperties","properties","patternProperties","items","_jjv","_jjve","44","45","__WEBPACK_AMD_DEFINE_RESULT__","Environment","coerceType","fieldType","fieldValidate","fieldFormat","copy","setTime","getTime","attr","clone_stack","new_stack","copy_stack","old_stack","stack_last","not","anyOf","allOf","oneOf","$ref","exclusiveMaximum","exclusiveMininum","additionalItems","required","description","definitions","dependencies","null","x","integer","date","alpha","v","alphanumeric","identifier","hexadecimal","numeric","date-time","isNaN","uppercase","lowercase","uri","email","ipv4","ipv6","readOnly","minimum","exclusiveMinimum","maximum","multipleOf","modifiers","regex","minLength","maxLength","minItems","maxItems","uniqueItems","minProperties","count","maxProperties","constant","enum","vs","normalizeID","resolveURI","schema_stack","curschema","components","hash_idx","resolveObjectRef","object_stack","skip_frames","frame","last_frame","checkValidity","hasProp","hasPattern","objerr","props","matched","errCount","minErrCount","malformed","objerrs","sl","ol","prop","useCoerce","useDefault","removeAdditional","Infinity","checkRequired","additional","$data","__root__","validation","resolveRef","addType","addTypeCoercion","addCheck","addFormat","addSchema","46","make","leaf","every","code","ns","allowsType","pkey","opts","formatPath","root","sep","jjve","47","widgetSpecification","featureConfiguration","featuresSpec","validator","createFeaturesValidator","feature","subTopic","SUB_TOPIC_FORMAT","topic","TOPIC_FORMAT","flagTopic","FLAG_TOPIC_FORMAT","languageTag","LANGUAGE_TAG_FORMAT","topicMap","localization","TOPIC_IDENTIFIER","48","extends","^[a-z][\\.a-zA-Z0-9_]*$","49","createProvider","collector","enable","disable","createCollector","cleanup","currentRef","currentPageInfo","pageReference","collection","listeners","pageDefinitions","compositionDefinitions","widgetDescriptors","collectWidgetDescriptor","compositionInstanceId","definitionsByInstance","collectCurrentPage","listener","50","themeProvider","51","servicesForWidget","_ref4$onBeforeControl","onBeforeControllerCreation","noOp","widgetArtifactProvider","controlDescriptors","checkTechnologyCompatibility","_descriptor$integrati","widgetName","TYPE_WIDGET","TYPE_ACTIVITY","throwWidgetError","adapterFactory","_adapterFactory$servi","serviceDecorators","_servicesForWidget","releaseServices","environment","adapter","destroy","templatePromise","loadAssets","widgetDescriptor","_ref7","controlDescriptor","controlTechnology","adapterErrors","activityAccessingDom","unknownInjection","injection","unknownWidget","52","createStorage","backend","namespace","item","nsKey","removeItem","getOrFakeBackend","webStorageName","testKey","applicationPrefix","localStorageBackend","sessionStorageBackend","localBackend","LOCAL","sessionBackend","SESSION","getLocalStorage","getSessionStorage","getApplicationLocalStorage","53","started","Timer","options_","label","idCounter","startTime_","stopTime_","splitTimes_","getData","startTime","stopTime","splitTimes","splitTime","optionalLabel","stopAndLog","endTime","toISOString","intervals","54","eventBus","validateFlowJson","registerRoutes","assembleRoutes","createFallbackHandler","placeForTarget","targetOrPlaceId","place","activePlace","placeId","targets","availablePlaces","constructAbsoluteUrl","targetOrPlace","optionalParameters","patterns","withoutRedundantParameters","navigateToTarget","redirectFrom","navigateTo","handleRouteChange","routerParameters","defaultParameters","equals","activeParameters","navigationInProgress","fromPlace","TARGET_SELF","navigationTimer","persistenceKey","SESSION_KEY_TIMER","requestedTarget","COLLABORATOR_ID","controller","tearDownPage","setupPage","catch","redirectOn","places","unknownPlace","DEFAULT_PLACE","routeMap","redirectTo","flowJson","_flow2","_place$defaultParamet","remainingParameters","aKeys","bKeys","_flow","55","56","57","customNextTick","customTimeout","registerHeartbeatListener","heartbeatListeners","beatRequested","beforeQueue","nextQueue","afterQueue","onBeforeNext","onAfterNext","58","createPageController","pageElement","areaHelper","_area_helper","setAreaHelper","layoutPromise","layoutInfo","cleanUpLayout","renderLayout","layoutWidget","layoutWidgetAdapterFor","widgetPromises","widgetsForPage","results","widgetAdapterWrappers","activeWidgetAdapterWrappers","initialize","LIFECYCLE_EVENT","EVENT_OPTIONS","delay","WIDGET_ATTACH_DELAY_MS","attachWidgets","unsubscribe","wrapper","areaWidgets","area","_layout_widget_adapter","addClass","innerHTML","findWidgetAreas","deregisterFuncs","register","DEFAULT_AREAS","exists","setAttribute","hidden","style","display","removeClass","lifecycleId","pageController","pageServiceApi","HTMLElement","cssClass","classList","add","remove","59","isVisible","knownVisibilityState","setVisibility","visible","freeToAttach","attachWaitingAdapters","areasInArea","containerName","areasInAreaMap","areasInWidget","areasInWidgetMap","areaToElement","adapterRef","widgetIdToArea","areaToWaitingAdapters","waitingAdapters","htmlTemplates","domAttachTo","widgetEntries","rootElement","querySelectorAll","elem","60","createController","areaElement","htmlTemplate","layoutNode","deregister","domDetach","removeChild","61","pagejs","fallbackHandler","handler","collectParameters","replaceHistory","constructPath","parameterDefaults","routingPath","absoluteBase","bestPattern","ROUTE_PARAM_MATCHER","$0","$param","$modifier","replacement","encodeSegment","TRAILING_SEGMENTS_MATCHER","queryEnabled","_ret","parameterName","encodedKey","_context$querystring","_context$params","isMultiSegment","decodeSegment","urlSegments","segments","fallbackBase","documentBase","originFromLocation","62","locale","senderOptions","initialized","configLocales","unsubscribeFromEventBus","subscriberOptions","63","unsubscribeFromWidgetVisibilityRequest","affectedAreas","will","did","hide","unsubscribeFromAreaVisibilityRequest","initiateAreaChange","implementAreaChange","ROOT","requestAreaChange","request","responses","response","ofArea","areaVisible","children","64","createContextForWidget","axEventBus","axFeatures","axId","axLog","createAreaHelperForWidget","qualify","localAreaName","unqualify","fullAreaName","fullName","localName","release","createAssetsServiceForWidget","widgetArtifacts","assetService","urlForTheme","createLoggerForWidget","logger","enrich","newLogger","createStorageForWidget","local","session","createIdGeneratorForWidget","fixLetter","l","fromCharCode","charCodeOfA","charCodeAt","INVALID_ID_MATCHER","localId","createEventBusForWidget","makeAutoRemovable","registry","removeFunction","purgeAutoRemoveRegistries","_len3","registries","_key3","collaboratorId","inspectorRemoveFunctions","unsubscribeFunctions","i18nOptions","specification","registerService","instance","decorate","decorators","registerServiceFactory","factory","optionalRelease","releaseHandlers","axAreaHelper","axAssets","axConfiguration","axContext","axControls","axFlowService","axGlobalEventBus","axGlobalLog","axGlobalStorage","axHeartbeat","axI18n","axStorage","axTooling","axVisibility","_widget_services_i18n","_widget_services_visibility","65","forFeature","update","noDeliveryToSender","track","i18nValue","localize","whenLocaleChanged","localizeRelaxed","optionalFallbackValue","primitives","tagParts","currentLocaleTag","localizeStrict","lookupKey","normalize","availableTags","n","handlers","handleLocaleChange","newTag","_optionalOptions$fall","_optionalOptions$stri","memoize","cache","66","onHide","hideListeners","updateChangeSubscription","onShow","showListeners","onChange","trackingProperty","updateAreaVisibility","visibilityByLocalArea","_optionalOptions$over","overrideContainer","unsubscribeToAreaRequests","requestEvent","responder","isAreaVisible","promises","oldVisible","visibilityByArea","oldOverride","overrideByArea","containerVisible","updateWidgetVisibility","unsubscribeToChanges","needsSubscription","didEvent","67","68","axWithDom","domAttached","injections","_ref5$onDomAvailable","onDomAvailable","parent","provider","281","282","setImmediate","thisArg","_state","_handled","_value","_deferreds","doResolve","handle","_immediateFn","cb","onFulfilled","onRejected","ret","newValue","finale","_unhandledRejectionFn","Handler","reason","ex","setTimeoutFunc","prom","remaining","race","_setImmediateFn","_setUnhandledRejectionFn","283","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","284","task","tasksByHandle","nextHandle","registerImmediate","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","attachEvent","installMessageChannelImplementation","MessageChannel","port1","port2","installReadyStateChangeImplementation","doc","documentElement","script","onreadystatechange","installSetTimeoutImplementation","attachTo","getPrototypeOf","285","normalizeName","normalizeValue","iteratorFor","support","iterable","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","bufferClone","byteLength","set","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","normalizeMethod","upcased","methods","Request","credentials","mode","referrer","form","bytes","parseHeaders","rawHeaders","Response","bodyInit","status","ok","statusText","viewClasses","DataView","isView","oldValue","entries","redirectStatuses","RangeError","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","286","toStr","isCallable","toInteger","isFinite","maxSafeInteger","pow","toLength","min","max","arrayLike","C","mapFn","T","A","kValue","287","searchElement","optionalFromIndex","list","288","nextKey"],"mappings":"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","file":"vendor.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(281);\n\tmodule.exports = __webpack_require__(25);\n\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.plainAdapter = exports.instances = exports.string = exports.object = exports.assert = undefined;\n\texports.bootstrap = bootstrap;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar object = _interopRequireWildcard(_object);\n\t\n\tvar _string = __webpack_require__(28);\n\t\n\tvar string = _interopRequireWildcard(_string);\n\t\n\tvar _services = __webpack_require__(29);\n\t\n\tvar _plain_adapter = __webpack_require__(68);\n\t\n\tvar plainAdapter = _interopRequireWildcard(_plain_adapter);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n\t                                                                                                                                                                                                     * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                     * Released under the MIT license.\n\t                                                                                                                                                                                                     * http://laxarjs.org/license\n\t                                                                                                                                                                                                     */\n\t\n\t/**\n\t * The API entry point for boostrapping LaxarJS applications.\n\t * Also, provides a couple of utilities to deal with assertions, objects and strings.\n\t *\n\t * @module laxar\n\t */\n\t\n\t// Get a reference to the global object of the JS environment.\n\t// See http://stackoverflow.com/a/6930376 for details\n\tvar global = void 0;\n\ttry {\n\t   // eslint-disable-next-line no-new-func, no-eval\n\t   global = Function('return this')() || (1, eval)('this');\n\t} catch (_) {\n\t   // if it forbids eval, it's probably a browser\n\t   global = window;\n\t}\n\t\n\t/**\n\t * Bootstraps AngularJS on the provided `anchorElement` and sets up the LaxarJS runtime.\n\t *\n\t * @param {HTMLElement} anchorElement\n\t *    the element to insert the page in\n\t * @param {Object} [optionalOptions]\n\t *    optional options for bootstrapping\n\t * @param {Array} optionalOptions.widgetAdapters\n\t *    widget adapters that are used in this application\n\t * @param {Object} optionalOptions.configuration\n\t *    configuration for the laxar application. See http://laxarjs.org/docs/laxar-latest/manuals/configuration/\n\t *    for further information on available properties\n\t * @param {Object} optionalOptions.artifacts\n\t *    an artifact listing for the application, generated by the utilized built tool (e.g. webpack)\n\t *\n\t * @memberof laxar\n\t */\n\tfunction bootstrap(anchorElement) {\n\t   var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t       _ref$widgetAdapters = _ref.widgetAdapters,\n\t       widgetAdapters = _ref$widgetAdapters === undefined ? [] : _ref$widgetAdapters,\n\t       _ref$configuration = _ref.configuration,\n\t       configuration = _ref$configuration === undefined ? {} : _ref$configuration,\n\t       _ref$artifacts = _ref.artifacts,\n\t       artifacts = _ref$artifacts === undefined ? {} : _ref$artifacts;\n\t\n\t   (0, _assert2.default)(anchorElement).isNotNull();\n\t   (0, _assert2.default)(widgetAdapters).hasType(Array).isNotNull();\n\t   (0, _assert2.default)(artifacts).hasType(Object).isNotNull();\n\t   (0, _assert2.default)(configuration).hasType(Object).isNotNull();\n\t\n\t   var services = (0, _services.create)(configuration, artifacts);\n\t\n\t   var globalEventBus = services.globalEventBus,\n\t       log = services.log,\n\t       storage = services.storage,\n\t       themeLoader = services.themeLoader,\n\t       widgetLoader = services.widgetLoader;\n\t\n\t   themeLoader.load();\n\t\n\t   var adapterServices = {\n\t      artifactProvider: services.artifactProvider,\n\t      configuration: services.configuration,\n\t      flowService: services.flowService,\n\t      globalEventBus: globalEventBus,\n\t      heartbeat: services.heartbeat,\n\t      log: log,\n\t      pageService: services.pageService,\n\t      storage: storage,\n\t      tooling: services.toolingProviders,\n\t      widgetLoader: services.widgetLoader\n\t   };\n\t\n\t   var adapterModules = [plainAdapter].concat(_toConsumableArray(widgetAdapters));\n\t   var adapters = bootstrapWidgetAdapters(anchorElement, adapterServices, adapterModules, artifacts);\n\t   widgetLoader.registerWidgetAdapters(adapters);\n\t\n\t   announceInstance(services);\n\t\n\t   var flowName = services.configuration.get('flow.name');\n\t   if (!flowName) {\n\t      log.trace('LaxarJS Bootstrap complete: No `flow.name` configured.');\n\t      return;\n\t   }\n\t\n\t   whenDocumentReady(function () {\n\t      log.trace('LaxarJS loading Flow: ' + flowName);\n\t      services.pageService.createControllerFor(anchorElement);\n\t      services.flowController.loadFlow().then(function () {\n\t         log.trace('Flow loaded');\n\t      }, function (err) {\n\t         log.fatal('LaxarJS failed to load flow.');\n\t         log.fatal('Error [0].\\nStack: [1]', err, err && err.stack);\n\t      });\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction whenDocumentReady(callback) {\n\t   if (document.readyState === 'complete') {\n\t      callback();\n\t   } else {\n\t      document.addEventListener('DOMContentLoaded', callback);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction bootstrapWidgetAdapters(anchorElement, services, adapterModules, artifacts) {\n\t   var log = services.log;\n\t\n\t   var adapterModulesByTechnology = {};\n\t   var artifactsByTechnology = {};\n\t\n\t   adapterModules.forEach(function (module) {\n\t      adapterModulesByTechnology[module.technology] = module;\n\t      artifactsByTechnology[module.technology] = { widgets: [], controls: [] };\n\t   });\n\t\n\t   ['widgets', 'controls'].forEach(function (type) {\n\t      artifacts[type].forEach(function (artifact) {\n\t         var technology = artifact.descriptor.integration.technology;\n\t\n\t         if (!adapterModulesByTechnology[technology]) {\n\t            var name = artifact.descriptor.name;\n\t\n\t            log.fatal('Unknown widget technology: [0], required by [1] \"[2]\"', technology, type, name);\n\t            return;\n\t         }\n\t         artifactsByTechnology[technology][type].push(artifact);\n\t      });\n\t   });\n\t\n\t   var adaptersByTechnology = {};\n\t   Object.keys(adapterModulesByTechnology).forEach(function (technology) {\n\t      var adapterModule = adapterModulesByTechnology[technology];\n\t      var artifacts = artifactsByTechnology[technology];\n\t      adaptersByTechnology[technology] = adapterModule.bootstrap(artifacts, services, anchorElement);\n\t   });\n\t   return adaptersByTechnology;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction announceInstance(services) {\n\t   var configuration = services.configuration,\n\t       log = services.log,\n\t       storage = services.storage;\n\t\n\t\n\t   if (configuration.get('tooling.enabled')) {\n\t      instances()[configuration.get('name', 'unnamed')] = services;\n\t   }\n\t\n\t   var idGenerator = configuration.get('logging.instanceId', simpleId);\n\t   if (idGenerator === false) {\n\t      return;\n\t   }\n\t\n\t   var instanceIdStorageKey = 'axLogTags.INST';\n\t   var store = storage.getApplicationSessionStorage();\n\t   var instanceId = store.getItem(instanceIdStorageKey);\n\t   if (!instanceId) {\n\t      instanceId = idGenerator();\n\t      store.setItem(instanceIdStorageKey, instanceId);\n\t   }\n\t   log.addTag('INST', instanceId);\n\t\n\t   function simpleId() {\n\t      return '' + Date.now() + Math.floor(Math.random() * 100);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Provide tooling access to LaxarJS services.\n\t *\n\t * Each laxar#bootstrap call creates a new set of services such as a logger, global event bus etc. For tools\n\t * like the laxar-developer-tools-widget, it may be necessary to access these services for a given instance,\n\t * or for all instances.\n\t *\n\t * @param {String} [optionalName]\n\t *   The configuration name of a LaxarJS instance to inspect.\n\t *   May be omitted to access all application instances by name.\n\t *\n\t * @return {Object}\n\t *   The tooling services for a specified instance, or for all instances that have tooling enabled.\n\t *\n\t * @memberof laxar\n\t */\n\tfunction instances(optionalName) {\n\t   var instances = global.laxarInstances = global.laxarInstances || {};\n\t   return optionalName ? instances[optionalName] : instances;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\texports.assert = _assert2.default;\n\texports.object = object;\n\texports.string = string;\n\texports.instances = instances;\n\texports.plainAdapter = plainAdapter;\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * The *assert* module provides some simple assertion methods for type checks, truthyness tests and guards\n\t * invalid code paths.\n\t * When importing the module as `default` module, it is the {@link assert} function itself.\n\t *\n\t * When requiring `laxar`, it is available as `laxar.assert`.\n\t *\n\t * @module assert\n\t */\n\t\n\t/**\n\t * Constructor for an Assertion.\n\t *\n\t * @param {*} subject\n\t *    the object assertions are made for\n\t * @param {String} [optionalDetails]\n\t *    details that should be printed in case no specific details are given for an assertion method\n\t *\n\t * @constructor\n\t * @private\n\t */\n\tfunction Assertion(subject, optionalDetails) {\n\t   this.subject_ = subject;\n\t   this.details_ = optionalDetails || null;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Throws an error if the subject is `null` or `undefined`.\n\t *\n\t * @param {String} [optionalDetails]\n\t *    details to append to the error message\n\t *\n\t * @return {Assertion}\n\t *    this instance\n\t */\n\tAssertion.prototype.isNotNull = function isNotNull(optionalDetails) {\n\t   if (this.subject_ == null) {\n\t      fail('Expected value to be defined and not null.', optionalDetails || this.details_);\n\t   }\n\t\n\t   return this;\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Throws an error if the subject is not of the given type. No error is thrown for `null` or `undefined`.\n\t *\n\t * @param {Function} type\n\t *    the expected type of the subject\n\t * @param {String} [optionalDetails]\n\t *    details to append to the error message\n\t *\n\t * @return {Assertion}\n\t *    this instance\n\t */\n\tAssertion.prototype.hasType = function hasType(type, optionalDetails) {\n\t   if (typeof this.subject_ === 'undefined' || this.subject_ === null) {\n\t      return this;\n\t   }\n\t\n\t   if (typeof type !== 'function') {\n\t      fail('type must be a constructor function. Got ' + (typeof type === 'undefined' ? 'undefined' : _typeof(type)) + '.');\n\t   }\n\t\n\t   if (!checkType(this.subject_, type)) {\n\t      var actualString = functionName(this.subject_.constructor);\n\t      var expectedString = functionName(type);\n\t\n\t      fail('Expected value to be an instance of \"' + expectedString + '\" but was \"' + actualString + '\".', optionalDetails || this.details_);\n\t   }\n\t\n\t   return this;\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Throws an error if the subject is no object or the given property is not defined on it.\n\t *\n\t * @param {String} property\n\t *    the property that is expected for the subject\n\t * @param {String} [optionalDetails]\n\t *    details to append to the error message\n\t *\n\t * @return {Assertion}\n\t *    this instance\n\t */\n\tAssertion.prototype.hasProperty = function hasProperty(property, optionalDetails) {\n\t   if (_typeof(this.subject_) !== 'object') {\n\t      fail('value must be an object. Got ' + _typeof(this.subject_) + '.');\n\t   }\n\t\n\t   if (!(property in this.subject_)) {\n\t      fail('value is missing mandatory property \"' + property + '\".', optionalDetails || this.details_);\n\t   }\n\t\n\t   return this;\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction fail(message, optionalDetails) {\n\t   var details = '';\n\t   if (optionalDetails) {\n\t      var detailString = (typeof optionalDetails === 'undefined' ? 'undefined' : _typeof(optionalDetails)) === 'object' ? JSON.stringify(optionalDetails) : optionalDetails;\n\t      details = ' Details: ' + detailString;\n\t   }\n\t   throw new Error('Assertion error: ' + message + details);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar TYPE_TO_CONSTRUCTOR = {\n\t   'string': String,\n\t   'number': Number,\n\t   'boolean': Boolean,\n\t   'function': Function\n\t};\n\tfunction checkType(subject, type) {\n\t   if ((typeof subject === 'undefined' ? 'undefined' : _typeof(subject)) === 'object') {\n\t      return subject instanceof type;\n\t   }\n\t\n\t   var actualType = TYPE_TO_CONSTRUCTOR[typeof subject === 'undefined' ? 'undefined' : _typeof(subject)];\n\t   return actualType === type;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar FUNCTION_NAME_MATCHER = /^function ([^\\(]*)\\(/i;\n\tfunction functionName(func) {\n\t   var match = FUNCTION_NAME_MATCHER.exec(func.toString().trim());\n\t   return match[1].length ? match[1] : 'n/a';\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates and returns a new `Assertion` instance for the given `subject`.\n\t *\n\t * **Note**: this function is no member of the module, but the module itself. Thus when using `assert` via\n\t * laxar, `assert` is will be no simple object, but this function having the other functions as\n\t * properties.\n\t *\n\t * Example:\n\t * ```js\n\t * define( [ 'laxar' ], function( ax ) {\n\t *    ax.assert( ax.assert ).hasType( Function );\n\t *    ax.assert.state( typeof ax.assert.codeIsUnreachable === 'function' );\n\t * } );\n\t * ```\n\t *\n\t * @param {*} subject\n\t *    the object assertions are made for\n\t * @param {String} [optionalDetails]\n\t *    details that should be printed in case no specific details are given when calling an assertion method\n\t *\n\t * @return {Assertion}\n\t *    the assertion instance\n\t */\n\tfunction assert(subject, optionalDetails) {\n\t   return new Assertion(subject, optionalDetails);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Marks a code path as erroneous by throwing an error when reached.\n\t *\n\t * @param {String} [optionalDetails]\n\t *    details to append to the error message\n\t */\n\tassert.codeIsUnreachable = function codeIsUnreachable(optionalDetails) {\n\t   fail('Code should be unreachable!', optionalDetails);\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Throws an error if the given expression is falsy.\n\t *\n\t * @param {*} expression\n\t *    the expression to test for truthyness\n\t * @param {String} [optionalDetails]\n\t *    details to append to the error message\n\t */\n\tassert.state = function state(expression, optionalDetails) {\n\t   if (!expression) {\n\t      fail('State does not hold.', optionalDetails);\n\t   }\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\texports.default = assert;\n\tvar codeIsUnreachable = exports.codeIsUnreachable = assert.codeIsUnreachable;\n\tvar state = exports.state = assert.state;\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.options = options;\n\texports.forEach = forEach;\n\texports.path = path;\n\texports.setPath = setPath;\n\texports.deepClone = deepClone;\n\texports.tabulate = tabulate;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t\n\t/**\n\t * Utilities for dealing with objects.\n\t *\n\t * When requiring `laxar`, it is available as `laxar.object`.\n\t *\n\t * @module object\n\t */\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Returns all properties from `obj` with missing properties completed from `defaults`. If `obj` is `null`\n\t * or `undefined`, an empty object is automatically created. `obj` and `defaults` are not modified by this\n\t * function. This is very useful for optional map arguments, resembling some kind of configuration.\n\t *\n\t * Example:\n\t * ```js\n\t * object.options( { validate: true }, {\n\t *    validate: false,\n\t *    highlight: true\n\t * } );\n\t * // =>\n\t * // {\n\t * //    validate: true,\n\t * //    highlight: true\n\t * // }\n\t * ```\n\t *\n\t * @param {Object} obj\n\t *    the options object to use as source, may be `null` or `undefined`\n\t * @param {Object} defaults\n\t *    the defaults to take missing properties from\n\t *\n\t * @return {Object}\n\t *    the completed options object\n\t */\n\tfunction options(obj, defaults) {\n\t   return Object.assign({}, defaults, obj);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Iterates over the keys of an object and calls the given iterator function for each entry.\n\t * On each iteration the iterator function is passed the `value`, the `key` and the complete `object` as\n\t * arguments.\n\t * If `object` is an array, the native `Array.prototype.forEach` function is called.\n\t * In this case the keys are the indices of the array.\n\t *\n\t * Example:\n\t * ```\n\t * object.forEach( { name: Peter, age: 12 }, ( value, key ) => {\n\t *    console.log( `${key} = ${value}\\n` );\n\t * });\n\t * // =>\n\t * // name = Peter\n\t * // age = 12\n\t * ```\n\t *\n\t * @param {Object} object\n\t *    the object to run the iterator function on\n\t * @param {Function} iteratorFunction\n\t *    the iterator function to run on each key-value pair\n\t */\n\tfunction forEach(object, iteratorFunction) {\n\t   if (Array.isArray(object)) {\n\t      object.forEach(iteratorFunction);\n\t      return;\n\t   }\n\t\n\t   for (var key in object) {\n\t      if (hasOwnProperty(object, key)) {\n\t         iteratorFunction(object[key], key, object);\n\t      }\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Finds a property in a nested object structure by a given path. A path is a string of keys, separated\n\t * by a dot from each other, used to traverse that object and find the value of interest. An additional\n\t * default is returned, if otherwise the value would yield `undefined`.\n\t *\n\t * Note that `path()` must only be used in situations where all path segments are also valid\n\t * JavaScript identifiers, and should never be used with user-specified paths:\n\t *\n\t *  - there is no mechanism to escape '.' in path segments; a dot always separates keys,\n\t *  - an empty string as a path segment will abort processing and return the entire sub-object under the\n\t *    respective position. For historical reasons, the path interpretation differs from that performed by\n\t *    {@link #setPath()}.\n\t *\n\t *\n\t * Example:\n\t *\n\t * ```js\n\t * object.path( { one: { two: 3 } }, 'one.two' ); // => 3\n\t * object.path( { one: { two: 3 } }, 'one.three' ); // => undefined\n\t * object.path( { one: { two: 3 } }, 'one.three', 42 ); // => 42\n\t * object.path( { one: { two: 3 } }, 'one.' ); // => { two: 3 }\n\t * object.path( { one: { two: 3 } }, '' ); // => { one: { two: 3 } }\n\t * object.path( { one: { two: 3 } }, '.' ); // => { one: { two: 3 } }\n\t * ```\n\t *\n\t * @param {Object} obj\n\t *    the object to traverse\n\t * @param {String} thePath\n\t *    the path to search for\n\t * @param {*} [optionalDefault]\n\t *    the value to return instead of `undefined` if nothing is found\n\t *\n\t * @return {*}\n\t *    the value at the given path\n\t */\n\tfunction path(obj, thePath) {\n\t   var optionalDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\t\n\t   var pathArr = thePath.split('.');\n\t   var node = obj;\n\t   var key = pathArr.shift();\n\t\n\t   while (key) {\n\t      if (node && (typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object' && hasOwnProperty(node, key)) {\n\t         node = node[key];\n\t         key = pathArr.shift();\n\t      } else {\n\t         return optionalDefault;\n\t      }\n\t   }\n\t\n\t   return node;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Sets a property in a nested object structure at a given path to a given value. A path is a string of\n\t * keys, separated by a dot from each other, used to traverse that object and find the place where the\n\t * value should be set. Any missing subtrees along the path are created.\n\t *\n\t * Note that `setPath()` must only be used in situations where all path segments are also valid\n\t * JavaScript identifiers, and should never be used with user-specified paths:\n\t *\n\t *  - there is no mechanism to escape '.' in path segments; a dot will always create separate keys,\n\t *  - an empty string as a path segment will create an empty string key in the object graph where missing.\n\t *    For historical reasons, this path interpretation differs from that performed by #path (see there).\n\t *\n\t *\n\t * Example:\n\t *\n\t * ```js\n\t * object.setPath( {}, 'name.first', 'Peter' ); // => { name: { first: 'Peter' } }\n\t * object.setPath( {}, 'pets.1', 'Hamster' ); // => { pets: [ null, 'Hamster' ] }\n\t * object.setPath( {}, '', 'Hamster' ); // => { '': 'Hamster' } }\n\t * object.setPath( {}, '.', 'Hamster' ); // => { '': { '': 'Hamster' } } }\n\t * ```\n\t *\n\t * @param {Object} obj\n\t *    the object to modify\n\t * @param {String} path\n\t *    the path to set a value at\n\t * @param {*} value\n\t *    the value to set at the given path\n\t *\n\t * @return {*}\n\t *    the full object (for chaining)\n\t */\n\tfunction setPath(obj, path, value) {\n\t   var node = obj;\n\t   var pathArr = path.split('.');\n\t   var last = pathArr.pop();\n\t\n\t   pathArr.forEach(function (pathFragment, index) {\n\t      if (!node[pathFragment] || _typeof(node[pathFragment]) !== 'object') {\n\t         var lookAheadFragment = pathArr[index + 1] || last;\n\t         if (lookAheadFragment.match(/^[0-9]+$/)) {\n\t            node[pathFragment] = [];\n\t            fillArrayWithNull(node[pathFragment], parseInt(lookAheadFragment, 10));\n\t         } else {\n\t            node[pathFragment] = {};\n\t         }\n\t      }\n\t\n\t      node = node[pathFragment];\n\t   });\n\t\n\t   if (Array.isArray(node) && last > node.length) {\n\t      fillArrayWithNull(node, last);\n\t   }\n\t\n\t   node[last] = value;\n\t\n\t   return obj;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Returns a deep clone of the given object. Note that the current implementation is intended to be used\n\t * for simple object literals only. There is no guarantee that cloning objects instantiated via\n\t * constructor function works and cyclic references will lead to endless recursion.\n\t *\n\t * @param {*} object\n\t *    the object to clone\n\t *\n\t * @return {*}\n\t *    the clone\n\t */\n\tfunction deepClone(object) {\n\t   if (!object || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) !== 'object') {\n\t      return object;\n\t   }\n\t\n\t   // Using plain for-loops here for performance-reasons.\n\t   var result = void 0;\n\t   if (Array.isArray(object)) {\n\t      result = [];\n\t      for (var i = 0, length = object.length; i < length; ++i) {\n\t         result[i] = deepClone(object[i]);\n\t      }\n\t   } else {\n\t      result = {};\n\t      for (var key in object) {\n\t         if (hasOwnProperty(object, key)) {\n\t            result[key] = deepClone(object[key]);\n\t         }\n\t      }\n\t   }\n\t\n\t   return result;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates a lookup table from a function and a list of inputs to the function.\n\t *\n\t * @param {Function} fn\n\t *    The callback to apply to all inputs\n\t * @param {String[]|Number[]|Boolean[]} keys\n\t *    The keys for the lookup table, and inputs to the function.\n\t *\n\t * @return {Object}\n\t *    An object mapping the given keys to their values under `fn`.\n\t */\n\tfunction tabulate(fn, keys) {\n\t   return keys.reduce(function (table, k) {\n\t      table[k] = fn(k);return table;\n\t   }, {});\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * Sets all entries of the given array to `null`.\n\t *\n\t * @private\n\t */\n\tfunction fillArrayWithNull(arr, toIndex) {\n\t   for (var i = arr.length; i < toIndex; ++i) {\n\t      arr[i] = null;\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar hasOwnProp = Object.prototype.hasOwnProperty;\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * @private\n\t */\n\tfunction hasOwnProperty(object, property) {\n\t   return hasOwnProp.call(object, property);\n\t}\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.format = format;\n\texports.createFormatter = createFormatter;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Utilities for dealing with strings.\n\t *\n\t * When requiring `laxar`, it is available as `laxar.string`.\n\t *\n\t * @module string\n\t */\n\t\n\t//\n\tvar BACKSLASH = '\\\\';\n\tvar OPENING_BRACKET = '[';\n\tvar CLOSING_BRACKET = ']';\n\tvar INTEGER_MATCHER = /^[0-9]+$/;\n\t\n\t/**\n\t * A map of all available default format specifiers to their respective formatter function.\n\t * The following specifiers are available:\n\t *\n\t * - `%d` / `%i`: Format the given numeric value as integer. Decimal places are removed\n\t * - `%f`: Format the given numeric value as floating point value. This specifier supports precision as\n\t *   sub-specifier (e.g. `%.2f` for 2 decimal places)\n\t * - `%s`: use simple string serialization using `toString`\n\t * - `%o`: Format complex objects using `JSON.stringify`\n\t *\n\t * @type {Object}\n\t * @name DEFAULT_FORMATTERS\n\t */\n\tvar DEFAULT_FORMATTERS = exports.DEFAULT_FORMATTERS = Object.freeze({\n\t   's': function s(input) {\n\t      return '' + input;\n\t   },\n\t   'd': function d(input) {\n\t      return input.toFixed(0);\n\t   },\n\t   'i': function i(input, subSpecifierString) {\n\t      return DEFAULT_FORMATTERS.d(input, subSpecifierString);\n\t   },\n\t   'f': function f(input, subSpecifierString) {\n\t      var precision = subSpecifierString.match(/^\\.(\\d)$/);\n\t      if (precision) {\n\t         return input.toFixed(precision[1]);\n\t      }\n\t\n\t      return '' + input;\n\t   },\n\t   'o': function o(input) {\n\t      return JSON.stringify(input);\n\t   },\n\t   'default': function _default(input, subSpecifierString) {\n\t      return DEFAULT_FORMATTERS.s(input, subSpecifierString);\n\t   }\n\t});\n\t\n\tvar DEFAULT_FORMATTER = createFormatter(DEFAULT_FORMATTERS);\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Substitutes all unescaped placeholders in the given string for a given indexed or named value.\n\t * A placeholder is written as a pair of brackets around the key of the placeholder. An example of an\n\t * indexed placeholder is `[0]` and a named placeholder would look like this `[replaceMe]`. If no\n\t * replacement for a key exists, the placeholder will simply not be substituted.\n\t *\n\t * Some examples:\n\t * ```javascript\n\t * string.format( 'Hello [0], how do you like [1]?', [ 'Peter', 'Cheeseburgers' ] );\n\t * // => 'Hello Peter, how do you like Cheeseburgers?'\n\t * ```\n\t * ```javascript\n\t * string.format( 'Hello [name] and [partner], how do you like [0]?', [ 'Pizza' ], {\n\t *    name: 'Hans',\n\t *    partner: 'Roswita'\n\t * } );\n\t * // => 'Hello Hans and Roswita, how do you like Pizza?'\n\t * ```\n\t * If a pair of brackets should not be treated as a placeholder, the opening bracket can simply be escaped\n\t * by backslashes (thus to get an actual backslash in a JavaScript string literal, which is then treated as\n\t * an escape symbol, it needs to be written as double backslash):\n\t * ```javascript\n\t * string.format( 'A [something] should eventually only have \\\\[x].', {\n\t *    something: 'checklist'\n\t * } );\n\t * // => 'A checklist should eventually only have [x].'\n\t * ```\n\t * A placeholder key can be any character string besides `[`, `]` and `:` to keep parsing simple and fast.\n\t * By using `:` as separator it is possible to provide a type specifier for string serialization or other\n\t * additional mapping functions for the value to insert. Type specifiers always begin with an `%` and end\n\t * with the specifier type. Builtin specifiers and their according formatter functions are defined\n\t * as {@link DEFAULT_FORMATTERS}.\n\t *\n\t * When no specifier is provided, by default `%s` is assumed.\n\t *\n\t * Example:\n\t * ```javascript\n\t * string.format( 'Hello [0:%s], you owe me [1:%.2f] euros.', [ 'Peter', 12.1243 ] );\n\t * // => 'Hello Peter, you owe me 12.12 euros.'\n\t * ```\n\t *\n\t * Mapping functions should instead consist of simple strings and may not begin with a `%` character. It is\n\t * advised to use the same naming rules as for simple JavaScript functions. Type specifiers and mapping\n\t * functions are applied in the order they appear within the placeholder.\n\t *\n\t * An example, where we assume that the mapping functions `flip` and `double` where defined by the user\n\t * when creating the `formatString` function using {@link #createFormatter()}:\n\t * ```javascript\n\t * formatString( 'Hello [0:%s:flip], you owe me [1:double:%.2f] euros.', [ 'Peter', 12 ] );\n\t * // => 'Hello reteP, you owe me 24.00 euros.'\n\t * ```\n\t *\n\t * Note that there currently exist no builtin mapping functions.\n\t *\n\t * If a type specifier is used that doesn't exist, an exception is thrown. In contrast to that the use of\n\t * an unknown mapping function results in a no-op. This is on purpose to be able to use filter-like\n\t * functions that, in case they are defined for a formatter, transform a value as needed and in all other\n\t * cases simply are ignored and don't alter the value.\n\t *\n\t * @param {String} string\n\t *    the string to replace placeholders in\n\t * @param {Array} [optionalIndexedReplacements]\n\t *    an optional array of indexed replacements\n\t * @param {Object} [optionalNamedReplacements]\n\t *    an optional map of named replacements\n\t *\n\t * @return {String}\n\t *    the string with placeholders substituted for their according replacements\n\t */\n\tfunction format(string, optionalIndexedReplacements, optionalNamedReplacements) {\n\t   return DEFAULT_FORMATTER(string, optionalIndexedReplacements, optionalNamedReplacements);\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates a new format function having the same api as {@link #format()}. If the first argument is\n\t * omitted or `null`, the default formatters for type specifiers are used. Otherwise only the provided map\n\t * of specifiers is available to the returned format function. Each key of the map is a specifier character\n\t * where the `%` is omitted and the value is the formatting function. A formatting function receives the\n\t * value to format (i.e. serialize) and the sub-specifier (if any) as arguments. For example for the format\n\t * specifier `%.2f` the sub-specifier would be `.2` where for `%s` it would simply be the empty string.\n\t *\n\t * Example:\n\t * ```js\n\t * const format = string.createFormatter( {\n\t *    'm': function( value ) {\n\t *       return value.amount + ' ' + value.currency;\n\t *    },\n\t *    'p': function( value, subSpecifier ) {\n\t *       return Math.pow( value, parseInt( subSpecifier, 10 ) );\n\t *    }\n\t * } );\n\t *\n\t * format( 'You owe me [0:%m].', [ { amount: 12, currency: 'EUR' } ] );\n\t * // => 'You owe me 12 EUR.'\n\t *\n\t * format( '[0]^3 = [0:%3p]', [ 2 ] );\n\t * // => '2^3 = 8'\n\t * ```\n\t *\n\t * The second argument is completely additional to the behavior of the default {@link #format()}\n\t * function. Here a map from mapping function id to actual mapping function can be passed in. Whenever the\n\t * id of a mapping function is found within the placeholder, that mapping function is called with the\n\t * current value and its return value is either passed to the next mapping function or rendered\n\t * instead of the placeholder if there are no more mapping function ids or type specifiers within the\n\t * placeholder string.\n\t *\n\t * ```javascript\n\t * const format = string.createFormatter( null, {\n\t *    flip: function( value ) {\n\t *       return ( '' + s ).split( '' ).reverse().join( '' );\n\t *    },\n\t *    double: function( value ) {\n\t *       return value * 2;\n\t *    }\n\t * } );\n\t *\n\t * format( 'Hello [0:%s:flip], you owe me [1:double:%.2f] euros.', [ 'Peter', 12 ] );\n\t * // => 'Hello reteP, you owe me 24.00 euros.'\n\t * ```\n\t *\n\t * @param {Object} typeFormatters\n\t *    map from format specifier (single letter without leading `%`) to formatting function\n\t * @param {Object} [optionalValueMappers]\n\t *    map from mapping identifier to mapping function\n\t *\n\t * @return {Function}\n\t *    a function having the same api as {@link #format()}\n\t */\n\tfunction createFormatter() {\n\t   var typeFormatters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_FORMATTERS;\n\t   var optionalValueMappers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t\n\t   function format(string, optionalIndexedReplacements, optionalNamedReplacements) {\n\t      if (typeof string !== 'string') {\n\t         return defaultTypeFormatter(typeFormatters)(string);\n\t      }\n\t\n\t      var indexed = Array.isArray(optionalIndexedReplacements) ? optionalIndexedReplacements : [];\n\t      var named = {};\n\t      if (optionalNamedReplacements) {\n\t         named = optionalNamedReplacements || {};\n\t      } else if (!Array.isArray(optionalIndexedReplacements)) {\n\t         named = optionalIndexedReplacements || {};\n\t      }\n\t\n\t      var chars = string.split('');\n\t      var output = '';\n\t      for (var i = 0, len = chars.length; i < len; ++i) {\n\t         if (chars[i] === BACKSLASH) {\n\t            if (i + 1 === len) {\n\t               throw new Error('Unterminated escaping sequence at index ' + i + ' of string: \"' + string + '\".');\n\t            }\n\t\n\t            output += chars[++i];\n\t         } else if (chars[i] === OPENING_BRACKET) {\n\t            var closingIndex = string.indexOf(CLOSING_BRACKET, i + 1);\n\t            if (closingIndex === -1) {\n\t               throw new Error('Unterminated placeholder at index ' + i + ' of string: \"' + string + '\".');\n\t            }\n\t\n\t            var key = string.substring(i + 1, closingIndex);\n\t\n\t            output += replacePlaceholder(key, named, indexed, { string: string, index: i });\n\t\n\t            i = closingIndex;\n\t         } else {\n\t            output += chars[i];\n\t         }\n\t      }\n\t      return output;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function replacePlaceholder(placeholder, named, indexed, context) {\n\t      var specifier = '';\n\t      var subSpecifierString = '';\n\t      var placeholderParts = placeholder.split(':');\n\t      var key = placeholderParts[0];\n\t\n\t      var value = void 0;\n\t      if (INTEGER_MATCHER.test(key) && key < indexed.length) {\n\t         value = indexed[key];\n\t      } else if (key in named) {\n\t         value = named[key];\n\t      } else {\n\t         return OPENING_BRACKET + placeholder + CLOSING_BRACKET;\n\t      }\n\t\n\t      if (placeholderParts.length > 1) {\n\t\n\t         if (placeholderParts[1].charAt(0) !== '%') {\n\t            value = defaultTypeFormatter(typeFormatters)(value);\n\t         }\n\t\n\t         return placeholderParts.slice(1).reduce(function (value, part) {\n\t            if (part.indexOf('%') === 0) {\n\t               var specifierMatch = part.match(/^%(.*)(\\w)$/);\n\t               specifier = specifierMatch ? specifierMatch[2] : '';\n\t               subSpecifierString = specifierMatch ? specifierMatch[1] : '';\n\t               if (specifier in typeFormatters) {\n\t                  return typeFormatters[specifier](value, subSpecifierString);\n\t               }\n\t               var knownSpecifiers = Object.keys(typeFormatters).filter(function (_) {\n\t                  return _ !== 'default';\n\t               }).map(function (_) {\n\t                  return '%' + _;\n\t               }).join(', ');\n\t\n\t               throw new Error('Unknown format specifier \"%' + specifier + '\" for placeholder' + (' at index ' + context.index + ' of string: \"' + context.string + '\"') + (' (Known specifiers are: ' + knownSpecifiers + ').'));\n\t            }\n\t            if (part in optionalValueMappers) {\n\t               return optionalValueMappers[part](value);\n\t            }\n\t\n\t            return value;\n\t         }, value);\n\t      }\n\t\n\t      return defaultTypeFormatter(typeFormatters)(value);\n\t   }\n\t\n\t   ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return format;\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction defaultTypeFormatter(typeFormatters) {\n\t   if ('default' in typeFormatters) {\n\t      return typeFormatters['default'];\n\t   }\n\t\n\t   return DEFAULT_FORMATTERS['default'];\n\t}\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _page = __webpack_require__(30);\n\t\n\tvar _page2 = _interopRequireDefault(_page);\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _configuration = __webpack_require__(34);\n\t\n\tvar _browser = __webpack_require__(35);\n\t\n\tvar _log = __webpack_require__(36);\n\t\n\tvar _event_bus = __webpack_require__(37);\n\t\n\tvar _artifact_provider = __webpack_require__(38);\n\t\n\tvar _control_loader = __webpack_require__(39);\n\t\n\tvar _css_loader = __webpack_require__(40);\n\t\n\tvar _layout_loader = __webpack_require__(41);\n\t\n\tvar _page_loader = __webpack_require__(42);\n\t\n\tvar _theme_loader = __webpack_require__(50);\n\t\n\tvar _widget_loader = __webpack_require__(51);\n\t\n\tvar _storage = __webpack_require__(52);\n\t\n\tvar _timer = __webpack_require__(53);\n\t\n\tvar _flow_controller = __webpack_require__(54);\n\t\n\tvar _flow_service = __webpack_require__(56);\n\t\n\tvar _heartbeat = __webpack_require__(57);\n\t\n\tvar _page_service = __webpack_require__(58);\n\t\n\tvar _pagejs_router = __webpack_require__(61);\n\t\n\tvar _locale_event_manager = __webpack_require__(62);\n\t\n\tvar _visibility_event_manager = __webpack_require__(63);\n\t\n\tvar _widget_services = __webpack_require__(64);\n\t\n\tvar _tooling = __webpack_require__(67);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\tfunction create(configurationSource, assets) {\n\t\n\t   var configurationDefaults = {\n\t      baseHref: undefined,\n\t      eventBusTimeoutMs: 120 * 1000,\n\t      router: {\n\t         query: {\n\t            enabled: false\n\t         }\n\t         // 'pagejs' is not configured here:\n\t         // any deviation from the page.js library defaults must be set by the application\n\t      },\n\t      flow: {\n\t         entryPoint: {\n\t            target: 'default',\n\t            parameters: {}\n\t         }\n\t      },\n\t      i18n: {\n\t         fallback: 'en',\n\t         strict: false,\n\t         locales: {\n\t            'default': 'en'\n\t         }\n\t      },\n\t      logging: {\n\t         levels: {},\n\t         threshold: 'INFO'\n\t      },\n\t      name: 'unnamed',\n\t      theme: 'default',\n\t      storagePrefix: undefined,\n\t      tooling: {\n\t         enabled: false\n\t      }\n\t   };\n\t   var configuration = (0, _configuration.create)(configurationSource, configurationDefaults);\n\t\n\t   var browser = (0, _browser.create)();\n\t   var log = (0, _log.create)(configuration, browser);\n\t   var collectors = (0, _tooling.createCollectors)(configuration, log);\n\t\n\t   var storage = (0, _storage.create)(configuration, browser);\n\t   var timer = (0, _timer.create)(log, storage);\n\t\n\t   var artifactProvider = (0, _artifact_provider.create)(assets, browser, configuration, log);\n\t\n\t   var heartbeat = (0, _heartbeat.create)();\n\t\n\t   // MSIE Bug we have to wrap setTimeout to pass assertion\n\t   var timeoutFn = function timeoutFn(f, t) {\n\t      return setTimeout(f, t);\n\t   };\n\t   var globalEventBus = (0, _event_bus.create)(configuration, log, heartbeat.onNext, timeoutFn);\n\t\n\t   var cssLoader = (0, _css_loader.create)();\n\t   var themeLoader = (0, _theme_loader.create)(artifactProvider, cssLoader);\n\t   var layoutLoader = (0, _layout_loader.create)(artifactProvider, cssLoader);\n\t   var pageLoader = (0, _page_loader.create)(artifactProvider, collectors.pages);\n\t   var controlLoader = (0, _control_loader.create)(artifactProvider, cssLoader);\n\t   var widgetServices = {\n\t      forWidget: function forWidget() {\n\t         _assert2.default.codeIsUnreachable('Using widget services before they are available');\n\t      }\n\t   };\n\t   var widgetLoader = (0, _widget_loader.create)(log, artifactProvider, controlLoader, cssLoader, collectors.pages, function () {\n\t      var _widgetServices;\n\t\n\t      return (_widgetServices = widgetServices).forWidget.apply(_widgetServices, arguments);\n\t   });\n\t\n\t   var localeManager = (0, _locale_event_manager.create)(globalEventBus, configuration);\n\t   var visibilityManager = (0, _visibility_event_manager.create)(globalEventBus);\n\t   var pageService = (0, _page_service.create)(globalEventBus, pageLoader, layoutLoader, widgetLoader, localeManager, visibilityManager, collectors.pages);\n\t\n\t   var router = (0, _pagejs_router.create)(_page2.default, browser, configuration);\n\t\n\t   var flowController = (0, _flow_controller.create)(artifactProvider, configuration, globalEventBus, log, pageService, router, timer);\n\t   var flowService = (0, _flow_service.create)(flowController);\n\t\n\t   var toolingProviders = (0, _tooling.createProviders)(collectors);\n\t\n\t   widgetServices = (0, _widget_services.create)(artifactProvider, configuration, controlLoader, globalEventBus, flowService, log, heartbeat, pageService, storage, toolingProviders);\n\t\n\t   return {\n\t      configuration: configuration,\n\t      cssLoader: cssLoader,\n\t      artifactProvider: artifactProvider,\n\t      flowController: flowController,\n\t      flowService: flowService,\n\t      globalEventBus: globalEventBus,\n\t      heartbeat: heartbeat,\n\t      layoutLoader: layoutLoader,\n\t      log: log,\n\t      pageService: pageService,\n\t      storage: storage,\n\t      themeLoader: themeLoader,\n\t      timer: timer,\n\t      toolingProviders: toolingProviders,\n\t      widgetLoader: widgetLoader\n\t   };\n\t}\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/* globals require, module */\n\t\n\t'use strict';\n\t\n\t/**\n\t               * Module dependencies.\n\t               */\n\t\n\tvar pathtoRegexp = __webpack_require__(32);\n\t\n\t/**\n\t                                               * Module exports.\n\t                                               */\n\t\n\tmodule.exports = page;\n\t\n\t/**\n\t                        * Detect click event\n\t                        */\n\tvar clickEvent = 'undefined' !== typeof document && document.ontouchstart ? 'touchstart' : 'click';\n\t\n\t/**\n\t                                                                                                     * To work properly with the URL\n\t                                                                                                     * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n\t                                                                                                     */\n\t\n\tvar location = 'undefined' !== typeof window && (window.history.location || window.location);\n\t\n\t/**\n\t                                                                                               * Perform initial dispatch.\n\t                                                                                               */\n\t\n\tvar dispatch = true;\n\t\n\t\n\t/**\n\t                      * Decode URL components (query string, pathname, hash).\n\t                      * Accommodates both regular percent encoding and x-www-form-urlencoded format.\n\t                      */\n\tvar decodeURLComponents = true;\n\t\n\t/**\n\t                                 * Base path.\n\t                                 */\n\t\n\tvar base = '';\n\t\n\t/**\n\t                * Running flag.\n\t                */\n\t\n\tvar running;\n\t\n\t/**\n\t              * HashBang option\n\t              */\n\t\n\tvar hashbang = false;\n\t\n\t/**\n\t                       * Previous context, for capturing\n\t                       * page exit events.\n\t                       */\n\t\n\tvar prevContext;\n\t\n\t/**\n\t                  * Register `path` with callback `fn()`,\n\t                  * or route `path`, or redirection,\n\t                  * or `page.start()`.\n\t                  *\n\t                  *   page(fn);\n\t                  *   page('*', fn);\n\t                  *   page('/user/:id', load, user);\n\t                  *   page('/user/' + user.id, { some: 'thing' });\n\t                  *   page('/user/' + user.id);\n\t                  *   page('/from', '/to')\n\t                  *   page();\n\t                  *\n\t                  * @param {string|!Function|!Object} path\n\t                  * @param {Function=} fn\n\t                  * @api public\n\t                  */\n\t\n\tfunction page(path, fn) {\n\t  // <callback>\n\t  if ('function' === typeof path) {\n\t    return page('*', path);\n\t  }\n\t\n\t  // route <path> to <callback ...>\n\t  if ('function' === typeof fn) {\n\t    var route = new Route( /** @type {string} */path);\n\t    for (var i = 1; i < arguments.length; ++i) {\n\t      page.callbacks.push(route.middleware(arguments[i]));\n\t    }\n\t    // show <path> with [state]\n\t  } else if ('string' === typeof path) {\n\t    page['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n\t    // start [options]\n\t  } else {\n\t    page.start(path);\n\t  }\n\t}\n\t\n\t/**\n\t   * Callback functions.\n\t   */\n\t\n\tpage.callbacks = [];\n\tpage.exits = [];\n\t\n\t/**\n\t                  * Current path being processed\n\t                  * @type {string}\n\t                  */\n\tpage.current = '';\n\t\n\t/**\n\t                    * Number of pages navigated to.\n\t                    * @type {number}\n\t                    *\n\t                    *     page.len == 0;\n\t                    *     page('/login');\n\t                    *     page.len == 1;\n\t                    */\n\t\n\tpage.len = 0;\n\t\n\t/**\n\t               * Get or set basepath to `path`.\n\t               *\n\t               * @param {string} path\n\t               * @api public\n\t               */\n\t\n\tpage.base = function (path) {\n\t  if (0 === arguments.length) return base;\n\t  base = path;\n\t};\n\t\n\t/**\n\t    * Bind with the given `options`.\n\t    *\n\t    * Options:\n\t    *\n\t    *    - `click` bind to click events [true]\n\t    *    - `popstate` bind to popstate [true]\n\t    *    - `dispatch` perform initial dispatch [true]\n\t    *\n\t    * @param {Object} options\n\t    * @api public\n\t    */\n\t\n\tpage.start = function (options) {\n\t  options = options || {};\n\t  if (running) return;\n\t  running = true;\n\t  if (false === options.dispatch) dispatch = false;\n\t  if (false === options.decodeURLComponents) decodeURLComponents = false;\n\t  if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);\n\t  if (false !== options.click) {\n\t    document.addEventListener(clickEvent, onclick, false);\n\t  }\n\t  if (true === options.hashbang) hashbang = true;\n\t  if (!dispatch) return;\n\t  var url = hashbang && ~location.hash.indexOf('#!') ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;\n\t  page.replace(url, null, true, dispatch);\n\t};\n\t\n\t/**\n\t    * Unbind click and popstate event handlers.\n\t    *\n\t    * @api public\n\t    */\n\t\n\tpage.stop = function () {\n\t  if (!running) return;\n\t  page.current = '';\n\t  page.len = 0;\n\t  running = false;\n\t  document.removeEventListener(clickEvent, onclick, false);\n\t  window.removeEventListener('popstate', onpopstate, false);\n\t};\n\t\n\t/**\n\t    * Show `path` with optional `state` object.\n\t    *\n\t    * @param {string} path\n\t    * @param {Object=} state\n\t    * @param {boolean=} dispatch\n\t    * @param {boolean=} push\n\t    * @return {!Context}\n\t    * @api public\n\t    */\n\t\n\tpage.show = function (path, state, dispatch, push) {\n\t  var ctx = new Context(path, state);\n\t  page.current = ctx.path;\n\t  if (false !== dispatch) page.dispatch(ctx);\n\t  if (false !== ctx.handled && false !== push) ctx.pushState();\n\t  return ctx;\n\t};\n\t\n\t/**\n\t    * Goes back in the history\n\t    * Back should always let the current route push state and then go back.\n\t    *\n\t    * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n\t    * @param {Object=} state\n\t    * @api public\n\t    */\n\t\n\tpage.back = function (path, state) {\n\t  if (page.len > 0) {\n\t    // this may need more testing to see if all browsers\n\t    // wait for the next tick to go back in history\n\t    history.back();\n\t    page.len--;\n\t  } else if (path) {\n\t    setTimeout(function () {\n\t      page.show(path, state);\n\t    });\n\t  } else {\n\t    setTimeout(function () {\n\t      page.show(base, state);\n\t    });\n\t  }\n\t};\n\t\n\t\n\t/**\n\t    * Register route to redirect from one path to other\n\t    * or just redirect to another route\n\t    *\n\t    * @param {string} from - if param 'to' is undefined redirects to 'from'\n\t    * @param {string=} to\n\t    * @api public\n\t    */\n\tpage.redirect = function (from, to) {\n\t  // Define route from a path to another\n\t  if ('string' === typeof from && 'string' === typeof to) {\n\t    page(from, function (e) {\n\t      setTimeout(function () {\n\t        page.replace( /** @type {!string} */to);\n\t      }, 0);\n\t    });\n\t  }\n\t\n\t  // Wait for the push state and replace it with another\n\t  if ('string' === typeof from && 'undefined' === typeof to) {\n\t    setTimeout(function () {\n\t      page.replace(from);\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t    * Replace `path` with optional `state` object.\n\t    *\n\t    * @param {string} path\n\t    * @param {Object=} state\n\t    * @param {boolean=} init\n\t    * @param {boolean=} dispatch\n\t    * @return {!Context}\n\t    * @api public\n\t    */\n\t\n\t\n\tpage.replace = function (path, state, init, dispatch) {\n\t  var ctx = new Context(path, state);\n\t  page.current = ctx.path;\n\t  ctx.init = init;\n\t  ctx.save(); // save before dispatching, which may redirect\n\t  if (false !== dispatch) page.dispatch(ctx);\n\t  return ctx;\n\t};\n\t\n\t/**\n\t    * Dispatch the given `ctx`.\n\t    *\n\t    * @param {Context} ctx\n\t    * @api private\n\t    */\n\tpage.dispatch = function (ctx) {\n\t  var prev = prevContext,\n\t  i = 0,\n\t  j = 0;\n\t\n\t  prevContext = ctx;\n\t\n\t  function nextExit() {\n\t    var fn = page.exits[j++];\n\t    if (!fn) return nextEnter();\n\t    fn(prev, nextExit);\n\t  }\n\t\n\t  function nextEnter() {\n\t    var fn = page.callbacks[i++];\n\t\n\t    if (ctx.path !== page.current) {\n\t      ctx.handled = false;\n\t      return;\n\t    }\n\t    if (!fn) return unhandled(ctx);\n\t    fn(ctx, nextEnter);\n\t  }\n\t\n\t  if (prev) {\n\t    nextExit();\n\t  } else {\n\t    nextEnter();\n\t  }\n\t};\n\t\n\t/**\n\t    * Unhandled `ctx`. When it's not the initial\n\t    * popstate then redirect. If you wish to handle\n\t    * 404s on your own use `page('*', callback)`.\n\t    *\n\t    * @param {Context} ctx\n\t    * @api private\n\t    */\n\tfunction unhandled(ctx) {\n\t  if (ctx.handled) return;\n\t  var current;\n\t\n\t  if (hashbang) {\n\t    current = base + location.hash.replace('#!', '');\n\t  } else {\n\t    current = location.pathname + location.search;\n\t  }\n\t\n\t  if (current === ctx.canonicalPath) return;\n\t  page.stop();\n\t  ctx.handled = false;\n\t  location.href = ctx.canonicalPath;\n\t}\n\t\n\t/**\n\t   * Register an exit route on `path` with\n\t   * callback `fn()`, which will be called\n\t   * on the previous context when a new\n\t   * page is visited.\n\t   */\n\tpage.exit = function (path, fn) {\n\t  if (typeof path === 'function') {\n\t    return page.exit('*', path);\n\t  }\n\t\n\t  var route = new Route(path);\n\t  for (var i = 1; i < arguments.length; ++i) {\n\t    page.exits.push(route.middleware(arguments[i]));\n\t  }\n\t};\n\t\n\t/**\n\t    * Remove URL encoding from the given `str`.\n\t    * Accommodates whitespace in both x-www-form-urlencoded\n\t    * and regular percent-encoded form.\n\t    *\n\t    * @param {string} val - URL component to decode\n\t    */\n\tfunction decodeURLEncodedURIComponent(val) {\n\t  if (typeof val !== 'string') {return val;}\n\t  return decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n\t}\n\t\n\t/**\n\t   * Initialize a new \"request\" `Context`\n\t   * with the given `path` and optional initial `state`.\n\t   *\n\t   * @constructor\n\t   * @param {string} path\n\t   * @param {Object=} state\n\t   * @api public\n\t   */\n\t\n\tfunction Context(path, state) {\n\t  if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + (hashbang ? '#!' : '') + path;\n\t  var i = path.indexOf('?');\n\t\n\t  this.canonicalPath = path;\n\t  this.path = path.replace(base, '') || '/';\n\t  if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\t\n\t  this.title = document.title;\n\t  this.state = state || {};\n\t  this.state.path = path;\n\t  this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n\t  this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n\t  this.params = {};\n\t\n\t  // fragment\n\t  this.hash = '';\n\t  if (!hashbang) {\n\t    if (!~this.path.indexOf('#')) return;\n\t    var parts = this.path.split('#');\n\t    this.path = parts[0];\n\t    this.hash = decodeURLEncodedURIComponent(parts[1]) || '';\n\t    this.querystring = this.querystring.split('#')[0];\n\t  }\n\t}\n\t\n\t/**\n\t   * Expose `Context`.\n\t   */\n\t\n\tpage.Context = Context;\n\t\n\t/**\n\t                         * Push state.\n\t                         *\n\t                         * @api private\n\t                         */\n\t\n\tContext.prototype.pushState = function () {\n\t  page.len++;\n\t  history.pushState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n\t};\n\t\n\t/**\n\t    * Save the context state.\n\t    *\n\t    * @api public\n\t    */\n\t\n\tContext.prototype.save = function () {\n\t  history.replaceState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n\t};\n\t\n\t/**\n\t    * Initialize `Route` with the given HTTP `path`,\n\t    * and an array of `callbacks` and `options`.\n\t    *\n\t    * Options:\n\t    *\n\t    *   - `sensitive`    enable case-sensitive routes\n\t    *   - `strict`       enable strict matching for trailing slashes\n\t    *\n\t    * @constructor\n\t    * @param {string} path\n\t    * @param {Object=} options\n\t    * @api private\n\t    */\n\t\n\tfunction Route(path, options) {\n\t  options = options || {};\n\t  this.path = path === '*' ? '(.*)' : path;\n\t  this.method = 'GET';\n\t  this.regexp = pathtoRegexp(this.path,\n\t  this.keys = [],\n\t  options);\n\t}\n\t\n\t/**\n\t   * Expose `Route`.\n\t   */\n\t\n\tpage.Route = Route;\n\t\n\t/**\n\t                     * Return route middleware with\n\t                     * the given callback `fn()`.\n\t                     *\n\t                     * @param {Function} fn\n\t                     * @return {Function}\n\t                     * @api public\n\t                     */\n\t\n\tRoute.prototype.middleware = function (fn) {\n\t  var self = this;\n\t  return function (ctx, next) {\n\t    if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n\t    next();\n\t  };\n\t};\n\t\n\t/**\n\t    * Check if this route matches `path`, if so\n\t    * populate `params`.\n\t    *\n\t    * @param {string} path\n\t    * @param {Object} params\n\t    * @return {boolean}\n\t    * @api private\n\t    */\n\t\n\tRoute.prototype.match = function (path, params) {\n\t  var keys = this.keys,\n\t  qsIndex = path.indexOf('?'),\n\t  pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n\t  m = this.regexp.exec(decodeURIComponent(pathname));\n\t\n\t  if (!m) return false;\n\t\n\t  for (var i = 1, len = m.length; i < len; ++i) {\n\t    var key = keys[i - 1];\n\t    var val = decodeURLEncodedURIComponent(m[i]);\n\t    if (val !== undefined || !hasOwnProperty.call(params, key.name)) {\n\t      params[key.name] = val;\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t\n\t/**\n\t    * Handle \"populate\" events.\n\t    */\n\t\n\tvar onpopstate = function () {\n\t  var loaded = false;\n\t  if ('undefined' === typeof window) {\n\t    return;\n\t  }\n\t  if (document.readyState === 'complete') {\n\t    loaded = true;\n\t  } else {\n\t    window.addEventListener('load', function () {\n\t      setTimeout(function () {\n\t        loaded = true;\n\t      }, 0);\n\t    });\n\t  }\n\t  return function onpopstate(e) {\n\t    if (!loaded) return;\n\t    if (e.state) {\n\t      var path = e.state.path;\n\t      page.replace(path, e.state);\n\t    } else {\n\t      page.show(location.pathname + location.hash, undefined, undefined, false);\n\t    }\n\t  };\n\t}();\n\t/**\n\t      * Handle \"click\" events.\n\t      */\n\t\n\tfunction onclick(e) {\n\t\n\t  if (1 !== which(e)) return;\n\t\n\t  if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t  if (e.defaultPrevented) return;\n\t\n\t\n\t\n\t  // ensure link\n\t  // use shadow dom when available\n\t  var el = e.path ? e.path[0] : e.target;\n\t  while (el && 'A' !== el.nodeName) {el = el.parentNode;}\n\t  if (!el || 'A' !== el.nodeName) return;\n\t\n\t\n\t\n\t  // Ignore if tag has\n\t  // 1. \"download\" attribute\n\t  // 2. rel=\"external\" attribute\n\t  if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\t\n\t  // ensure non-hash for the same path\n\t  var link = el.getAttribute('href');\n\t  if (!hashbang && el.pathname === location.pathname && (el.hash || '#' === link)) return;\n\t\n\t\n\t\n\t  // Check for mailto: in the href\n\t  if (link && link.indexOf('mailto:') > -1) return;\n\t\n\t  // check target\n\t  if (el.target) return;\n\t\n\t  // x-origin\n\t  if (!sameOrigin(el.href)) return;\n\t\n\t\n\t\n\t  // rebuild path\n\t  var path = el.pathname + el.search + (el.hash || '');\n\t\n\t  // strip leading \"/[drive letter]:\" on NW.js on Windows\n\t  if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n\t    path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n\t  }\n\t\n\t  // same page\n\t  var orig = path;\n\t\n\t  if (path.indexOf(base) === 0) {\n\t    path = path.substr(base.length);\n\t  }\n\t\n\t  if (hashbang) path = path.replace('#!', '');\n\t\n\t  if (base && orig === path) return;\n\t\n\t  e.preventDefault();\n\t  page.show(orig);\n\t}\n\t\n\t/**\n\t   * Event button.\n\t   */\n\t\n\tfunction which(e) {\n\t  e = e || window.event;\n\t  return null === e.which ? e.button : e.which;\n\t}\n\t\n\t/**\n\t   * Check if `href` is the same origin.\n\t   */\n\t\n\tfunction sameOrigin(href) {\n\t  var origin = location.protocol + '//' + location.hostname;\n\t  if (location.port) origin += ':' + location.port;\n\t  return href && 0 === href.indexOf(origin);\n\t}\n\t\n\tpage.sameOrigin = sameOrigin;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports) {\n\n\t'use strict'; // shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout() {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t})();\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch (e) {\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch (e) {\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e) {\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e) {\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while (len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () {return '/';};\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function () {return 0;};\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var isarray = __webpack_require__(33);\n\t\n\t/**\n\t                                                                                                                                                                                                                                                                                                                         * Expose `pathToRegexp`.\n\t                                                                                                                                                                                                                                                                                                                         */\n\tmodule.exports = pathToRegexp;\n\tmodule.exports.parse = parse;\n\tmodule.exports.compile = compile;\n\tmodule.exports.tokensToFunction = tokensToFunction;\n\tmodule.exports.tokensToRegExp = tokensToRegExp;\n\t\n\t/**\n\t                                                 * The main path matching regexp utility.\n\t                                                 *\n\t                                                 * @type {RegExp}\n\t                                                 */\n\tvar PATH_REGEXP = new RegExp([\n\t// Match escaped characters that would otherwise appear in future matches.\n\t// This allows the user to escape special characters that won't transform.\n\t'(\\\\\\\\.)',\n\t// Match Express-style parameters and un-named parameters with a prefix\n\t// and optional suffixes. Matches appear as:\n\t//\n\t// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n\t// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n\t// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n\t'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^()])+)\\\\))([+*?])?|(\\\\*))'].\n\tjoin('|'), 'g');\n\t\n\t/**\n\t                  * Parse a string for the raw tokens.\n\t                  *\n\t                  * @param  {String} str\n\t                  * @return {Array}\n\t                  */\n\tfunction parse(str) {\n\t  var tokens = [];\n\t  var key = 0;\n\t  var index = 0;\n\t  var path = '';\n\t  var res;\n\t\n\t  while ((res = PATH_REGEXP.exec(str)) != null) {\n\t    var m = res[0];\n\t    var escaped = res[1];\n\t    var offset = res.index;\n\t    path += str.slice(index, offset);\n\t    index = offset + m.length;\n\t\n\t    // Ignore already escaped sequences.\n\t    if (escaped) {\n\t      path += escaped[1];\n\t      continue;\n\t    }\n\t\n\t    // Push the current path onto the tokens.\n\t    if (path) {\n\t      tokens.push(path);\n\t      path = '';\n\t    }\n\t\n\t    var prefix = res[2];\n\t    var name = res[3];\n\t    var capture = res[4];\n\t    var group = res[5];\n\t    var suffix = res[6];\n\t    var asterisk = res[7];\n\t\n\t    var repeat = suffix === '+' || suffix === '*';\n\t    var optional = suffix === '?' || suffix === '*';\n\t    var delimiter = prefix || '/';\n\t    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?');\n\t\n\t    tokens.push({\n\t      name: name || key++,\n\t      prefix: prefix || '',\n\t      delimiter: delimiter,\n\t      optional: optional,\n\t      repeat: repeat,\n\t      pattern: escapeGroup(pattern) });\n\t\n\t  }\n\t\n\t  // Match any characters still remaining.\n\t  if (index < str.length) {\n\t    path += str.substr(index);\n\t  }\n\t\n\t  // If the path exists, push it onto the end.\n\t  if (path) {\n\t    tokens.push(path);\n\t  }\n\t\n\t  return tokens;\n\t}\n\t\n\t/**\n\t   * Compile a string to a template function for the path.\n\t   *\n\t   * @param  {String}   str\n\t   * @return {Function}\n\t   */\n\tfunction compile(str) {\n\t  return tokensToFunction(parse(str));\n\t}\n\t\n\t/**\n\t   * Expose a method for transforming tokens into the path function.\n\t   */\n\tfunction tokensToFunction(tokens) {\n\t  // Compile all the tokens into regexps.\n\t  var matches = new Array(tokens.length);\n\t\n\t  // Compile all the patterns before compilation.\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    if (_typeof(tokens[i]) === 'object') {\n\t      matches[i] = new RegExp('^' + tokens[i].pattern + '$');\n\t    }\n\t  }\n\t\n\t  return function (obj) {\n\t    var path = '';\n\t    var data = obj || {};\n\t\n\t    for (var i = 0; i < tokens.length; i++) {\n\t      var token = tokens[i];\n\t\n\t      if (typeof token === 'string') {\n\t        path += token;\n\t\n\t        continue;\n\t      }\n\t\n\t      var value = data[token.name];\n\t      var segment;\n\t\n\t      if (value == null) {\n\t        if (token.optional) {\n\t          continue;\n\t        } else {\n\t          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n\t        }\n\t      }\n\t\n\t      if (isarray(value)) {\n\t        if (!token.repeat) {\n\t          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received \"' + value + '\"');\n\t        }\n\t\n\t        if (value.length === 0) {\n\t          if (token.optional) {\n\t            continue;\n\t          } else {\n\t            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n\t          }\n\t        }\n\t\n\t        for (var j = 0; j < value.length; j++) {\n\t          segment = encodeURIComponent(value[j]);\n\t\n\t          if (!matches[i].test(segment)) {\n\t            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n\t          }\n\t\n\t          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n\t        }\n\t\n\t        continue;\n\t      }\n\t\n\t      segment = encodeURIComponent(value);\n\t\n\t      if (!matches[i].test(segment)) {\n\t        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n\t      }\n\t\n\t      path += token.prefix + segment;\n\t    }\n\t\n\t    return path;\n\t  };\n\t}\n\t\n\t/**\n\t   * Escape a regular expression string.\n\t   *\n\t   * @param  {String} str\n\t   * @return {String}\n\t   */\n\tfunction escapeString(str) {\n\t  return str.replace(/([.+*?=^!:${}()[\\]|\\/])/g, '\\\\$1');\n\t}\n\t\n\t/**\n\t   * Escape the capturing group by escaping special characters and meaning.\n\t   *\n\t   * @param  {String} group\n\t   * @return {String}\n\t   */\n\tfunction escapeGroup(group) {\n\t  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n\t}\n\t\n\t/**\n\t   * Attach the keys as a property of the regexp.\n\t   *\n\t   * @param  {RegExp} re\n\t   * @param  {Array}  keys\n\t   * @return {RegExp}\n\t   */\n\tfunction attachKeys(re, keys) {\n\t  re.keys = keys;\n\t  return re;\n\t}\n\t\n\t/**\n\t   * Get the flags for a regexp from the options.\n\t   *\n\t   * @param  {Object} options\n\t   * @return {String}\n\t   */\n\tfunction flags(options) {\n\t  return options.sensitive ? '' : 'i';\n\t}\n\t\n\t/**\n\t   * Pull out keys from a regexp.\n\t   *\n\t   * @param  {RegExp} path\n\t   * @param  {Array}  keys\n\t   * @return {RegExp}\n\t   */\n\tfunction regexpToRegexp(path, keys) {\n\t  // Use a negative lookahead to match only capturing groups.\n\t  var groups = path.source.match(/\\((?!\\?)/g);\n\t\n\t  if (groups) {\n\t    for (var i = 0; i < groups.length; i++) {\n\t      keys.push({\n\t        name: i,\n\t        prefix: null,\n\t        delimiter: null,\n\t        optional: false,\n\t        repeat: false,\n\t        pattern: null });\n\t\n\t    }\n\t  }\n\t\n\t  return attachKeys(path, keys);\n\t}\n\t\n\t/**\n\t   * Transform an array into a regexp.\n\t   *\n\t   * @param  {Array}  path\n\t   * @param  {Array}  keys\n\t   * @param  {Object} options\n\t   * @return {RegExp}\n\t   */\n\tfunction arrayToRegexp(path, keys, options) {\n\t  var parts = [];\n\t\n\t  for (var i = 0; i < path.length; i++) {\n\t    parts.push(pathToRegexp(path[i], keys, options).source);\n\t  }\n\t\n\t  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\t\n\t  return attachKeys(regexp, keys);\n\t}\n\t\n\t/**\n\t   * Create a path regexp from string input.\n\t   *\n\t   * @param  {String} path\n\t   * @param  {Array}  keys\n\t   * @param  {Object} options\n\t   * @return {RegExp}\n\t   */\n\tfunction stringToRegexp(path, keys, options) {\n\t  var tokens = parse(path);\n\t  var re = tokensToRegExp(tokens, options);\n\t\n\t  // Attach keys back to the regexp.\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    if (typeof tokens[i] !== 'string') {\n\t      keys.push(tokens[i]);\n\t    }\n\t  }\n\t\n\t  return attachKeys(re, keys);\n\t}\n\t\n\t/**\n\t   * Expose a function for taking tokens and returning a RegExp.\n\t   *\n\t   * @param  {Array}  tokens\n\t   * @param  {Array}  keys\n\t   * @param  {Object} options\n\t   * @return {RegExp}\n\t   */\n\tfunction tokensToRegExp(tokens, options) {\n\t  options = options || {};\n\t\n\t  var strict = options.strict;\n\t  var end = options.end !== false;\n\t  var route = '';\n\t  var lastToken = tokens[tokens.length - 1];\n\t  var endsWithSlash = typeof lastToken === 'string' && /\\/$/.test(lastToken);\n\t\n\t  // Iterate over the tokens and create our regexp string.\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    var token = tokens[i];\n\t\n\t    if (typeof token === 'string') {\n\t      route += escapeString(token);\n\t    } else {\n\t      var prefix = escapeString(token.prefix);\n\t      var capture = token.pattern;\n\t\n\t      if (token.repeat) {\n\t        capture += '(?:' + prefix + capture + ')*';\n\t      }\n\t\n\t      if (token.optional) {\n\t        if (prefix) {\n\t          capture = '(?:' + prefix + '(' + capture + '))?';\n\t        } else {\n\t          capture = '(' + capture + ')?';\n\t        }\n\t      } else {\n\t        capture = prefix + '(' + capture + ')';\n\t      }\n\t\n\t      route += capture;\n\t    }\n\t  }\n\t\n\t  // In non-strict mode we allow a slash at the end of match. If the path to\n\t  // match already ends with a slash, we remove it for consistency. The slash\n\t  // is valid at the end of a path match, not in the middle. This is important\n\t  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\t  if (!strict) {\n\t    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\\\/(?=$))?';\n\t  }\n\t\n\t  if (end) {\n\t    route += '$';\n\t  } else {\n\t    // In non-ending mode, we need the capturing groups to match as much as\n\t    // possible by using a positive lookahead to the end or next path segment.\n\t    route += strict && endsWithSlash ? '' : '(?=\\\\/|$)';\n\t  }\n\t\n\t  return new RegExp('^' + route, flags(options));\n\t}\n\t\n\t/**\n\t   * Normalize the given path string, returning a regular expression.\n\t   *\n\t   * An empty array can be passed in for the keys, which will hold the\n\t   * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n\t   * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n\t   *\n\t   * @param  {(String|RegExp|Array)} path\n\t   * @param  {Array}                 [keys]\n\t   * @param  {Object}                [options]\n\t   * @return {RegExp}\n\t   */\n\tfunction pathToRegexp(path, keys, options) {\n\t  keys = keys || [];\n\t\n\t  if (!isarray(keys)) {\n\t    options = keys;\n\t    keys = [];\n\t  } else if (!options) {\n\t    options = {};\n\t  }\n\t\n\t  if (path instanceof RegExp) {\n\t    return regexpToRegexp(path, keys, options);\n\t  }\n\t\n\t  if (isarray(path)) {\n\t    return arrayToRegexp(path, keys, options);\n\t  }\n\t\n\t  return stringToRegexp(path, keys, options);\n\t}\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports) {\n\n\t'use strict';module.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Module providing the Configuration factory.\n\t *\n\t * To use the Configuration in a widget, request the {@link widget_services#axConfiguration axConfiguration}\n\t * injection. In compatibility mode with LaxarJS v1.x, it is also available under `laxar.configuration`.\n\t *\n\t * @module configuration\n\t */\n\tfunction create(source, defaults) {\n\t\n\t  /**\n\t   * Provides access to the configuration that was passed during application bootstrapping.\n\t   *\n\t   * A *Configuration* instance provides convenient readonly access to the underlying LaxarJS\n\t   * application bootstrapping configuration. The configuration values are passed to\n\t   * {@link laxar#bootstrap()} on startup (before LaxarJS v2.x, these configuration values were read from\n\t   * `window.laxar`). When using the LaxarJS application template, the configuration values are set in the\n\t   * file `application/application.js` under your project's root directory.\n\t   *\n\t   * @name Configuration\n\t   * @constructor\n\t   */\n\t  return { get: get, ensure: ensure };\n\t\n\t  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t  /**\n\t   * Returns the configured value for the specified attribute path or `undefined` in case it wasn't\n\t   * configured. If a default value was passed as second argument this is returned instead of `undefined`.\n\t   *\n\t   * Services should use this to get configuration values for which there are universal fallback behaviors.\n\t   *\n\t   * Examples:\n\t   * ```js\n\t   * // ... inject `axConfiguration` as parameter `config` ...\n\t   * config.get( 'logging.threshold' ); // -> 'INFO'\n\t   * config.get( 'iDontExist' ); // -> undefined\n\t   * config.get( 'iDontExist', 42 ); // -> 42\n\t   * ```\n\t   *\n\t   * @param {String} key\n\t   *    a  path (using `.` as separator) to the property in the configuration object\n\t   * @param {*} [optionalDefault]\n\t   *    the value to return if no value was set for `key`\n\t   *\n\t   * @return {*}\n\t   *    either the configured value, `undefined` or `optionalDefault`\n\t   *\n\t   * @memberof Configuration\n\t   */\n\t  function get(key, optionalDefault) {\n\t    var value = (0, _object.path)(source, key);\n\t    return value !== undefined ? value : (0, _object.path)(defaults, key, optionalDefault);\n\t  }\n\t\n\t  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t  /**\n\t   * Retrieves a configuration value by key, failing if it is `undefined` or `null`.\n\t   *\n\t   * Services should use this to get configuration values for which no universal default or fallback exists.\n\t   *\n\t   * Examples:\n\t   * ```js\n\t   * // ... inject `axConfiguration` as parameter `config` ...\n\t   * config.ensure( 'logging.threshold' ); // -> 'INFO'\n\t   * config.ensure( 'iDontExist' ); // -> throws\n\t   * ```\n\t   *\n\t   * @param {String} key\n\t   *    a  path (using `.` as separator) to the property in the configuration object\n\t   *\n\t   * @return {*}\n\t   *    the configured value (if `undefined` or `null`, an exception is thrown instead)\n\t   *\n\t   * @memberof Configuration\n\t   */\n\t  function ensure(key) {\n\t    var value = get(key);\n\t    (0, _assert2.default)(value).isNotNull('Configuration is missing mandatory entry: ' + key);\n\t    return value;\n\t  }\n\t}\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Module providing the Browser factory.\n\t *\n\t * Provides abstractions for browser APIs used internally by LaxarJS, which might need a different\n\t * implementation in a server-side environment, or for testing.\n\t * This service is internal to LaxarJS and not available to widgets and activities.\n\t *\n\t * @module browser\n\t */\n\t\n\t/**\n\t * Create a browser abstraction environment.\n\t *\n\t * @return {Browser}\n\t *    a fresh browser instance\n\t *\n\t * @private\n\t */\n\tfunction create() {\n\t\n\t   // for the MSIE `resolve`-workaround, cache the temporary HTML document\n\t   var resolveDoc = void 0;\n\t   var resolveDocBase = void 0;\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * A brower mostly abstracts over the location-related DOM window APIs, and provides a console wrapper.\n\t    * Since it is internal to LaxarJS, only relevant APIs are included.\n\t    *\n\t    * @name Browser\n\t    * @constructor\n\t    */\n\t   return {\n\t      /**\n\t      * Calculates an absolute URL from a (relative) URL, and an optional base URL.\n\t      *\n\t      * If no base URL is given, the `document.baseURI` is used instead. The given base URL may also be\n\t      * relative, in which case it is resolved against the `document.baseURI` before resolving the first URL.\n\t      *\n\t      * For browser environments that do not support the `new URL( url, baseUrl )` constructor for resolving\n\t      * URLs or that do not support `document.baseURI`, fallback mechanisms are used.\n\t      *\n\t      * @param {String} url\n\t      *    the URL to resolve\n\t      * @param {String} baseUrl\n\t      *    the base to resolve from\n\t      *\n\t      * @return {String}\n\t      *    an absolute URL based on the given URL\n\t      *\n\t      * @type {Function}\n\t      * @memberof Browser\n\t      */\n\t      resolve: selectResolver(),\n\t\n\t      /**\n\t       * Provides easily mocked access to `window.location`\n\t       *\n\t       * @return {Location}\n\t       *    the current (window's) DOM location\n\t       *\n\t       * @type {Function}\n\t       * @memberof Browser\n\t       */\n\t      location: function location() {\n\t         return window.location;\n\t      },\n\t\n\t      /**\n\t       * Provides easily mocked access to `window.fetch` or a suitable polyfill:\n\t       *\n\t       * @param {String|Request} input\n\t       *    the URL to fetch or the request to perform\n\t       * @param {Object} [init]\n\t       *    additional options, described here in more detail:\n\t       *    https://developer.mozilla.org/en-US/docs/Web/API/Globalfetch/fetch#Parameters\n\t       *\n\t       * @return {Promise<Response>}\n\t       *    the resulting promise\n\t       *\n\t       * @type {Function}\n\t       * @memberof Browser\n\t       */\n\t      fetch: function fetch(input, init) {\n\t         return window.fetch(input, init);\n\t      },\n\t\n\t      /**\n\t       * Provides easily mocked access to `window.console`:\n\t       *\n\t       * @return {Console}\n\t       *    the browser console promise\n\t       *\n\t       * @type {Function}\n\t       * @memberof Browser\n\t       */\n\t      console: function console() {\n\t         return window.console;\n\t      }\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   // perform the exception-based feature-detect only once (for performance, and to be nice to debugger users)\n\t   function selectResolver() {\n\t      try {\n\t         var href = window.location.href;\n\t\n\t         return new URL('', href).href === href ? resolveUsingUrl : resolveUsingLink;\n\t      } catch (e) {\n\t         return resolveUsingLink;\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   // Resolve using the DOM URL API (Chrome, Firefox, Safari, MS Edge)\n\t   function resolveUsingUrl(url, baseUrl) {\n\t      var absoluteBaseUrl = baseUrl ? abs(baseUrl) : document.baseURI || abs('.');\n\t      return new URL(url, absoluteBaseUrl).href;\n\t\n\t      function abs(url) {\n\t         return new URL(url, document.baseURI || resolveUsingLink('.'));\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   // Resolve using the a-tag fallback (MSIE)\n\t   function resolveUsingLink(url, baseUrl) {\n\t      var absoluteBaseUrl = abs(baseUrl);\n\t      if (!resolveDoc) {\n\t         resolveDoc = document.implementation.createHTMLDocument('');\n\t         resolveDocBase = resolveDoc.createElement('base');\n\t         resolveDoc.head.appendChild(resolveDocBase);\n\t      }\n\t      resolveDocBase.href = absoluteBaseUrl;\n\t      return abs(url, resolveDoc);\n\t\n\t      function abs(url) {\n\t         var baseDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n\t\n\t         var a = baseDocument.createElement('a');\n\t         // MSIE does not process empty URLs correctly (http://stackoverflow.com/a/7966835)\n\t         a.href = url || '#';\n\t         return url ? a.href : a.href.slice(0, -1);\n\t      }\n\t   }\n\t}\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.BLACKBOX = exports.levels = undefined;\n\texports.create = create;\n\texports.createConsoleChannel = createConsoleChannel;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n\t                                                                                                                                                                                                     * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                     * Released under the MIT license.\n\t                                                                                                                                                                                                     * http://laxarjs.org/license\n\t                                                                                                                                                                                                     */\n\t/**\n\t * Module providing the Logger factory.\n\t *\n\t * To use the Log service in a widget, request the {@link widget_services#axLog axLog} injection.\n\t *\n\t * @module log\n\t */\n\t\n\t\n\t/**\n\t * Log levels that are available by default, sorted by increasing severity:\n\t *\n\t * - TRACE (level 100)\n\t * - DEBUG (level 200)\n\t * - INFO (level 300)\n\t * - WARN (level 400)\n\t * - ERROR (level 500)\n\t * - FATAL (level 600)\n\t *\n\t * @type {Object}\n\t * @name levels\n\t */\n\tvar levels = exports.levels = {\n\t   TRACE: 100,\n\t   DEBUG: 200,\n\t   INFO: 300,\n\t   WARN: 400,\n\t   ERROR: 500,\n\t   FATAL: 600\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Pass this as an additional replacement parameter to a log-method, in order to blackbox your logging call.\n\t * Blackboxed callers are ignored when logging the source information (file, line).\n\t *\n\t * @type {Object}\n\t * @name BLACKBOX\n\t */\n\tvar BLACKBOX = exports.BLACKBOX = {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction create(configuration, optionalBrowser) {\n\t   var startChannels = optionalBrowser ? [createConsoleChannel(optionalBrowser)] : [];\n\t   return new Logger(configuration, startChannels);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * A flexible logger.\n\t *\n\t * It is recommended to prefer this logger over `console.log` and friends, at least for any log messages that\n\t * might make their way into production code. For once, this logger is safe to use across browsers and allows\n\t * to attach additional channels for routing messages to (i.e. to send them to a server process for\n\t * persistence). If a browser console is available, messages will be logged to that console using the builtin\n\t * console channel.\n\t * For testing, a silent mock for this logger is used, making it simple to test the logging behavior of\n\t * widgets and activities, while avoiding noisy log messages in the test runner output.\n\t *\n\t * All messages produced\n\t *\n\t * @constructor\n\t * @private\n\t */\n\tfunction Logger(configuration) {\n\t   var _this = this;\n\t\n\t   var channels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t   this.levels = Object.assign({}, levels, configuration.get('logging.levels'));\n\t\n\t   this.queueSize_ = 100;\n\t   this.channels_ = channels;\n\t   this.counter_ = 0;\n\t   this.messageQueue_ = [];\n\t   this.threshold_ = 0;\n\t   this.tags_ = {};\n\t\n\t   this.levelToName_ = function (levels) {\n\t      var result = {};\n\t      (0, _object.forEach)(levels, function (level, levelName) {\n\t         _this[levelName.toLowerCase()] = function () {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t               args[_key] = arguments[_key];\n\t            }\n\t\n\t            _this.log.apply(_this, [level].concat(args, [BLACKBOX]));\n\t         };\n\t         result[level] = levelName;\n\t      });\n\t      return result;\n\t   }(this.levels);\n\t\n\t   this.setLogThreshold(configuration.ensure('logging.threshold'));\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message. A message may contain placeholders in the form `[#]` where `#` resembles the index\n\t * within the list of `replacements`. `replacements` are incrementally counted starting at `0`. If the\n\t * log level is below the configured log threshold, the message is simply discarded.\n\t *\n\t * It is recommended not to use this method directly, but instead one of the short cut methods for the\n\t * according log level.\n\t *\n\t * @param {Number} level\n\t *    the level for this message\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.log = function (level, message) {\n\t   for (var _len2 = arguments.length, replacements = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t      replacements[_key2 - 2] = arguments[_key2];\n\t   }\n\t\n\t   if (level < this.threshold_) {\n\t      return;\n\t   }\n\t\n\t   var blackboxDepth = 0;\n\t   while (replacements[replacements.length - 1] === BLACKBOX) {\n\t      ++blackboxDepth;\n\t      replacements.pop();\n\t   }\n\t\n\t   var messageObject = {\n\t      id: this.counter_++,\n\t      level: this.levelToName_[level],\n\t      text: message,\n\t      replacements: replacements,\n\t      time: new Date(),\n\t      tags: this.gatherTags(),\n\t      sourceInfo: gatherSourceInformation(blackboxDepth + 1) // add 1 depth to exclude this function\n\t   };\n\t\n\t   this.channels_.forEach(function (channel) {\n\t      channel(messageObject);\n\t   });\n\t\n\t   if (this.messageQueue_.length === this.queueSize_) {\n\t      this.messageQueue_.shift();\n\t   }\n\t   this.messageQueue_.push(messageObject);\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message in log level `TRACE`. See {@link Logger#log} for further information.\n\t *\n\t * *Important note*: This method is only available, if no custom log levels were defined via\n\t * configuration or custom log levels include this method as well.\n\t *\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.trace = function () {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message in log level `DEBUG`. See {@link Logger#log} for further information.\n\t *\n\t * *Important note*: This method is only available, if no custom log levels were defined via\n\t * configuration or custom log levels include this method as well.\n\t *\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.debug = function () {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message in log level `INFO`. See {@link Logger#log} for further information.\n\t *\n\t * *Important note*: This method is only available, if no custom log levels were defined via\n\t * configuration or custom log levels include this method as well.\n\t *\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.info = function () {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message in log level `WARN`. See {@link Logger#log} for further information.\n\t *\n\t * *Important note*: This method is only available, if no custom log levels were defined via\n\t * configuration or custom log levels include this method as well.\n\t *\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.warn = function () {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message in log level `ERROR`. See {@link Logger#log} for further information.\n\t *\n\t * *Important note*: This method is only available, if no custom log levels were defined via\n\t * configuration or custom log levels include this method as well.\n\t *\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.error = function () {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Logs a message in log level `FATAL`. See {@link Logger#log} for further information.\n\t *\n\t * *Important note*: This method is only available, if no custom log levels were defined via\n\t * configuration or custom log levels include this method as well.\n\t *\n\t * @param {String} message\n\t *    the message to log\n\t * @param {...*} replacements\n\t *    objects that should replace placeholders within the message\n\t */\n\tLogger.prototype.fatal = function () {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Adds a new channel to forward log messages to. A channel is called synchronously for every log message\n\t * and can do whatever necessary to handle the message according to its task. Note that blocking or\n\t * performance critical actions within a channel should always take place asynchronously to prevent from\n\t * blocking the application. Ideally a web worker is used for heavier background tasks.\n\t *\n\t * Each message is an object having the following properties:\n\t * - `id`: the unique, ascending id of the log message\n\t * - `level`: the log level of the message in string representation\n\t * - `text`: the actual message that was logged\n\t * - `replacements`: the raw list of replacements passed along the message\n\t * - `time`: JavaScript Date instance when the message was logged\n\t * - `tags`: A map of all log tags currently set for the logger\n\t * - `sourceInfo`: if supported, a map containing `file`, `line` and `char` where the logging took place\n\t *\n\t * @param {Function} channel\n\t *    the log channel to add\n\t */\n\tLogger.prototype.addLogChannel = function (channel) {\n\t   this.channels_.push(channel);\n\t   this.messageQueue_.forEach(function (entry) {\n\t      channel(entry);\n\t   });\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Removes a log channel and thus stops sending further messages to it.\n\t *\n\t * @param {Function} channel\n\t *    the log channel to remove\n\t */\n\tLogger.prototype.removeLogChannel = function (channel) {\n\t   var channelIndex = this.channels_.indexOf(channel);\n\t   if (channelIndex > -1) {\n\t      this.channels_.splice(channelIndex, 1);\n\t   }\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Adds a value for a log tag. If a tag is already known, the value is appended to the existing one using a\n\t * `;` as separator. Note that no formatting of the value takes place and a non-string value will just have\n\t * its appropriate `toString` method called.\n\t *\n\t * Log tags can be used to mark a set of log messages with a value giving further information on the\n\t * current logging context. For example laxar sets a tag `'INST'` with a unique-like identifier for the\n\t * current browser client. If then for example log messages are persisted on a server, messages belonging\n\t * to the same client can be accumulated.\n\t *\n\t * @param {String} tag\n\t *    the id of the tag to add a value for\n\t * @param {String} value\n\t *    the value to add\n\t */\n\tLogger.prototype.addTag = function (tag, value) {\n\t   (0, _assert2.default)(tag).hasType(String).isNotNull();\n\t\n\t   if (!this.tags_[tag]) {\n\t      this.tags_[tag] = [value];\n\t   } else {\n\t      this.tags_[tag].push(value);\n\t   }\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Sets a value for a log tag. If a tag is already known, the value is overwritten by the given one. Note\n\t * that no formatting of the value takes place and a non-string value will just have its appropriate\n\t * `toString` method called. For further information on log tags, see {@link Logger#addTag}.\n\t *\n\t * @param {String} tag\n\t *    the id of the tag to set a value for\n\t * @param {String} value\n\t *    the value to set\n\t */\n\tLogger.prototype.setTag = function (tag, value) {\n\t   (0, _assert2.default)(tag).hasType(String).isNotNull();\n\t\n\t   this.tags_[tag] = [value];\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Removes a log tag. For further information on log tags, see {@link Logger#addTag}.\n\t *\n\t * @param {String} tag\n\t *    the id of the tag to set a value for\n\t */\n\tLogger.prototype.removeTag = function (tag) {\n\t   (0, _assert2.default)(tag).hasType(String).isNotNull();\n\t\n\t   delete this.tags_[tag];\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Returns a map of all tags. If there are multiple values for the same tag, their values are concatenated\n\t * using a `;` as separator. For further information on log tags, see {@link Logger#addTag}.\n\t *\n\t * @return {Object}\n\t *    a mapping from tag to its value(s)\n\t */\n\tLogger.prototype.gatherTags = function () {\n\t   var tags = {};\n\t   (0, _object.forEach)(this.tags_, function (values, tag) {\n\t      tags[tag] = values.join(';');\n\t   });\n\t   return tags;\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Sets the threshold for log messages. Log messages with a lower level will be discarded upon logging.\n\t *\n\t * @param {String|Number} threshold\n\t *    the numeric or the string value of the log level to use as threshold\n\t */\n\tLogger.prototype.setLogThreshold = function (threshold) {\n\t   if (typeof threshold === 'string') {\n\t      _assert2.default.state(threshold.toUpperCase() in this.levels, 'Unsupported log threshold \"' + threshold + '\".');\n\t      this.threshold_ = this.levels[threshold.toUpperCase()];\n\t   } else {\n\t      (0, _assert2.default)(threshold).hasType(Number);\n\t      this.threshold_ = threshold;\n\t   }\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar EMPTY_CALL_INFORMATION = { file: '?', line: -1, char: -1 };\n\t\n\tfunction gatherSourceInformation(blackboxDepth) {\n\t   var e = new Error();\n\t\n\t   if (!e.stack) {\n\t      try {\n\t         // IE >= 10 only generates a stack if the error object is really thrown\n\t         throw new Error();\n\t      } catch (err) {\n\t         e = err;\n\t      }\n\t      if (!e.stack) {\n\t         return EMPTY_CALL_INFORMATION;\n\t      }\n\t   }\n\t\n\t   var rows = e.stack.split(/[\\n]/);\n\t   var interpret = void 0;\n\t   if (rows[0] === 'Error') {\n\t      rows.shift();\n\t      interpret = chromeStackInterpreter;\n\t   } else if (rows[0].indexOf('@') !== -1) {\n\t      interpret = firefoxStackInterpreter;\n\t   } else {\n\t      return EMPTY_CALL_INFORMATION;\n\t   }\n\t\n\t   var row = rows[blackboxDepth + 1]; // add 1 depth to exclude this function\n\t   return row ? interpret(row) : EMPTY_CALL_INFORMATION;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar CHROME_AND_IE_STACK_MATCHER = /\\(?([^\\( ]+):(\\d+):(\\d+)\\)?$/;\n\t\n\tfunction chromeStackInterpreter(row) {\n\t   var match = CHROME_AND_IE_STACK_MATCHER.exec(row);\n\t   return {\n\t      file: match ? match[1] : '?',\n\t      line: match ? match[2] : -1,\n\t      char: match ? match[3] : -1\n\t   };\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar FIREFOX_STACK_MATCHER = /@(.+):(\\d+)$/;\n\t\n\tfunction firefoxStackInterpreter(row) {\n\t   var match = FIREFOX_STACK_MATCHER.exec(row);\n\t   return {\n\t      file: match ? match[1] : '?',\n\t      line: match ? match[2] : -1,\n\t      char: -1\n\t   };\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction createConsoleChannel(browser) {\n\t\n\t   return function log(messageObject) {\n\t      var browserConsole = browser.console();\n\t      if (!browserConsole) {\n\t         return;\n\t      }\n\t\n\t      var level = messageObject.level,\n\t          text = messageObject.text,\n\t          replacements = messageObject.replacements,\n\t          _messageObject$source = messageObject.sourceInfo,\n\t          file = _messageObject$source.file,\n\t          line = _messageObject$source.line;\n\t\n\t\n\t      var logMethod = level.toLowerCase();\n\t      if (!(logMethod in browserConsole) || logMethod === 'trace') {\n\t         // In console objects trace doesn't define a valid log level but is used to print stack traces. We\n\t         // thus need to change it something different.\n\t         logMethod = 'log';\n\t      }\n\t\n\t      if (!(logMethod in browserConsole)) {\n\t         return;\n\t      }\n\t\n\t      var callArgs = [level + ': '].concat(mergeTextAndReplacements(text, replacements)).concat(['(@ ' + file + ':' + line + ')']);\n\t\n\t      browserConsole[logMethod].apply(browserConsole, _toConsumableArray(callArgs));\n\t   };\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction mergeTextAndReplacements(text, replacements) {\n\t   var parts = [];\n\t   var pos = 0;\n\t   var buffer = '';\n\t\n\t   while (pos < text.length) {\n\t      var character = text.charAt(pos);\n\t\n\t      switch (character) {\n\t         case '\\\\':\n\t            {\n\t               ++pos;\n\t               if (pos === text.length) {\n\t                  throw new Error('Unterminated string: \"' + text + '\"');\n\t               }\n\t\n\t               buffer += text.charAt(pos);\n\t               break;\n\t            }\n\t         case '[':\n\t            {\n\t               parts.push(buffer);\n\t               buffer = '';\n\t\n\t               var end = text.indexOf(']', pos);\n\t               if (end === -1) {\n\t                  throw new Error('Unterminated replacement at character ' + pos + ': \"' + text + '\"');\n\t               }\n\t\n\t               var replacementIndex = parseInt(text.substring(pos + 1, end), 10);\n\t\n\t               parts.push(replacements[replacementIndex]);\n\t               pos = end;\n\t\n\t               break;\n\t            }\n\t         default:\n\t            {\n\t               buffer += character;\n\t               break;\n\t            }\n\t      }\n\t\n\t      ++pos;\n\t   }\n\t\n\t   if (buffer.length > 0) {\n\t      parts.push(buffer);\n\t   }\n\t\n\t   return parts;\n\t}\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar object = _interopRequireWildcard(_object);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); } /**\n\t                                                                               * Copyright 2016 aixigo AG\n\t                                                                               * Released under the MIT license.\n\t                                                                               * http://laxarjs.org/license\n\t                                                                               */\n\t/**\n\t * Module providing the EventBus factory.\n\t *\n\t * To use the EventBus in a widget, request the {@link widget_services#axEventBus axEventBus} injection, or\n\t * use the `eventBus` property on the {@link widget_services#axContext axContext} injection.\n\t * In some cases, it may be useful to inject the global EventBus instance backing all widget instances of the\n\t * same bootstrapping context, by requesting the {@link widget_services#axGlobalEventBus axGlobalEventBus}\n\t * injection.\n\t *\n\t * @module event_bus\n\t */\n\t\n\t\n\tvar WILDCARD = '*';\n\tvar SUBSCRIBER_FIELD = '.';\n\t\n\tvar TOPIC_SEPARATOR = '.';\n\tvar SUB_TOPIC_SEPARATOR = '-';\n\tvar REQUEST_MATCHER = /^([^.])([^.]*)Request(\\..+)?$/;\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * @param {Object} configuration\n\t *    configuration for the event bus instance.\n\t *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.\n\t * @param {Object} log\n\t *    a logger instance for error reporting\n\t * @param {Function} nextTick\n\t *    a next tick function like `process.nextTick`, `setImmediate` or AngularJS' `$timeout`\n\t * @param {Function} timeoutFunction\n\t *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`\n\t * @param {Function} [errorHandler]\n\t *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.\n\t *\n\t * @constructor\n\t * @private\n\t */\n\tfunction EventBus(configuration, log, nextTick, timeoutFunction) {\n\t   var errorHandler = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : createLogErrorHandler(log);\n\t\n\t   this.nextTick_ = function (f) {\n\t      return nextTick(f);\n\t   };\n\t   this.timeoutFunction_ = function (f, ms) {\n\t      return timeoutFunction(f, ms);\n\t   };\n\t   this.timeoutMs_ = configuration.ensure('eventBusTimeoutMs');\n\t   this.errorHandler_ = errorHandler;\n\t\n\t   this.cycleCounter_ = 0;\n\t   this.eventQueue_ = [];\n\t   this.subscriberTree_ = {};\n\t\n\t   this.waitingPromiseResolves_ = [];\n\t   this.currentCycle_ = -1;\n\t   this.inspectors_ = [];\n\t   this.log_ = log;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Adds an inspector, that gets notified when certain actions within the event bus take place. Currently\n\t * these actions may occur:\n\t *\n\t * - `subscribe`: a new subscriber registered for an event\n\t * - `publish`: an event is published but not yet delivered\n\t * - `deliver`: an event is actually delivered to a subscriber\n\t *\n\t * An inspector receives a map with the following properties:\n\t *\n\t * - `action`: one of the actions from above\n\t * - `source`: the origin of the `action`\n\t * - `target`: the name of the event subscriber (`deliver` action only)\n\t * - `event`: the full name of the event or the subscribed event (`subscribe` action only)\n\t * - `eventObject`: the published event item (`publish` action only)\n\t * - `subscribedTo`: the event, possibly with omissions, the subscriber subscribed to (`deliver` action only)\n\t * - `cycleId`: the id of the event cycle\n\t *\n\t * The function returned by this method can be called to remove the inspector again and prevent it from\n\t * being called for future event bus actions.\n\t *\n\t * @param {Function} inspector\n\t *    the inspector function to add\n\t *\n\t * @return {Function}\n\t *    a function to remove the inspector\n\t */\n\tEventBus.prototype.addInspector = function (inspector) {\n\t   (0, _assert2.default)(inspector).hasType(Function).isNotNull();\n\t\n\t   this.inspectors_.push(inspector);\n\t   return function () {\n\t      var index = this.inspectors_.indexOf(inspector);\n\t      if (index !== -1) {\n\t         this.inspectors_.splice(index, 1);\n\t      }\n\t   }.bind(this);\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Subscribes to an event by name. An event name consists of so called *topics*, where each topic is\n\t * separated from another by dots (`.`). If a topic is omitted, this is treated as a wildcard. Note that\n\t * two dots in the middle or one dot at the beginning of an event name must remain, whereas a dot at the\n\t * end may be omitted. As such every event name has an intrinsic wildcard at its end. For example these are\n\t * all valid event names:\n\t *\n\t * - `some.event`: matches `some.event`, `some.event.again`\n\t * - `.event`: matches `some.event`, `any.event`, `any.event.again`\n\t * - `some..event`: matches `some.fancy.event`, `some.special.event`\n\t *\n\t * Additionally *subtopics* are supported. Subtopics are fragments of a topic, separated from another by\n\t * simple dashes (`-`). Here only suffixes of subtopics may be omitted when subscribing. Thus subscribing\n\t * to `some.event` would match an event published with name `some.event-again` or even\n\t * `some.event-another.again`.\n\t *\n\t * **The subscriber function**\n\t *\n\t * When an event is delivered, the subscriber function receives two arguments:\n\t * The first one is the event object as it was published. If `optionalOptions.clone` yields `true` this is a\n\t * simple deep copy of the object (note that only properties passing a JSON-(de)serialization remain). If\n\t * `false` the object is frozen using `Object.freeze` recursively.\n\t *\n\t * The second one is a meta object with these properties:\n\t *\n\t * - `name`: The name of the event as it actually was published (i.e. without wildcards).\n\t * - `cycleId`: The id of the cycle the event was published (and delivered) in\n\t * - `sender`: The id of the event sender, may be `null`.\n\t * - `initiator`: The id of the initiator of the cycle. Currently not implemented, thus always `null`.\n\t * - `options`: The options that were passed to `publish` or `publishAndGatherReplies` respectively.\n\t *\n\t * @param {String} eventName\n\t *    the name of the event to subscribe to\n\t * @param {Function} subscriber\n\t *    a function to call whenever an event matching `eventName` is published\n\t * @param {Object} [optionalOptions]\n\t *    additional options for the subscribe action\n\t * @param {String} [optionalOptions.subscriber=null]\n\t *    the id of the subscriber. Default is `null`\n\t * @param {Boolean} [optionalOptions.clone=true]\n\t *    if `false` the event will be send frozen to the subscriber, otherwise it will receive a deep copy.\n\t *    Default is `true`\n\t *\n\t * @return {Function}\n\t *    a function that when called unsubscribes from this subscription again\n\t */\n\tEventBus.prototype.subscribe = function (eventName, subscriber, optionalOptions) {\n\t   var _this = this;\n\t\n\t   (0, _assert2.default)(eventName).hasType(String).isNotNull();\n\t   (0, _assert2.default)(subscriber).hasType(Function).isNotNull();\n\t\n\t   var options = object.options(optionalOptions, {\n\t      subscriber: null,\n\t      clone: true\n\t   });\n\t   var subscriberItem = {\n\t      name: eventName,\n\t      subscriber: subscriber,\n\t      subscriberName: options.subscriber,\n\t      subscriptionWeight: calculateSubscriptionWeight(eventName),\n\t      options: options\n\t   };\n\t\n\t   var eventNameParts = eventName.split(TOPIC_SEPARATOR);\n\t   var node = eventNameParts.reduce(function (node, eventNamePart) {\n\t      var bucketName = eventNamePart || WILDCARD;\n\t      if (!(bucketName in node)) {\n\t         node[bucketName] = {};\n\t      }\n\t      return node[bucketName];\n\t   }, this.subscriberTree_);\n\t\n\t   if (!(SUBSCRIBER_FIELD in node)) {\n\t      node[SUBSCRIBER_FIELD] = [];\n\t   }\n\t   node[SUBSCRIBER_FIELD].push(subscriberItem);\n\t\n\t   notifyInspectors(this, {\n\t      action: 'subscribe',\n\t      source: options.subscriber,\n\t      target: '-',\n\t      event: eventName,\n\t      cycleId: this.currentCycle_\n\t   });\n\t\n\t   return function () {\n\t      unsubscribeRecursively(_this, _this.subscriberTree_, eventNameParts, subscriber);\n\t   };\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Asynchronously publishes an event on the event bus. The returned promise will be enqueued as soon as this\n\t * event is delivered and, if during delivery a new event was enqueued, resolved after that new event was\n\t * delivered. If no new event is published during delivery of this event, the promise is instantly resolved.\n\t * To make this a bit clearer, lets assume we publish and thus enqueue an event at time `t`. It then will\n\t * be delivered at time `t+1`. At that precise moment the promise is enqueued to be resolved soon. We then\n\t * distinguish between two cases:\n\t *\n\t * - At time `t+1` no subscriber publishes (i.e. enqueues) an event: Thus there is no event in the same\n\t *   cycle and the promise is also resolved at time `t+1`.\n\t * - At least one subscriber publishes an event at time `t+1`: The promise is then scheduled to be resolved\n\t *   as soon as this event is delivered at time `t+2`.\n\t *\n\t * The implication of this is the following:\n\t *\n\t * We have two collaborators, A and B. A listens to event b and B listens to event a.\n\t * Whenever A publishes a and B than instantly (i.e. in the same event cycle of the JavaScript runtime\n\t * where its subscriber function was called) *responds* by publishing b, b arrives at the subscriber\n\t * function of A, before the promise of A's publish action is resolved.\n\t * It is hence possible to observe possible effects of an event sent by oneself, under the conditions\n\t * mentioned above. Practically this is used internally for the implementation of\n\t * {@link #EventBus.publishAndGatherReplies()}.\n\t *\n\t * @param {String} eventName\n\t *    the name of the event to publish\n\t * @param {Object} [optionalEvent]\n\t *    the event to publish\n\t * @param {Object} [optionalOptions]\n\t *    additional options for the publish action\n\t * @param {String} [optionalOptions.sender=null]\n\t *    the id of the event sender. Default is `null`\n\t * @param {Boolean} [optionalOptions.deliverToSender=true]\n\t *    if `false` the event will not be send to subscribers whose subscriber name matches\n\t *    `optionalOptions.sender`, else all subscribers will receive the event. Default is `true`\n\t *\n\t * @return {Promise}\n\t  *   the delivery promise\n\t */\n\tEventBus.prototype.publish = function (eventName) {\n\t   var _this2 = this;\n\t\n\t   var optionalEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t   var optionalOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t   (0, _assert2.default)(eventName).hasType(String).isNotNull();\n\t\n\t   var event = JSON.parse(JSON.stringify(optionalEvent));\n\t   var options = Object.assign({ deliverToSender: true, sender: null }, optionalOptions);\n\t\n\t   return new Promise(function (resolve) {\n\t      var eventItem = {\n\t         meta: {\n\t            name: eventName,\n\t            cycleId: _this2.currentCycle_ > -1 ? _this2.currentCycle_ : _this2.cycleCounter_++,\n\t            sender: options.sender,\n\t            initiator: null,\n\t            options: options\n\t         },\n\t         event: event,\n\t         resolvePublish: resolve\n\t      };\n\t      enqueueEvent(_this2, eventItem);\n\t\n\t      notifyInspectors(_this2, {\n\t         action: 'publish',\n\t         source: options.sender,\n\t         target: '-',\n\t         event: eventName,\n\t         eventObject: event,\n\t         cycleId: eventItem.meta.cycleId\n\t      });\n\t   });\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Publishes an event that follows the *request-will-did pattern* and awaits all replies. This pattern has\n\t * evolved over time and is of great use when handling the asynchronous nature of event bus events.\n\t *\n\t * Certain rules need to be fulfilled: First the initiator needs to call this method with an event whose\n\t * name has the suffix `Request`, e.g. `takeActionRequest`. All collaborators that want to react to this\n\t * event then either do so in the same event cycle by sending a `didTakeAction` event or announce that they\n\t * will do something asynchronously by publishing a `willTakeAction` event. In the latter case they need to\n\t * broadcast the fulfillment of their action some time later by sending a `didTakeAction` event. Note that for\n\t * both events the same sender name needs to be given. Otherwise they cannot be mapped and the event bus\n\t * doesn't know if all asynchronous replies were already received.\n\t *\n\t * Additionally a timer is started using either the globally configured `pendingDidTimeout` ms value or the\n\t * value provided as option to this method. If that timer expires before all `did*` events to all given\n\t * `will*` events were received, the error handler is called to handle the incident and the promise is\n\t * rejected with all responses received up to now.\n\t *\n\t * @param {String} eventName\n\t *    the name of the event to publish\n\t * @param {Object} [optionalEvent]\n\t *    the event to publish\n\t * @param {Object} [optionalOptions]\n\t *    additional options for the publish action\n\t * @param {String} [optionalOptions.sender=null]\n\t *    the id of the event sender. Default is `null`\n\t * @param {Number} [optionalOptions.pendingDidTimeout]\n\t *    the timeout in milliseconds for pending did* events. Default is the timeout option used when the\n\t *    event bus instance was created\n\t *\n\t * @return {Promise}\n\t *   the delivery promise. It receives a list of all collected `did*` events and according meta information\n\t */\n\tEventBus.prototype.publishAndGatherReplies = function (eventName, optionalEvent, optionalOptions) {\n\t   var _this3 = this;\n\t\n\t   (0, _assert2.default)(eventName).hasType(String).isNotNull();\n\t\n\t   var matches = REQUEST_MATCHER.exec(eventName);\n\t   _assert2.default.state(!!matches, 'Expected eventName to end with \"Request\" but got ' + eventName);\n\t\n\t   var options = Object.assign({ pendingDidTimeout: this.timeoutMs_ }, optionalOptions);\n\t\n\t   var eventNameSuffix = matches[1].toUpperCase() + matches[2];\n\t   if (matches[3]) {\n\t      eventNameSuffix += matches[3];\n\t   }\n\t   var deferred = {};\n\t   deferred.promise = new Promise(function (resolve, reject) {\n\t      deferred.resolve = resolve;\n\t      deferred.reject = reject;\n\t   });\n\t   var willWaitingForDid = [];\n\t   var givenDidResponses = [];\n\t   var cycleFinished = false;\n\t\n\t   var unsubscribeWillCollector = this.subscribe('will' + eventNameSuffix, function (event, meta) {\n\t      (0, _assert2.default)(meta.sender).hasType(String).isNotNull('A response with will to a request-event must contain a sender.');\n\t\n\t      willWaitingForDid.push(meta.sender);\n\t   }, { subscriber: options.sender });\n\t\n\t   var unsubscribeDidCollector = this.subscribe('did' + eventNameSuffix, function (event, meta) {\n\t      givenDidResponses.push({ event: event, meta: meta });\n\t      var senderIndex = void 0;\n\t      do {\n\t         senderIndex = willWaitingForDid.indexOf(meta.sender);\n\t         if (senderIndex !== -1) {\n\t            willWaitingForDid.splice(senderIndex, 1);\n\t         }\n\t      } while (senderIndex !== -1);\n\t\n\t      if (willWaitingForDid.length === 0 && cycleFinished) {\n\t         finish();\n\t      }\n\t   }, { subscriber: options.sender });\n\t\n\t   var timeoutRef = this.timeoutFunction_(function () {\n\t      if (willWaitingForDid.length > 0) {\n\t         var message = 'Timeout while waiting for pending did' + eventNameSuffix + ' on ' + eventName + '.';\n\t         _this3.errorHandler_(message, {\n\t            'Sender': options.sender,\n\t            'After ms timeout': options.pendingDidTimeout,\n\t            'Responses missing from': willWaitingForDid.join(', ')\n\t         });\n\t         finish(true);\n\t      }\n\t   }, options.pendingDidTimeout);\n\t\n\t   this.publish(eventName, optionalEvent, options).then(function () {\n\t      unsubscribeWillCollector();\n\t      if (willWaitingForDid.length === 0) {\n\t         // either there was no will or all did responses were already given in the same cycle as the will\n\t         finish();\n\t         return;\n\t      }\n\t      cycleFinished = true;\n\t   });\n\t\n\t   function finish(wasCanceled) {\n\t      clearTimeout(timeoutRef);\n\t      unsubscribeDidCollector();\n\t      (wasCanceled ? deferred.reject : deferred.resolve)(givenDidResponses);\n\t   }\n\t\n\t   return deferred.promise;\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction enqueueEvent(self, eventItem) {\n\t   if (self.eventQueue_.length === 0) {\n\t      self.nextTick_(function () {\n\t         var queuedEvents = self.eventQueue_;\n\t\n\t         self.eventQueue_ = [];\n\t\n\t         processWaitingPublishPromises(self, processQueue(self, queuedEvents));\n\t      });\n\t   }\n\t   self.eventQueue_.push(eventItem);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction processQueue(self, queuedEvents) {\n\t   return queuedEvents.map(function (eventItem) {\n\t      var meta = eventItem.meta;\n\t      self.currentCycle_ = meta.cycleId;\n\t\n\t      var subscribers = findSubscribers(self, meta.name);\n\t      if (subscribers.length === 0) {\n\t         self.currentCycle_ = -1;\n\t         return eventItem.resolvePublish;\n\t      }\n\t\n\t      var serializedEvent = null;\n\t      if (subscribers.length > 1) {\n\t         serializedEvent = JSON.stringify(eventItem.event);\n\t      }\n\t\n\t      var senderName = meta.sender;\n\t      var options = meta.options;\n\t\n\t      subscribers.forEach(function (subscriberItem) {\n\t         var subscriberName = subscriberItem.subscriberName;\n\t         if (!options.deliverToSender && senderName && senderName === subscriberName) {\n\t            return;\n\t         }\n\t\n\t         try {\n\t            var event = void 0;\n\t            if (subscriberItem.options.clone) {\n\t               event = serializedEvent ? JSON.parse(serializedEvent) : eventItem.event;\n\t            } else {\n\t               event = eventItem.event;\n\t            }\n\t            subscriberItem.subscriber(event, meta);\n\t         } catch (e) {\n\t            var message = 'error while calling subscriber \"' + subscriberName + '\"' + (' for event ' + meta.name) + (' published by \"' + senderName + '\" (subscribed to: ' + subscriberItem.name + ')');\n\t            self.errorHandler_(message, {\n\t               'Exception': e,\n\t               'Published event': eventItem.event,\n\t               'Event meta information': meta,\n\t               'Caused by Subscriber': subscriberItem\n\t            });\n\t         }\n\t\n\t         notifyInspectors(self, {\n\t            action: 'deliver',\n\t            source: senderName,\n\t            target: subscriberName,\n\t            event: meta.name,\n\t            eventObject: eventItem.event,\n\t            subscribedTo: subscriberItem.name,\n\t            cycleId: meta.cycleId\n\t         });\n\t      });\n\t\n\t      self.currentCycle_ = -1;\n\t\n\t      return eventItem.resolvePublish;\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction processWaitingPublishPromises(self, newPromiseResolves) {\n\t   var waitingResolves = self.waitingPromiseResolves_;\n\t   self.waitingPromiseResolves_ = newPromiseResolves;\n\t\n\t   waitingResolves.forEach(function (resolve) {\n\t      return resolve();\n\t   });\n\t\n\t   if (self.eventQueue_.length === 0) {\n\t      // nothing was queued by any subscriber. The publishers can instantly be notified of delivery.\n\t      newPromiseResolves.forEach(function (resolve) {\n\t         return resolve();\n\t      });\n\t      self.waitingPromiseResolves_ = [];\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction unsubscribeRecursively(self, node, parts, subscriber) {\n\t   if (parts.length === 0 && Array.isArray(node[SUBSCRIBER_FIELD])) {\n\t      var subscribers = node[SUBSCRIBER_FIELD];\n\t      for (var i = subscribers.length - 1; i >= 0; --i) {\n\t         if (subscribers[i].subscriber === subscriber) {\n\t            notifyInspectors(self, {\n\t               action: 'unsubscribe',\n\t               source: subscribers[i].subscriberName,\n\t               target: '-',\n\t               event: subscribers[i].name,\n\t               cycleId: self.currentCycle_\n\t            });\n\t            subscribers.splice(i, 1);\n\t         }\n\t      }\n\t   }\n\t\n\t   var _parts = _toArray(parts),\n\t       part = _parts[0],\n\t       rest = _parts.slice(1);\n\t\n\t   var searchPart = part || WILDCARD;\n\t   if (searchPart in node) {\n\t      unsubscribeRecursively(self, node[searchPart], rest, subscriber);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction findSubscribers(self, eventName) {\n\t   var subscribers = [];\n\t   var parts = eventName.split(TOPIC_SEPARATOR);\n\t   var node = self.subscriberTree_;\n\t\n\t   findSubscribersRecursively(node, parts, subscribers);\n\t   subscribers.sort(function (a, b) {\n\t      var aWeight = a.subscriptionWeight;\n\t      var bWeight = b.subscriptionWeight;\n\t      if (aWeight[0] === bWeight[0]) {\n\t         return bWeight[1] - aWeight[1];\n\t      }\n\t\n\t      return bWeight[0] - aWeight[0];\n\t   });\n\t\n\t   return subscribers;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction findSubscribersRecursively(node, parts, subscribers) {\n\t   if (Array.isArray(node[SUBSCRIBER_FIELD])) {\n\t      subscribers.push.apply(subscribers, _toConsumableArray(node[SUBSCRIBER_FIELD]));\n\t   }\n\t\n\t   if (parts.length === 0) {\n\t      return;\n\t   }\n\t\n\t   var _parts2 = _toArray(parts),\n\t       part = _parts2[0],\n\t       remainder = _parts2.slice(1);\n\t\n\t   if (part.indexOf(SUB_TOPIC_SEPARATOR) !== -1) {\n\t      var index = part.length;\n\t      var currentPart = part;\n\t      do {\n\t         currentPart = currentPart.substring(0, index);\n\t         if (currentPart in node) {\n\t            findSubscribersRecursively(node[currentPart], remainder, subscribers);\n\t         }\n\t         index = currentPart.lastIndexOf(SUB_TOPIC_SEPARATOR);\n\t      } while (index !== -1);\n\t   } else if (part in node) {\n\t      findSubscribersRecursively(node[part], remainder, subscribers);\n\t   }\n\t\n\t   if (WILDCARD in node) {\n\t      findSubscribersRecursively(node[WILDCARD], remainder, subscribers);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction calculateSubscriptionWeight(eventName) {\n\t   var parts = eventName.split(TOPIC_SEPARATOR);\n\t   var weight = [0, 0];\n\t   parts.forEach(function (part) {\n\t      if (part.length > 0) {\n\t         weight[0]++;\n\t         weight[1] += part.split(SUB_TOPIC_SEPARATOR).length - 1;\n\t      }\n\t   });\n\t   return weight;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction notifyInspectors(self, infoObject) {\n\t   self.inspectors_.forEach(function (inspector) {\n\t      inspector(infoObject);\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction createLogErrorHandler(log) {\n\t   return function (message, optionalErrorInformation) {\n\t      var sensitiveData = ['Published event'];\n\t\n\t      log.error('EventBus: ' + message);\n\t\n\t      if (optionalErrorInformation) {\n\t         object.forEach(optionalErrorInformation, function (info, title) {\n\t            var formatString = '   - [0]: [1:%o]';\n\t            if (sensitiveData.indexOf(title) !== -1) {\n\t               formatString = '   - [0]: [1:%o:anonymize]';\n\t            }\n\t\n\t            log.error(formatString, title, info);\n\t\n\t            if (info instanceof Error && info.stack) {\n\t               log.error('   - Stacktrace: ' + info.stack);\n\t            }\n\t         });\n\t      }\n\t   };\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates and returns a new event bus instance using the given configuration.\n\t *\n\t * @param {Object} configuration\n\t *    configuration for the event bus instance.\n\t *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.\n\t * @param {Object} log\n\t *    a logger to use for error reporting\n\t * @param {Function} nextTick\n\t *    a next tick function like `process.nextTick` or AngularJS' `$timeout`\n\t * @param {Function} timeoutFunction\n\t *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`\n\t * @param {Function} [errorHandler]\n\t *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.\n\t *\n\t * @return {EventBus}\n\t *    an event bus instance\n\t *\n\t * @private\n\t */\n\tfunction create(configuration, log, nextTick, timeoutFunction, errorHandler) {\n\t   (0, _assert2.default)(configuration.ensure).hasType(Function).isNotNull();\n\t   (0, _assert2.default)(log.error).hasType(Function).isNotNull();\n\t   (0, _assert2.default)(nextTick).hasType(Function).isNotNull();\n\t   (0, _assert2.default)(timeoutFunction).hasType(Function).isNotNull();\n\t   (0, _assert2.default)(errorHandler).hasType(Function);\n\t\n\t   return new EventBus(configuration, log, nextTick, timeoutFunction, errorHandler);\n\t}\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n\topyright 2016 aixigo AG\n\teleased under the MIT license.\n\thttp://laxarjs.org/license\n\tn\t\n\t\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar NOT_FOUND = { content: null };\n\t\n\tfunction create(artifacts, browser, configuration, log) {\n\t\n\t   var baseHref = configuration.get('baseHref');\n\t\n\t   var resolve = baseHref ? function (_) {\n\t      return browser.resolve(_, baseHref);\n\t   } : function (_) {\n\t      return _;\n\t   };\n\t\n\t   var _ref = function (themeRef) {\n\t      var themeIndex = artifacts.aliases.themes[themeRef];\n\t      var theme = artifacts.themes[themeIndex];\n\t      if (!theme) {\n\t         log.error('The configured theme ' + themeRef + ' is not available.');\n\t         return ['default', 'default.theme'];\n\t      }\n\t      return [themeRef, theme.descriptor.name];\n\t   }(configuration.ensure('theme')),\n\t       _ref2 = _slicedToArray(_ref, 2),\n\t       themeRef = _ref2[0],\n\t       themeName = _ref2[1];\n\t\n\t   return {\n\t      forFlow: makeProvider('flows', ['descriptor'], ['definition']),\n\t      forTheme: makeProvider('themes', ['descriptor', 'assets']).bind(null, themeRef),\n\t      forPage: makeProvider('pages', ['descriptor'], ['definition']),\n\t      forLayout: makeProvider('layouts', ['descriptor', 'assets']),\n\t      forWidget: makeProvider('widgets', ['descriptor', 'assets', 'module']),\n\t      forControl: makeProvider('controls', ['descriptor', 'assets', 'module'])\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function makeProvider(bucket) {\n\t      var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t      var cloneKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\t\n\t      return function (ref) {\n\t         var api = {};\n\t         var index = artifacts.aliases[bucket][ref];\n\t         var artifactPromise = index === undefined ? Promise.reject(new Error('Artifact ' + ref + ' not found in ' + bucket)) : Promise.resolve(artifacts[bucket][index]);\n\t\n\t         ['definition', 'module', 'descriptor'].forEach(function (key) {\n\t            if (cloneKeys.includes(key)) {\n\t               api[key] = function () {\n\t                  return artifactPromise.then(function (_) {\n\t                     return (0, _object.deepClone)(_[key]);\n\t                  });\n\t               };\n\t            } else if (keys.includes(key)) {\n\t               api[key] = function () {\n\t                  return artifactPromise.then(function (_) {\n\t                     return _[key];\n\t                  });\n\t               };\n\t            }\n\t         });\n\t\n\t         if (keys.includes('assets')) {\n\t            (function () {\n\t               var lookup = function lookup(name) {\n\t                  (0, _assert2.default)(name).hasType(String).isNotNull();\n\t                  return function (_ref3) {\n\t                     var _ref3$assets = _ref3.assets,\n\t                         assets = _ref3$assets === undefined ? {} : _ref3$assets;\n\t\n\t                     return assets[name] || NOT_FOUND;\n\t                  };\n\t               };\n\t\n\t               var lookupForTheme = function lookupForTheme(name) {\n\t                  (0, _assert2.default)(name).hasType(String).isNotNull();\n\t                  return function (_ref4) {\n\t                     var _ref4$assets = _ref4.assets,\n\t                         assets = _ref4$assets === undefined ? {} : _ref4$assets;\n\t\n\t                     var themedAssets = assets[themeName];\n\t                     if (themedAssets && themedAssets[name]) {\n\t                        return themedAssets[name];\n\t                     }\n\t                     var defaultAssets = assets['default.theme'];\n\t                     if (defaultAssets && defaultAssets[name]) {\n\t                        return defaultAssets[name];\n\t                     }\n\t                     return NOT_FOUND;\n\t                  };\n\t               };\n\t\n\t               var provide = function provide(_ref5) {\n\t                  var url = _ref5.url,\n\t                      content = _ref5.content;\n\t\n\t                  if (content == null && url) {\n\t                     return browser.fetch(resolve(url)).then(function (_) {\n\t                        return _.text();\n\t                     });\n\t                  }\n\t                  return content || null;\n\t               };\n\t\n\t               var provideUrl = function provideUrl(_ref6) {\n\t                  var url = _ref6.url;\n\t                  return url ? resolve(url) : null;\n\t               };\n\t\n\t               api.asset = function (name) {\n\t                  return artifactPromise.then(lookup(name)).then(provide);\n\t               };\n\t\n\t               api.assetUrl = function (name) {\n\t                  return artifactPromise.then(lookup(name)).then(provideUrl);\n\t               };\n\t\n\t               api.assetForTheme = function (name) {\n\t                  return artifactPromise.then(lookupForTheme(name)).then(provide);\n\t               };\n\t\n\t               api.assetUrlForTheme = function (name) {\n\t                  return artifactPromise.then(lookupForTheme(name)).then(provideUrl);\n\t               };\n\t            })();\n\t         }\n\t\n\t         return api;\n\t      };\n\t   }\n\t}\n\n/***/ },\n\n/***/ 39:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Copyright 2016 aixigo AG\n\teleased under the MIT license.\n\thttp://laxarjs.org/license\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          */\n\t/**\n\t * The control loader helps to load control assets and implementations.\n\t *\n\t * @module control_loader\n\t */\n\t\n\t\n\texports.create = create;\n\t\n\tvar _string = __webpack_require__(28);\n\t\n\tfunction create(artifactProvider, cssLoader) {\n\t\n\t   var notDeclaredMessage = 'Tried to load control reference [0] without declaration in widget.json.\\nDetails: [1]';\n\t   var errorInfoLink = 'https://github.com/LaxarJS/laxar/blob/master/docs/manuals/providing_controls.md#compatibility';\n\t\n\t   var aliases = {};\n\t   var modules = {};\n\t\n\t   /**\n\t    * @constructor\n\t    * @name ControlLoader\n\t    */\n\t   return {\n\t      load: load,\n\t      provide: provide\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Provides the implementation module of the given control, for manual instantiation by a widget.\n\t    *\n\t    * Because the method must return synchronously, it may only be called for controls that have been\n\t    * loaded before (using {@link #load()})!\n\t    * For controls that are correctly listed in the `controls` section of the `widget.json`, this is ensured\n\t    * by the widget loader.\n\t    *\n\t    * @param {String} controlRef\n\t    *   a valid control reference as used in the `widget.json`\n\t    *\n\t    * @return {*}\n\t    *   the module for the requested control reference\n\t    *\n\t    * @memberof ControlLoader\n\t    */\n\t   function provide(controlRef) {\n\t      var module = modules[aliases[controlRef]];\n\t      if (!module) {\n\t         var message = (0, _string.format)('axControls: ' + notDeclaredMessage, [controlRef, errorInfoLink]);\n\t         throw new Error(message);\n\t      }\n\t      return module;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Fetches the descriptor for a given control reference, and saves it as a side-effect.\n\t    * This is part of the internal API used by the widget loader.\n\t    *\n\t    * This process must be completed before the descriptor or the module for a control can be provided.\n\t    * For this reason, `load` is called by the widget-loader, using information from the `widget.json` file.\n\t    *\n\t    * @param {String} controlRef\n\t    *   a valid control reference as used in the `widget.json`\n\t    *\n\t    * @return {Promise}\n\t    *   a promise for the (fetched or synthesized) control descriptor\n\t    *\n\t    * @memberof ControlLoader\n\t    */\n\t   function load(controlRef) {\n\t      var _artifactProvider$for = artifactProvider.forControl(controlRef),\n\t          assetUrlForTheme = _artifactProvider$for.assetUrlForTheme,\n\t          descriptor = _artifactProvider$for.descriptor,\n\t          module = _artifactProvider$for.module;\n\t\n\t      return Promise.all([descriptor(), module()]).then(function (_ref) {\n\t         var _ref2 = _slicedToArray(_ref, 2),\n\t             descriptor = _ref2[0],\n\t             module = _ref2[1];\n\t\n\t         var name = descriptor.name;\n\t\n\t         aliases[controlRef] = name;\n\t         modules[name] = module;\n\t         return assetUrlForTheme(descriptor.styleSource || 'css/' + name + '.css').then(function (url) {\n\t            if (url) {\n\t               cssLoader.load(url);\n\t            }\n\t         }).then(function () {\n\t            return descriptor;\n\t         });\n\t      });\n\t   }\n\t}\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t\n\tfunction create() {\n\t   var mergedCssFileLoaded = Array.from(document.getElementsByTagName('link')).some(function (link) {\n\t      return link.hasAttribute('data-ax-merged-css');\n\t   });\n\t\n\t   if (mergedCssFileLoaded) {\n\t      return {\n\t         load: function load() {}\n\t      };\n\t   }\n\t\n\t   var loadedFiles = [];\n\t   return {\n\t      /**\n\t       * If not already loaded, loads the given file into the current page by appending a `link` element to\n\t       * the document's `head` element.\n\t       *\n\t       * @param {String} url\n\t       *    the url of the css file to load. If `null`, loading is skipped\n\t       */\n\t      load: function load(url) {\n\t         if (!loadedFiles.includes(url)) {\n\t            var element = document.createElement('link');\n\t            element.type = 'text/css';\n\t            element.id = 'cssLoaderStyleSheet' + loadedFiles.length;\n\t            element.rel = 'stylesheet';\n\t            element.href = url;\n\t            document.getElementsByTagName('head')[0].appendChild(element);\n\t\n\t            loadedFiles.push(url);\n\t         }\n\t      }\n\t   };\n\t}\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t\n\tfunction create(artifactProvider, cssLoader) {\n\t   return {\n\t      load: function load(layoutRef) {\n\t         var _artifactProvider$for = artifactProvider.forLayout(layoutRef),\n\t             descriptor = _artifactProvider$for.descriptor,\n\t             assetForTheme = _artifactProvider$for.assetForTheme,\n\t             assetUrlForTheme = _artifactProvider$for.assetUrlForTheme;\n\t\n\t         return descriptor().then(function (_ref) {\n\t            var name = _ref.name,\n\t                templateSource = _ref.templateSource,\n\t                styleSource = _ref.styleSource;\n\t            return Promise.all([assetForTheme(templateSource || name + \".html\"), assetUrlForTheme(styleSource || \"css/\" + name + \".css\"), Promise.resolve(name)]);\n\t         }).then(function (_ref2) {\n\t            var _ref3 = _slicedToArray(_ref2, 3),\n\t                html = _ref3[0],\n\t                cssUrl = _ref3[1],\n\t                name = _ref3[2];\n\t\n\t            if (cssUrl) {\n\t               cssLoader.load(cssUrl);\n\t            }\n\t            return { name: name, className: name + \"-layout\", html: html };\n\t         });\n\t      }\n\t   };\n\t}\n\n/***/ },\n\n/***/ 42:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n\topyright 2016 aixigo AG\n\teleased under the MIT license.\n\thttp://laxarjs.org/license\n\tn\t\n\t\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar object = _interopRequireWildcard(_object);\n\t\n\tvar _string = __webpack_require__(28);\n\t\n\tvar string = _interopRequireWildcard(_string);\n\t\n\tvar _json_validator = __webpack_require__(43);\n\t\n\tvar _features_provider = __webpack_require__(47);\n\t\n\tvar featuresProvider = _interopRequireWildcard(_features_provider);\n\t\n\tvar _page = __webpack_require__(48);\n\t\n\tvar _page2 = _interopRequireDefault(_page);\n\t\n\tvar _pages = __webpack_require__(49);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar SEGMENTS_MATCHER = /[_/-]./g;\n\t\n\tvar ID_SEPARATOR = '-';\n\tvar ID_SEPARATOR_MATCHER = /\\-/g;\n\tvar SUBTOPIC_SEPARATOR = '+';\n\t\n\tvar COMPOSITION_EXPRESSION_MATCHER = /^(!?)\\$\\{([^}]+)\\}$/;\n\tvar COMPOSITION_TOPIC_PREFIX = 'topic:';\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction PageLoader(artifactProvider, pageCollector) {\n\t   this.artifactProvider_ = artifactProvider;\n\t   this.pageToolingCollector_ = pageCollector;\n\t   this.idCounter_ = 0;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Loads a page specification and resolves all extension and compositions. The result is a page were all\n\t * referenced page fragments are merged in to one JavaScript object. As loading of all relevant files is\n\t * already asynchronous, this method is also asynchronous and thus returns a promise that is either\n\t * resolved with the constructed page or rejected with a JavaScript `Error` instance.\n\t *\n\t * @param {String} pageRef\n\t *    the page to load. Usually a path relative to the base url, with the `.json` suffix omitted\n\t *\n\t * @return {Promise}\n\t *    the result promise\n\t *\n\t * @private\n\t */\n\tPageLoader.prototype.load = function (pageRef) {\n\t   return loadPageRecursively(this, pageRef, []);\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction loadPageRecursively(self, pageRef, extensionChain) {\n\t   var page = void 0;\n\t\n\t   if (extensionChain.includes(pageRef)) {\n\t      throwError({ name: pageRef }, 'Cycle in page extension detected: ' + extensionChain.concat([pageRef]).join(' -> '));\n\t   }\n\t\n\t   var _self$artifactProvide = self.artifactProvider_.forPage(pageRef),\n\t       definition = _self$artifactProvide.definition,\n\t       descriptor = _self$artifactProvide.descriptor;\n\t\n\t   return Promise.all([definition(), descriptor()]).then(function (_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 2),\n\t          foundPage = _ref2[0],\n\t          descriptor = _ref2[1];\n\t\n\t      validatePage(foundPage, pageRef);\n\t\n\t      page = foundPage;\n\t      page.name = descriptor.name;\n\t\n\t      if (!page.areas) {\n\t         page.areas = {};\n\t      }\n\t   }).then(function () {\n\t      return processExtends(self, page, extensionChain);\n\t   }).then(function () {\n\t      generateMissingIds(self, page);\n\t      // we need to check ids before and after expanding compositions\n\t      checkForDuplicateIds(self, page);\n\t      return processCompositions(self, page, pageRef);\n\t   }).then(function () {\n\t      checkForDuplicateIds(self, page);\n\t      removeDisabledWidgets(self, page);\n\t   }).then(function () {\n\t      self.pageToolingCollector_.collectPageDefinition(pageRef, page, _pages.FLAT);\n\t      return page;\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//\n\t// Processing inheritance (i.e. the `extends` keyword)\n\t//\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction processExtends(self, page, extensionChain) {\n\t   if (has(page, 'extends')) {\n\t      return loadPageRecursively(self, page['extends'], extensionChain.concat([page.name])).then(function (basePage) {\n\t         mergePageWithBasePage(page, basePage);\n\t      });\n\t   }\n\t   return Promise.resolve();\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction mergePageWithBasePage(page, basePage) {\n\t   var extendingAreas = page.areas;\n\t   var mergedPageAreas = object.deepClone(basePage.areas);\n\t   if (has(basePage, 'layout')) {\n\t      if (has(page, 'layout')) {\n\t         throwError(page, string.format('Page overwrites layout set by base page \"[name]', basePage));\n\t      }\n\t      page.layout = basePage.layout;\n\t   }\n\t\n\t   object.forEach(extendingAreas, function (widgets, areaName) {\n\t      if (!(areaName in mergedPageAreas)) {\n\t         mergedPageAreas[areaName] = widgets;\n\t         return;\n\t      }\n\t\n\t      mergeWidgetLists(mergedPageAreas[areaName], widgets, page);\n\t   });\n\t\n\t   page.areas = mergedPageAreas;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//\n\t// Processing compositions\n\t//\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction processCompositions(self, topPage, topPageRef) {\n\t\n\t   return processNestedCompositions(topPage, null, []);\n\t\n\t   function processNestedCompositions(page, instanceId, compositionChain) {\n\t\n\t      var promise = Promise.resolve();\n\t\n\t      object.forEach(page.areas, function (widgets) {\n\t         widgets.slice().reverse().forEach(function (widgetSpec) {\n\t            if (widgetSpec.enabled === false) {\n\t               return;\n\t            }\n\t            ensureWidgetSpecHasId(self, widgetSpec);\n\t\n\t            if (!has(widgetSpec, 'composition')) {\n\t               return;\n\t            }\n\t            var compositionRef = widgetSpec.composition;\n\t            if (compositionChain.includes(compositionRef)) {\n\t               var chainString = compositionChain.concat([compositionRef]).join(' -> ');\n\t               var message = 'Cycle in compositions detected: ' + chainString;\n\t               throwError(topPage, message);\n\t            }\n\t\n\t            // Compositions must be loaded sequentially, because replacing the widgets in the page needs to\n\t            // take place in order. Otherwise the order of widgets could be messed up.\n\t            promise = promise.then(function () {\n\t               return self.artifactProvider_.forPage(compositionRef).definition();\n\t            }).then(function (composition) {\n\t               return prefixCompositionIds(composition, widgetSpec);\n\t            }).then(function (composition) {\n\t               return processCompositionExpressions(composition, widgetSpec, function (message) {\n\t                  throwError({ name: page.name }, 'Error loading composition \"' + compositionRef + '\" (id: \"' + widgetSpec.id + '\"). ' + message);\n\t               });\n\t            }).then(function (composition) {\n\t               var chain = compositionChain.concat(compositionRef);\n\t               return processNestedCompositions(composition, widgetSpec.id, chain).then(function () {\n\t                  self.pageToolingCollector_.collectCompositionDefinition(topPageRef, widgetSpec.id, composition, _pages.FLAT);\n\t                  return composition;\n\t               });\n\t            }).then(function (composition) {\n\t               mergeCompositionAreasWithPageAreas(composition, page, widgets, widgetSpec);\n\t            });\n\t         });\n\t      });\n\t\n\t      // now that all IDs have been created, we can store a copy of the page prior to composition expansion\n\t      if (page === topPage) {\n\t         self.pageToolingCollector_.collectPageDefinition(topPageRef, page, _pages.COMPACT);\n\t      } else {\n\t         self.pageToolingCollector_.collectCompositionDefinition(topPageRef, instanceId, page, _pages.COMPACT);\n\t      }\n\t\n\t      return promise;\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction mergeCompositionAreasWithPageAreas(composition, page, widgets, compositionSpec) {\n\t   object.forEach(composition.areas, function (compositionAreaWidgets, areaName) {\n\t      if (areaName === '.') {\n\t         insertAfterEntry(widgets, compositionSpec, compositionAreaWidgets);\n\t         return;\n\t      }\n\t\n\t      if (!(areaName in page.areas)) {\n\t         page.areas[areaName] = compositionAreaWidgets;\n\t         return;\n\t      }\n\t\n\t      mergeWidgetLists(page.areas[areaName], compositionAreaWidgets, page);\n\t   });\n\t\n\t   removeEntry(widgets, compositionSpec);\n\t\n\t   function insertAfterEntry(arr, entry, replacements) {\n\t      var index = arr.indexOf(entry);\n\t      arr.splice.apply(arr, [index, 0].concat(_toConsumableArray(replacements)));\n\t   }\n\t\n\t   function removeEntry(arr, entry) {\n\t      var index = arr.indexOf(entry);\n\t      arr.splice(index, 1);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction prefixCompositionIds(composition, widgetSpec) {\n\t   var prefixedAreas = {};\n\t   object.forEach(composition.areas, function (widgets, areaName) {\n\t      widgets.forEach(function (widget) {\n\t         if (has(widget, 'id')) {\n\t            widget.id = widgetSpec.id + ID_SEPARATOR + widget.id;\n\t         }\n\t      });\n\t\n\t      if (areaName.indexOf('.') > 0) {\n\t         // All areas prefixed with a local widget id need to be prefixed as well\n\t         prefixedAreas[widgetSpec.id + ID_SEPARATOR + areaName] = widgets;\n\t         return;\n\t      }\n\t\n\t      prefixedAreas[areaName] = widgets;\n\t   });\n\t   composition.areas = prefixedAreas;\n\t   return composition;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction processCompositionExpressions(composition, widgetSpec, throwPageError) {\n\t   var expressionData = {};\n\t\n\t   // feature definitions in compositions may contain generated topics for default resource names or action\n\t   // topics. As such these are generated before instantiating the composition's features.\n\t   composition.features = iterateOverExpressions(composition.features || {}, replaceExpression);\n\t   expressionData.features = featuresProvider.featuresForWidget(composition, widgetSpec, throwPageError);\n\t\n\t   if (_typeof(composition.mergedFeatures) === 'object') {\n\t      (function () {\n\t         var mergedFeatures = iterateOverExpressions(composition.mergedFeatures, replaceExpression);\n\t\n\t         Object.keys(mergedFeatures).forEach(function (featurePath) {\n\t            var currentValue = object.path(expressionData.features, featurePath, []);\n\t            var values = mergedFeatures[featurePath];\n\t            object.setPath(expressionData.features, featurePath, values.concat(currentValue));\n\t         });\n\t      })();\n\t   }\n\t\n\t   composition.areas = iterateOverExpressions(composition.areas, replaceExpression);\n\t\n\t   function replaceExpression(subject) {\n\t      var matches = subject.match(COMPOSITION_EXPRESSION_MATCHER);\n\t      if (!matches) {\n\t         return subject;\n\t      }\n\t\n\t      var possibleNegation = matches[1];\n\t      var expression = matches[2];\n\t      var result = void 0;\n\t      if (expression.indexOf(COMPOSITION_TOPIC_PREFIX) === 0) {\n\t         result = topicFromId(widgetSpec.id) + SUBTOPIC_SEPARATOR + expression.substr(COMPOSITION_TOPIC_PREFIX.length);\n\t      } else {\n\t         result = object.path(expressionData, expression);\n\t      }\n\t\n\t      return typeof result === 'string' && possibleNegation ? possibleNegation + result : result;\n\t   }\n\t\n\t   return composition;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction iterateOverExpressions(obj, replacer) {\n\t   if (obj === null) {\n\t      return obj;\n\t   }\n\t\n\t   if (Array.isArray(obj)) {\n\t      return obj.map(function (value) {\n\t         if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t            return iterateOverExpressions(value, replacer);\n\t         }\n\t\n\t         return typeof value === 'string' ? replacer(value) : value;\n\t      }).filter(function (_) {\n\t         return _ !== undefined;\n\t      });\n\t   }\n\t\n\t   var result = {};\n\t   object.forEach(obj, function (value, key) {\n\t      var replacedKey = replacer(key);\n\t      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t         result[replacedKey] = iterateOverExpressions(value, replacer);\n\t         return;\n\t      }\n\t\n\t      var replacedValue = typeof value === 'string' ? replacer(value) : value;\n\t      if (typeof replacedValue !== 'undefined') {\n\t         result[replacedKey] = replacedValue;\n\t      }\n\t   });\n\t\n\t   return result;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//\n\t// Additional Tasks\n\t//\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction removeDisabledWidgets(self, page) {\n\t   object.forEach(page.areas, function (widgetList, index) {\n\t      page.areas[index] = widgetList.filter(function (widgetSpec) {\n\t         return widgetSpec.enabled !== false;\n\t      });\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction checkForDuplicateIds(self, page) {\n\t   var idCount = {};\n\t\n\t   object.forEach(page.areas, function (widgetList) {\n\t      object.forEach(widgetList, function (widgetSpec) {\n\t         idCount[widgetSpec.id] = idCount[widgetSpec.id] ? idCount[widgetSpec.id] + 1 : 1;\n\t      });\n\t   });\n\t\n\t   var duplicates = Object.keys(idCount).filter(function (widgetId) {\n\t      return idCount[widgetId] > 1;\n\t   });\n\t\n\t   if (duplicates.length) {\n\t      throwError(page, 'Duplicate widget/composition ID(s): ' + duplicates.join(', '));\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction generateDefaultWidgetSpecName(widgetSpec) {\n\t   return artifactName().replace(SEGMENTS_MATCHER, dashToCamelcase);\n\t\n\t   function artifactName() {\n\t      if (widgetSpec.hasOwnProperty('widget')) {\n\t         return widgetSpec.widget.split('/').pop();\n\t      }\n\t      if (widgetSpec.hasOwnProperty('composition')) {\n\t         return widgetSpec.composition;\n\t      }\n\t      if (widgetSpec.hasOwnProperty('layout')) {\n\t         return widgetSpec.layout;\n\t      }\n\t      // Assume that non-standard items do not require a specific name.\n\t      return '';\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction ensureWidgetSpecHasId(self, widgetSpec) {\n\t   if (widgetSpec.hasOwnProperty('id')) {\n\t      return;\n\t   }\n\t   widgetSpec.id = nextId(self, generateDefaultWidgetSpecName(widgetSpec));\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction generateMissingIds(self, page) {\n\t   object.forEach(page.areas, function (widgetList) {\n\t      object.forEach(widgetList, function (widgetSpec) {\n\t         ensureWidgetSpecHasId(self, widgetSpec);\n\t      });\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction validatePage(foundPage, pageName) {\n\t   var errors = (0, _json_validator.create)(_page2.default).validate(foundPage);\n\t   if (errors.length) {\n\t      var errorString = errors.reduce(function (errorString, errorItem) {\n\t         return errorString + '\\n - ' + errorItem.message;\n\t      }, '');\n\t\n\t      throwError({ name: pageName }, 'Schema validation failed: ' + errorString);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//\n\t// Common functionality and utility functions\n\t//\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction mergeWidgetLists(targetList, sourceList, page) {\n\t   sourceList.forEach(function (widgetConfiguration) {\n\t      if (widgetConfiguration.insertBeforeId) {\n\t         for (var i = 0, length = targetList.length; i < length; ++i) {\n\t            if (targetList[i].id === widgetConfiguration.insertBeforeId) {\n\t               targetList.splice(i, 0, widgetConfiguration);\n\t               return;\n\t            }\n\t         }\n\t\n\t         throwError(page, string.format('No id found that matches insertBeforeId value \"[insertBeforeId]\"', widgetConfiguration));\n\t      }\n\t\n\t      targetList.push(widgetConfiguration);\n\t   });\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction has(object, what) {\n\t   return typeof object[what] === 'string' && object[what].length;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction nextId(self, prefix) {\n\t   return '' + prefix + ID_SEPARATOR + 'id' + self.idCounter_++;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction dashToCamelcase(segmentStart) {\n\t   return segmentStart.charAt(1).toUpperCase();\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction topicFromId(id) {\n\t   return id.replace(ID_SEPARATOR_MATCHER, SUBTOPIC_SEPARATOR).replace(SEGMENTS_MATCHER, dashToCamelcase);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction throwError(page, message) {\n\t   var text = string.format('Error loading page \"[name]\": [0]', [message], page);\n\t   throw new Error(text);\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates and returns a new page loader instance.\n\t *\n\t * @param {ArtifactProvider} artifactProvider\n\t *    an ArtifactProvider to load application assets\n\t * @param {PagesCollector} pagesCollector\n\t *    a tooling collector to consume page and composition information\n\t *\n\t * @return {PageLoader}\n\t *    a page loader instance\n\t *\n\t * @private\n\t */\n\tfunction create(artifactProvider, pagesCollector) {\n\t   (0, _assert2.default)(artifactProvider).isNotNull();\n\t   (0, _assert2.default)(pagesCollector).isNotNull();\n\t\n\t   return new PageLoader(artifactProvider, pagesCollector);\n\t}\n\n/***/ },\n\n/***/ 43:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.JSON_SCHEMA_V4_URI = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                                                                                               * Released under the MIT license.\n\t                                                                                                                                                                                                                                                                               * http://laxarjs.org/license\n\t                                                                                                                                                                                                                                                                               */\n\t/**\n\t * A wrapper around `jjv` and `jjve` for JSON validation.\n\t * Enhances error messages and adds some other optional convenience.\n\t *\n\t * @module json_validator\n\t * @private\n\t */\n\t\n\texports.create = create;\n\t\n\tvar _jjv = __webpack_require__(44);\n\t\n\tvar _jjv2 = _interopRequireDefault(_jjv);\n\t\n\tvar _jjve = __webpack_require__(46);\n\t\n\tvar _jjve2 = _interopRequireDefault(_jjve);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar JSON_SCHEMA_V4_URI = exports.JSON_SCHEMA_V4_URI = 'http://json-schema.org/draft-04/schema#';\n\t\n\t/**\n\t * Creates and returns a new JSON validator for schema draft version 4.\n\t * Version detection for v4 takes place by checking if the `$schema` property of the root schema equals the\n\t * uri `http://json-schema.org/draft-04/schema#`.\n\t * Missing or other values for `$schema` will lead to an error.\n\t *\n\t * It returns an object with `validate` function, accepting the object to validate against the `jsonSchema`,\n\t * and it returns an array containing all errors found.\n\t * If the array is empty, no errors were found.\n\t * If `optionalOptions.useDefault` was set to `true`, calling `valdate` will modify the argument object by\n\t * adding missing default values.\n\t *\n\t * @param {Object} jsonSchema\n\t *    the JSON schema to use when validating\n\t * @param {Object} [optionalOptions]\n\t *    an optional set of options\n\t * @param {Boolean} [optionalOptions.prohibitAdditionalProperties=false]\n\t *    sets additionalProperties to false if not defined otherwise for the according object schema\n\t * @param {Boolean} [optionalOptions.checkRequired=true]\n\t *    (jjv option) if `true` it reports missing required properties, otherwise it allows missing\n\t *    required properties. Default is `true`\n\t * @param {Boolean} [optionalOptions.useDefault=false]\n\t *    (jjv option) If true it modifies the validated object to have the default values for missing\n\t *    non-required fields. Default is `false`\n\t * @param {Boolean} [optionalOptions.useCoerce=false]\n\t *    (jjv option) if `true` it enables type coercion where defined. Default is `false`\n\t * @param {Boolean} [optionalOptions.removeAdditional=false]\n\t *    (jjv option) if `true` it removes all attributes of an object which are not matched by the\n\t *    schema's specification. Default is `false`\n\t *\n\t * @return {Object}\n\t *    a new instance of JsonValidator\n\t */\n\tfunction create(jsonSchema) {\n\t   var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t\n\t   var env = (0, _jjv2.default)();\n\t   var options = Object.assign({\n\t      prohibitAdditionalProperties: false\n\t   }, optionalOptions);\n\t   Object.assign(env.defaultOptions, options);\n\t\n\t   if (!('$schema' in jsonSchema)) {\n\t      throw new Error('Missing schema version. Use the $schema property to define it.');\n\t   }\n\t\n\t   if (jsonSchema.$schema !== JSON_SCHEMA_V4_URI) {\n\t      throw new Error('Unsupported schema version \"' + jsonSchema.$schema + '\". Only V4 is supported: \"' + JSON_SCHEMA_V4_URI + '\".');\n\t   }\n\t\n\t   if (options.prohibitAdditionalProperties) {\n\t      prohibitAdditionalProperties(jsonSchema);\n\t   }\n\t\n\t   var origValidate = env.validate;\n\t\n\t   env.validate = function (object) {\n\t      var result = origValidate.call(env, jsonSchema, object);\n\t      return !result ? [] : (0, _jjve2.default)(env)(jsonSchema, object, result).map(function (err) {\n\t         return Object.assign({}, err, { message: err.message + '. Path: \"' + err.path + '\".' });\n\t      });\n\t   };\n\t\n\t   return env;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction prohibitAdditionalProperties(schema) {\n\t   if (('properties' in schema || 'patternProperties' in schema) && !('additionalProperties' in schema)) {\n\t      schema.additionalProperties = false;\n\t   }\n\t\n\t   if ('properties' in schema) {\n\t      Object.keys(schema.properties).forEach(function (name) {\n\t         prohibitAdditionalProperties(schema.properties[name]);\n\t      });\n\t   }\n\t\n\t   if ('additionalProperties' in schema && _typeof(schema.additionalProperties) === 'object') {\n\t      prohibitAdditionalProperties(schema.additionalProperties);\n\t   }\n\t\n\t   if ('patternProperties' in schema) {\n\t      Object.keys(schema.patternProperties).forEach(function (pattern) {\n\t         prohibitAdditionalProperties(schema.patternProperties[pattern]);\n\t      });\n\t   }\n\t\n\t   if ('items' in schema) {\n\t      prohibitAdditionalProperties(schema.items);\n\t   }\n\t}\n\n/***/ },\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';module.exports = __webpack_require__(45);\n\n/***/ },\n\n/***/ 45:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;}; /* jshint proto: true */\n\t\n\t/**\n\t                                                                                                                                                                                                                                                                                                                 * jjv.js -- A javascript library to validate json input through a json-schema.\n\t                                                                                                                                                                                                                                                                                                                 *\n\t                                                                                                                                                                                                                                                                                                                 * Copyright (c) 2013 Alex Cornejo.\n\t                                                                                                                                                                                                                                                                                                                 *\n\t                                                                                                                                                                                                                                                                                                                 * Redistributable under a MIT-style open source license.\n\t                                                                                                                                                                                                                                                                                                                 */\n\t\n\t(function () {\n\t  var clone = function clone(obj) {\n\t    // Handle the 3 simple types (string, number, function), and null or undefined\n\t    if (obj === null || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') return obj;\n\t    var copy;\n\t\n\t    // Handle Date\n\t    if (obj instanceof Date) {\n\t      copy = new Date();\n\t      copy.setTime(obj.getTime());\n\t      return copy;\n\t    }\n\t\n\t    // handle RegExp\n\t    if (obj instanceof RegExp) {\n\t      copy = new RegExp(obj);\n\t      return copy;\n\t    }\n\t\n\t    // Handle Array\n\t    if (obj instanceof Array) {\n\t      copy = [];\n\t      for (var i = 0, len = obj.length; i < len; i++) {\n\t        copy[i] = clone(obj[i]);}\n\t      return copy;\n\t    }\n\t\n\t    // Handle Object\n\t    if (obj instanceof Object) {\n\t      copy = {};\n\t      //           copy = Object.create(Object.getPrototypeOf(obj));\n\t      for (var attr in obj) {\n\t        if (obj.hasOwnProperty(attr))\n\t        copy[attr] = clone(obj[attr]);\n\t      }\n\t      return copy;\n\t    }\n\t\n\t    throw new Error(\"Unable to clone object!\");\n\t  };\n\t\n\t  var clone_stack = function clone_stack(stack) {\n\t    var new_stack = [clone(stack[0])],key = new_stack[0].key,obj = new_stack[0].object;\n\t    for (var i = 1, len = stack.length; i < len; i++) {\n\t      obj = obj[key];\n\t      key = stack[i].key;\n\t      new_stack.push({ object: obj, key: key });\n\t    }\n\t    return new_stack;\n\t  };\n\t\n\t  var copy_stack = function copy_stack(new_stack, old_stack) {\n\t    var stack_last = new_stack.length - 1,key = new_stack[stack_last].key;\n\t    old_stack[stack_last].object[key] = new_stack[stack_last].object[key];\n\t  };\n\t\n\t  var handled = {\n\t    'type': true,\n\t    'not': true,\n\t    'anyOf': true,\n\t    'allOf': true,\n\t    'oneOf': true,\n\t    '$ref': true,\n\t    '$schema': true,\n\t    'id': true,\n\t    'exclusiveMaximum': true,\n\t    'exclusiveMininum': true,\n\t    'properties': true,\n\t    'patternProperties': true,\n\t    'additionalProperties': true,\n\t    'items': true,\n\t    'additionalItems': true,\n\t    'required': true,\n\t    'default': true,\n\t    'title': true,\n\t    'description': true,\n\t    'definitions': true,\n\t    'dependencies': true };\n\t\n\t\n\t  var fieldType = {\n\t    'null': function _null(x) {\n\t      return x === null;\n\t    },\n\t    'string': function string(x) {\n\t      return typeof x === 'string';\n\t    },\n\t    'boolean': function boolean(x) {\n\t      return typeof x === 'boolean';\n\t    },\n\t    'number': function number(x) {\n\t      // Use x === x instead of !isNaN(x) for speed\n\t      return typeof x === 'number' && x === x;\n\t    },\n\t    'integer': function integer(x) {\n\t      return typeof x === 'number' && x % 1 === 0;\n\t    },\n\t    'object': function object(x) {\n\t      return x && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && !Array.isArray(x);\n\t    },\n\t    'array': function array(x) {\n\t      return Array.isArray(x);\n\t    },\n\t    'date': function date(x) {\n\t      return x instanceof Date;\n\t    } };\n\t\n\t\n\t  // missing: uri, date-time, ipv4, ipv6\n\t  var fieldFormat = {\n\t    'alpha': function alpha(v) {\n\t      return (/^[a-zA-Z]+$/.test(v));\n\t    },\n\t    'alphanumeric': function alphanumeric(v) {\n\t      return (/^[a-zA-Z0-9]+$/.test(v));\n\t    },\n\t    'identifier': function identifier(v) {\n\t      return (/^[-_a-zA-Z0-9]+$/.test(v));\n\t    },\n\t    'hexadecimal': function hexadecimal(v) {\n\t      return (/^[a-fA-F0-9]+$/.test(v));\n\t    },\n\t    'numeric': function numeric(v) {\n\t      return (/^[0-9]+$/.test(v));\n\t    },\n\t    'date-time': function dateTime(v) {\n\t      return !isNaN(Date.parse(v)) && v.indexOf('/') === -1;\n\t    },\n\t    'uppercase': function uppercase(v) {\n\t      return v === v.toUpperCase();\n\t    },\n\t    'lowercase': function lowercase(v) {\n\t      return v === v.toLowerCase();\n\t    },\n\t    'hostname': function hostname(v) {\n\t      return v.length < 256 && /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$/.test(v);\n\t    },\n\t    'uri': function uri(v) {\n\t      return (/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/.test(v));\n\t    },\n\t    'email': function email(v) {// email, ipv4 and ipv6 adapted from node-validator\n\t      return (/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/.test(v));\n\t    },\n\t    'ipv4': function ipv4(v) {\n\t      if (/^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$/.test(v)) {\n\t        var parts = v.split('.').sort();\n\t        if (parts[3] <= 255)\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    'ipv6': function ipv6(v) {\n\t      return (/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/.test(v));\n\t      /*  return (/^::|^::1|^([a-fA-F0-9]{1,4}::?){1,7}([a-fA-F0-9]{1,4})$/).test(v); */\n\t    } };\n\t\n\t\n\t  var fieldValidate = {\n\t    'readOnly': function readOnly(v, p) {\n\t      return false;\n\t    },\n\t    // ****** numeric validation ********\n\t    'minimum': function minimum(v, p, schema) {\n\t      return !(v < p || schema.exclusiveMinimum && v <= p);\n\t    },\n\t    'maximum': function maximum(v, p, schema) {\n\t      return !(v > p || schema.exclusiveMaximum && v >= p);\n\t    },\n\t    'multipleOf': function multipleOf(v, p) {\n\t      return v / p % 1 === 0 || typeof v !== 'number';\n\t    },\n\t    // ****** string validation ******\n\t    'pattern': function pattern(v, p) {\n\t      if (typeof v !== 'string')\n\t      return true;\n\t      var pattern, modifiers;\n\t      if (typeof p === 'string')\n\t      pattern = p;else\n\t      {\n\t        pattern = p[0];\n\t        modifiers = p[1];\n\t      }\n\t      var regex = new RegExp(pattern, modifiers);\n\t      return regex.test(v);\n\t    },\n\t    'minLength': function minLength(v, p) {\n\t      return v.length >= p || typeof v !== 'string';\n\t    },\n\t    'maxLength': function maxLength(v, p) {\n\t      return v.length <= p || typeof v !== 'string';\n\t    },\n\t    // ***** array validation *****\n\t    'minItems': function minItems(v, p) {\n\t      return v.length >= p || !Array.isArray(v);\n\t    },\n\t    'maxItems': function maxItems(v, p) {\n\t      return v.length <= p || !Array.isArray(v);\n\t    },\n\t    'uniqueItems': function uniqueItems(v, p) {\n\t      var hash = {},key;\n\t      for (var i = 0, len = v.length; i < len; i++) {\n\t        key = JSON.stringify(v[i]);\n\t        if (hash.hasOwnProperty(key))\n\t        return false;else\n\t\n\t        hash[key] = true;\n\t      }\n\t      return true;\n\t    },\n\t    // ***** object validation ****\n\t    'minProperties': function minProperties(v, p) {\n\t      if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object')\n\t      return true;\n\t      var count = 0;\n\t      for (var attr in v) {if (v.hasOwnProperty(attr)) count = count + 1;}\n\t      return count >= p;\n\t    },\n\t    'maxProperties': function maxProperties(v, p) {\n\t      if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object')\n\t      return true;\n\t      var count = 0;\n\t      for (var attr in v) {if (v.hasOwnProperty(attr)) count = count + 1;}\n\t      return count <= p;\n\t    },\n\t    // ****** all *****\n\t    'constant': function constant(v, p) {\n\t      return JSON.stringify(v) == JSON.stringify(p);\n\t    },\n\t    'enum': function _enum(v, p) {\n\t      var i, len, vs;\n\t      if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object') {\n\t        vs = JSON.stringify(v);\n\t        for (i = 0, len = p.length; i < len; i++) {\n\t          if (vs === JSON.stringify(p[i]))\n\t          return true;}\n\t      } else {\n\t        for (i = 0, len = p.length; i < len; i++) {\n\t          if (v === p[i])\n\t          return true;}\n\t      }\n\t      return false;\n\t    } };\n\t\n\t\n\t  var normalizeID = function normalizeID(id) {\n\t    return id.indexOf(\"://\") === -1 ? id : id.split(\"#\")[0];\n\t  };\n\t\n\t  var resolveURI = function resolveURI(env, schema_stack, uri) {\n\t    var curschema, components, hash_idx, name;\n\t\n\t    hash_idx = uri.indexOf('#');\n\t\n\t    if (hash_idx === -1) {\n\t      if (!env.schema.hasOwnProperty(uri))\n\t      return null;\n\t      return [env.schema[uri]];\n\t    }\n\t\n\t    if (hash_idx > 0) {\n\t      name = uri.substr(0, hash_idx);\n\t      uri = uri.substr(hash_idx + 1);\n\t      if (!env.schema.hasOwnProperty(name)) {\n\t        if (schema_stack && schema_stack[0].id === name)\n\t        schema_stack = [schema_stack[0]];else\n\t\n\t        return null;\n\t      } else\n\t      schema_stack = [env.schema[name]];\n\t    } else {\n\t      if (!schema_stack)\n\t      return null;\n\t      uri = uri.substr(1);\n\t    }\n\t\n\t    if (uri === '')\n\t    return [schema_stack[0]];\n\t\n\t    if (uri.charAt(0) === '/') {\n\t      uri = uri.substr(1);\n\t      curschema = schema_stack[0];\n\t      components = uri.split('/');\n\t      while (components.length > 0) {\n\t        if (!curschema.hasOwnProperty(components[0]))\n\t        return null;\n\t        curschema = curschema[components[0]];\n\t        schema_stack.push(curschema);\n\t        components.shift();\n\t      }\n\t      return schema_stack;\n\t    } else // FIX: should look for subschemas whose id matches uri\n\t      return null;\n\t  };\n\t\n\t  var resolveObjectRef = function resolveObjectRef(object_stack, uri) {\n\t    var components,object,last_frame = object_stack.length - 1,skip_frames,frame,m = /^(\\d+)/.exec(uri);\n\t\n\t    if (m) {\n\t      uri = uri.substr(m[0].length);\n\t      skip_frames = parseInt(m[1], 10);\n\t      if (skip_frames < 0 || skip_frames > last_frame)\n\t      return;\n\t      frame = object_stack[last_frame - skip_frames];\n\t      if (uri === '#')\n\t      return frame.key;\n\t    } else\n\t    frame = object_stack[0];\n\t\n\t    object = frame.object[frame.key];\n\t\n\t    if (uri === '')\n\t    return object;\n\t\n\t    if (uri.charAt(0) === '/') {\n\t      uri = uri.substr(1);\n\t      components = uri.split('/');\n\t      while (components.length > 0) {\n\t        components[0] = components[0].replace(/~1/g, '/').replace(/~0/g, '~');\n\t        if (!object.hasOwnProperty(components[0]))\n\t        return;\n\t        object = object[components[0]];\n\t        components.shift();\n\t      }\n\t      return object;\n\t    } else\n\t    return;\n\t  };\n\t\n\t  var checkValidity = function checkValidity(env, schema_stack, object_stack, options) {\n\t    var i, len, count, hasProp, hasPattern;\n\t    var p,v,malformed = false,objerrs = {},objerr,props,matched;\n\t    var sl = schema_stack.length - 1,schema = schema_stack[sl],new_stack;\n\t    var ol = object_stack.length - 1,object = object_stack[ol].object,name = object_stack[ol].key,prop = object[name];\n\t    var errCount, minErrCount;\n\t\n\t    if (schema.hasOwnProperty('$ref')) {\n\t      schema_stack = resolveURI(env, schema_stack, schema.$ref);\n\t      if (!schema_stack)\n\t      return { '$ref': schema.$ref };else\n\t\n\t      return checkValidity(env, schema_stack, object_stack, options);\n\t    }\n\t\n\t    if (schema.hasOwnProperty('type')) {\n\t      if (typeof schema.type === 'string') {\n\t        if (options.useCoerce && env.coerceType.hasOwnProperty(schema.type))\n\t        prop = object[name] = env.coerceType[schema.type](prop);\n\t        if (!env.fieldType[schema.type](prop))\n\t        return { 'type': schema.type };\n\t      } else {\n\t        malformed = true;\n\t        for (i = 0, len = schema.type.length; i < len && malformed; i++) {\n\t          if (env.fieldType[schema.type[i]](prop))\n\t          malformed = false;}\n\t        if (malformed)\n\t        return { 'type': schema.type };\n\t      }\n\t    }\n\t\n\t    if (schema.hasOwnProperty('allOf')) {\n\t      for (i = 0, len = schema.allOf.length; i < len; i++) {\n\t        objerr = checkValidity(env, schema_stack.concat(schema.allOf[i]), object_stack, options);\n\t        if (objerr)\n\t        return objerr;\n\t      }\n\t    }\n\t\n\t    if (!options.useCoerce && !options.useDefault && !options.removeAdditional) {\n\t      if (schema.hasOwnProperty('oneOf')) {\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n\t          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), object_stack, options);\n\t          if (!objerr) {\n\t            count = count + 1;\n\t            if (count > 1)\n\t            break;\n\t          } else {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t              minErrCount = errCount;\n\t              objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (count > 1)\n\t        return { 'oneOf': true };else\n\t        if (count < 1)\n\t        return objerrs;\n\t        objerrs = {};\n\t      }\n\t\n\t      if (schema.hasOwnProperty('anyOf')) {\n\t        objerrs = null;\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n\t          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), object_stack, options);\n\t          if (!objerr) {\n\t            objerrs = null;\n\t            break;\n\t          } else\n\t          {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t              minErrCount = errCount;\n\t              objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (objerrs)\n\t        return objerrs;\n\t      }\n\t\n\t      if (schema.hasOwnProperty('not')) {\n\t        objerr = checkValidity(env, schema_stack.concat(schema.not), object_stack, options);\n\t        if (!objerr)\n\t        return { 'not': true };\n\t      }\n\t    } else {\n\t      if (schema.hasOwnProperty('oneOf')) {\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n\t          new_stack = clone_stack(object_stack);\n\t          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), new_stack, options);\n\t          if (!objerr) {\n\t            count = count + 1;\n\t            if (count > 1)\n\t            break;else\n\t\n\t            copy_stack(new_stack, object_stack);\n\t          } else {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t              minErrCount = errCount;\n\t              objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (count > 1)\n\t        return { 'oneOf': true };else\n\t        if (count < 1)\n\t        return objerrs;\n\t        objerrs = {};\n\t      }\n\t\n\t      if (schema.hasOwnProperty('anyOf')) {\n\t        objerrs = null;\n\t        minErrCount = Infinity;\n\t        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n\t          new_stack = clone_stack(object_stack);\n\t          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), new_stack, options);\n\t          if (!objerr) {\n\t            copy_stack(new_stack, object_stack);\n\t            objerrs = null;\n\t            break;\n\t          } else\n\t          {\n\t            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n\t            if (errCount < minErrCount) {\n\t              minErrCount = errCount;\n\t              objerrs = objerr;\n\t            }\n\t          }\n\t        }\n\t        if (objerrs)\n\t        return objerrs;\n\t      }\n\t\n\t      if (schema.hasOwnProperty('not')) {\n\t        new_stack = clone_stack(object_stack);\n\t        objerr = checkValidity(env, schema_stack.concat(schema.not), new_stack, options);\n\t        if (!objerr)\n\t        return { 'not': true };\n\t      }\n\t    }\n\t\n\t    if (schema.hasOwnProperty('dependencies')) {\n\t      for (p in schema.dependencies) {\n\t        if (schema.dependencies.hasOwnProperty(p) && prop.hasOwnProperty(p)) {\n\t          if (Array.isArray(schema.dependencies[p])) {\n\t            for (i = 0, len = schema.dependencies[p].length; i < len; i++) {\n\t              if (!prop.hasOwnProperty(schema.dependencies[p][i])) {\n\t                return { 'dependencies': true };\n\t              }}\n\t          } else {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.dependencies[p]), object_stack, options);\n\t            if (objerr)\n\t            return objerr;\n\t          }\n\t        }}\n\t    }\n\t\n\t    if (!Array.isArray(prop)) {\n\t      props = [];\n\t      objerrs = {};\n\t      for (p in prop) {\n\t        if (prop.hasOwnProperty(p))\n\t        props.push(p);}\n\t\n\t      if (options.checkRequired && schema.required) {\n\t        for (i = 0, len = schema.required.length; i < len; i++) {\n\t          if (!prop.hasOwnProperty(schema.required[i])) {\n\t            objerrs[schema.required[i]] = { 'required': true };\n\t            malformed = true;\n\t          }}\n\t      }\n\t\n\t      hasProp = schema.hasOwnProperty('properties');\n\t      hasPattern = schema.hasOwnProperty('patternProperties');\n\t      if (hasProp || hasPattern) {\n\t        i = props.length;\n\t        while (i--) {\n\t          matched = false;\n\t          if (hasProp && schema.properties.hasOwnProperty(props[i])) {\n\t            matched = true;\n\t            objerr = checkValidity(env, schema_stack.concat(schema.properties[props[i]]), object_stack.concat({ object: prop, key: props[i] }), options);\n\t            if (objerr !== null) {\n\t              objerrs[props[i]] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t          if (hasPattern) {\n\t            for (p in schema.patternProperties) {\n\t              if (schema.patternProperties.hasOwnProperty(p) && props[i].match(p)) {\n\t                matched = true;\n\t                objerr = checkValidity(env, schema_stack.concat(schema.patternProperties[p]), object_stack.concat({ object: prop, key: props[i] }), options);\n\t                if (objerr !== null) {\n\t                  objerrs[props[i]] = objerr;\n\t                  malformed = true;\n\t                }\n\t              }}\n\t          }\n\t          if (matched)\n\t          props.splice(i, 1);\n\t        }\n\t      }\n\t\n\t      if (options.useDefault && hasProp && !malformed) {\n\t        for (p in schema.properties) {\n\t          if (schema.properties.hasOwnProperty(p) && !prop.hasOwnProperty(p) && schema.properties[p].hasOwnProperty('default'))\n\t          prop[p] = schema.properties[p]['default'];}\n\t      }\n\t\n\t      if (options.removeAdditional && hasProp && schema.additionalProperties !== true && _typeof(schema.additionalProperties) !== 'object') {\n\t        for (i = 0, len = props.length; i < len; i++) {\n\t          delete prop[props[i]];}\n\t      } else {\n\t        if (schema.hasOwnProperty('additionalProperties')) {\n\t          if (typeof schema.additionalProperties === 'boolean') {\n\t            if (!schema.additionalProperties) {\n\t              for (i = 0, len = props.length; i < len; i++) {\n\t                objerrs[props[i]] = { 'additional': true };\n\t                malformed = true;\n\t              }\n\t            }\n\t          } else {\n\t            for (i = 0, len = props.length; i < len; i++) {\n\t              objerr = checkValidity(env, schema_stack.concat(schema.additionalProperties), object_stack.concat({ object: prop, key: props[i] }), options);\n\t              if (objerr !== null) {\n\t                objerrs[props[i]] = objerr;\n\t                malformed = true;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (malformed)\n\t      return { 'schema': objerrs };\n\t    } else {\n\t      if (schema.hasOwnProperty('items')) {\n\t        if (Array.isArray(schema.items)) {\n\t          for (i = 0, len = schema.items.length; i < len; i++) {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.items[i]), object_stack.concat({ object: prop, key: i }), options);\n\t            if (objerr !== null) {\n\t              objerrs[i] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t          if (prop.length > len && schema.hasOwnProperty('additionalItems')) {\n\t            if (typeof schema.additionalItems === 'boolean') {\n\t              if (!schema.additionalItems)\n\t              return { 'additionalItems': true };\n\t            } else {\n\t              for (i = len, len = prop.length; i < len; i++) {\n\t                objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({ object: prop, key: i }), options);\n\t                if (objerr !== null) {\n\t                  objerrs[i] = objerr;\n\t                  malformed = true;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          for (i = 0, len = prop.length; i < len; i++) {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.items), object_stack.concat({ object: prop, key: i }), options);\n\t            if (objerr !== null) {\n\t              objerrs[i] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t        }\n\t      } else if (schema.hasOwnProperty('additionalItems')) {\n\t        if (typeof schema.additionalItems !== 'boolean') {\n\t          for (i = 0, len = prop.length; i < len; i++) {\n\t            objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({ object: prop, key: i }), options);\n\t            if (objerr !== null) {\n\t              objerrs[i] = objerr;\n\t              malformed = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (malformed)\n\t      return { 'schema': objerrs };\n\t    }\n\t\n\t    for (v in schema) {\n\t      if (schema.hasOwnProperty(v) && !handled.hasOwnProperty(v)) {\n\t        if (v === 'format') {\n\t          if (env.fieldFormat.hasOwnProperty(schema[v]) && !env.fieldFormat[schema[v]](prop, schema, object_stack, options)) {\n\t            objerrs[v] = true;\n\t            malformed = true;\n\t          }\n\t        } else {\n\t          if (env.fieldValidate.hasOwnProperty(v) && !env.fieldValidate[v](prop, schema[v].hasOwnProperty('$data') ? resolveObjectRef(object_stack, schema[v].$data) : schema[v], schema, object_stack, options)) {\n\t            objerrs[v] = true;\n\t            malformed = true;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (malformed)\n\t    return objerrs;else\n\t\n\t    return null;\n\t  };\n\t\n\t  var defaultOptions = {\n\t    useDefault: false,\n\t    useCoerce: false,\n\t    checkRequired: true,\n\t    removeAdditional: false };\n\t\n\t\n\t  function Environment() {\n\t    if (!(this instanceof Environment))\n\t    return new Environment();\n\t\n\t    this.coerceType = {};\n\t    this.fieldType = clone(fieldType);\n\t    this.fieldValidate = clone(fieldValidate);\n\t    this.fieldFormat = clone(fieldFormat);\n\t    this.defaultOptions = clone(defaultOptions);\n\t    this.schema = {};\n\t  }\n\t\n\t  Environment.prototype = {\n\t    validate: function validate(name, object, options) {\n\t      var schema_stack = [name],errors = null,object_stack = [{ object: { '__root__': object }, key: '__root__' }];\n\t\n\t      if (typeof name === 'string') {\n\t        schema_stack = resolveURI(this, null, name);\n\t        if (!schema_stack)\n\t        throw new Error('jjv: could not find schema \\'' + name + '\\'.');\n\t      }\n\t\n\t      if (!options) {\n\t        options = this.defaultOptions;\n\t      } else {\n\t        for (var p in this.defaultOptions) {\n\t          if (this.defaultOptions.hasOwnProperty(p) && !options.hasOwnProperty(p))\n\t          options[p] = this.defaultOptions[p];}\n\t      }\n\t\n\t      errors = checkValidity(this, schema_stack, object_stack, options);\n\t\n\t      if (errors)\n\t      return { validation: errors.hasOwnProperty('schema') ? errors.schema : errors };else\n\t\n\t      return null;\n\t    },\n\t\n\t    resolveRef: function resolveRef(schema_stack, $ref) {\n\t      return resolveURI(this, schema_stack, $ref);\n\t    },\n\t\n\t    addType: function addType(name, func) {\n\t      this.fieldType[name] = func;\n\t    },\n\t\n\t    addTypeCoercion: function addTypeCoercion(type, func) {\n\t      this.coerceType[type] = func;\n\t    },\n\t\n\t    addCheck: function addCheck(name, func) {\n\t      this.fieldValidate[name] = func;\n\t    },\n\t\n\t    addFormat: function addFormat(name, func) {\n\t      this.fieldFormat[name] = func;\n\t    },\n\t\n\t    addSchema: function addSchema(name, schema) {\n\t      if (!schema && name) {\n\t        schema = name;\n\t        name = undefined;\n\t      }\n\t      if (schema.hasOwnProperty('id') && typeof schema.id === 'string' && schema.id !== name) {\n\t        if (schema.id.charAt(0) === '/')\n\t        throw new Error('jjv: schema id\\'s starting with / are invalid.');\n\t        this.schema[normalizeID(schema.id)] = schema;\n\t      } else if (!name) {\n\t        throw new Error('jjv: schema needs either a name or id attribute.');\n\t      }\n\t      if (name)\n\t      this.schema[normalizeID(name)] = schema;\n\t    } };\n\t\n\t\n\t  // Export for use in server and client.\n\t  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n\t  module.exports = Environment;else\n\t  if (true)\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {return Environment;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else\n\t\n\t  this.jjv = Environment;\n\t}).call(undefined);\n\n/***/ },\n\n/***/ 46:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};(function () {\n\t  'use strict';\n\t\n\t  function make(o) {\n\t    var errors = [];\n\t\n\t    var keys = Object.keys(o.validation);\n\t\n\t    // when we're on a leaf node we need to handle the validation errors,\n\t    // otherwise we continue walking\n\t    var leaf = keys.every(function (key) {\n\t      return _typeof(o.validation[key]) !== 'object' ||\n\t      isArray(o.validation[key]);\n\t    });\n\t\n\t    if (leaf) {\n\t      // step through each validation issue\n\t      // example: { required: true }\n\t      keys.forEach(function (key) {\n\t        var error, properties;\n\t        try {\n\t          switch (key) {\n\t            case 'type':\n\t              var type = _typeof(o.data);\n\t\n\t              // further discover types\n\t              if (type === 'number' && ('' + o.data).match(/^\\d+$/)) {\n\t                type = 'integer';\n\t              } else if (type === 'object' && Array.isArray(o.data)) {\n\t                type = 'array';\n\t              }\n\t\n\t              // the value of type is the required type (ex: { type: 'string' })\n\t              error = {\n\t                code: 'INVALID_TYPE',\n\t                message: 'Invalid type: ' + type + ' should be ' + (\n\t                isArray(o.validation[key]) ? 'one of ' : '') +\n\t                o.validation[key] };\n\t\n\t\n\t              break;\n\t            case 'required':\n\t              properties = o.ns;\n\t\n\t              error = {\n\t                code: 'OBJECT_REQUIRED',\n\t                message: 'Missing required property: ' +\n\t                properties[properties.length - 1] };\n\t\n\t\n\t              break;\n\t            case 'minimum':\n\t              error = {\n\t                code: 'MINIMUM',\n\t                message: 'Value ' + o.data + ' is less than minimum ' +\n\t                o.schema.minimum };\n\t\n\t\n\t              break;\n\t            case 'maximum':\n\t              error = {\n\t                code: 'MAXIMUM',\n\t                message: 'Value ' + o.data + ' is greater than maximum ' +\n\t                o.schema.maximum };\n\t\n\t\n\t              break;\n\t            case 'multipleOf':\n\t              error = {\n\t                code: 'MULTIPLE_OF',\n\t                message: 'Value ' + o.data + ' is not a multiple of ' +\n\t                o.schema.multipleOf };\n\t\n\t\n\t              break;\n\t            case 'pattern':\n\t              error = {\n\t                code: 'PATTERN',\n\t                message: 'String does not match pattern: ' + o.schema.pattern };\n\t\n\t\n\t              break;\n\t            case 'minLength':\n\t              error = {\n\t                code: 'MIN_LENGTH',\n\t                message: 'String is too short (' + o.data.length + ' chars), ' +\n\t                'minimum ' + o.schema.minLength };\n\t\n\t\n\t              break;\n\t            case 'maxLength':\n\t              error = {\n\t                code: 'MAX_LENGTH',\n\t                message: 'String is too long (' + o.data.length + ' chars), ' +\n\t                'maximum ' + o.schema.maxLength };\n\t\n\t\n\t              break;\n\t            case 'minItems':\n\t              error = {\n\t                code: 'ARRAY_LENGTH_SHORT',\n\t                message: 'Array is too short (' + o.data.length + '), ' +\n\t                'minimum ' + o.schema.minItems };\n\t\n\t\n\t              break;\n\t            case 'maxItems':\n\t              error = {\n\t                code: 'ARRAY_LENGTH_LONG',\n\t                message: 'Array is too long (' + o.data.length + '), maximum ' +\n\t                o.schema.maxItems };\n\t\n\t\n\t              break;\n\t            case 'uniqueItems':\n\t              error = {\n\t                code: 'ARRAY_UNIQUE',\n\t                message: 'Array items are not unique' };\n\t\n\t\n\t              break;\n\t            case 'minProperties':\n\t              error = {\n\t                code: 'OBJECT_PROPERTIES_MINIMUM',\n\t                message: 'Too few properties defined (' +\n\t                Object.keys(o.data).length + '), minimum ' +\n\t                o.schema.minProperties };\n\t\n\t\n\t              break;\n\t            case 'maxProperties':\n\t              error = {\n\t                code: 'OBJECT_PROPERTIES_MAXIMUM',\n\t                message: 'Too many properties defined (' +\n\t                Object.keys(o.data).length + '), maximum ' +\n\t                o.schema.maxProperties };\n\t\n\t\n\t              break;\n\t            case 'enum':\n\t              error = {\n\t                code: 'ENUM_MISMATCH',\n\t                message: 'No enum match (' + o.data + '), expects: ' +\n\t                o.schema['enum'].join(', ') };\n\t\n\t\n\t              break;\n\t            case 'not':\n\t              error = {\n\t                code: 'NOT_PASSED',\n\t                message: 'Data matches schema from \"not\"' };\n\t\n\t\n\t              break;\n\t            case 'additional':\n\t              properties = o.ns;\n\t\n\t              error = {\n\t                code: 'ADDITIONAL_PROPERTIES',\n\t                message: 'Additional properties not allowed: ' +\n\t                properties[properties.length - 1] };\n\t\n\t\n\t              break;\n\t            case 'format':\n\t              error = {\n\t                code: 'FORMAT',\n\t                message: 'Value does not satisfy format: ' +\n\t                o.schema.format };\n\t\n\t\n\t              break;}\n\t\n\t        } catch (err) {\n\t\n\t        } // ignore errors\n\t\n\t        // unhandled errors\n\t        if (!error) {\n\t          error = {\n\t            code: 'FAILED',\n\t            message: 'Validation error: ' + key };\n\t\n\t\n\t          try {\n\t            if (typeof o.validation[key] !== 'boolean') {\n\t              error.message = ' (' + o.validation[key] + ')';\n\t            }\n\t          } catch (err) {\n\t            // ignore errors\n\t          }\n\t        }\n\t\n\t        error.code = 'VALIDATION_' + error.code;\n\t        if (o.data !== undefined) error.data = o.data;\n\t        error.path = o.ns;\n\t        errors.push(error);\n\t      });\n\t    } else {\n\t      // handle all non-leaf children\n\t      keys.forEach(function (key) {\n\t        var s;\n\t\n\t        if (o.schema.$ref) {\n\t          if (o.schema.$ref.match(/#\\/definitions\\//)) {\n\t            o.schema = o.definitions[o.schema.$ref.slice(14)];\n\t          } else {\n\t            o.schema = o.schema.$ref;\n\t          }\n\t\n\t          if (typeof o.schema === 'string') {\n\t            o.schema = o.env.resolveRef(null, o.schema);\n\t            if (o.schema) o.schema = o.schema[0];\n\t          }\n\t\n\t          if (!o.schema.type) o.schema.type = 'object';\n\t        }\n\t\n\t        if (o.schema && o.schema.type) {\n\t          if (allowsType(o.schema, 'object')) {\n\t            if (o.schema.properties && o.schema.properties[key]) {\n\t              s = o.schema.properties[key];\n\t            }\n\t\n\t            if (!s && o.schema.patternProperties) {\n\t              Object.keys(o.schema.patternProperties).some(function (pkey) {\n\t                if (key.match(new RegExp(pkey))) {\n\t                  s = o.schema.patternProperties[pkey];\n\t                  return true;\n\t                }\n\t              });\n\t            }\n\t\n\t            if (!s && o.schema.hasOwnProperty('additionalProperties')) {\n\t              if (typeof o.schema.additionalProperties === 'boolean') {\n\t                s = {};\n\t              } else {\n\t                s = o.schema.additionalProperties;\n\t              }\n\t            }\n\t          }\n\t\n\t          if (allowsType(o.schema, 'array')) {\n\t            s = o.schema.items;\n\t          }\n\t        }\n\t\n\t        var opts = {\n\t          env: o.env,\n\t          schema: s || {},\n\t          ns: o.ns.concat(key) };\n\t\n\t\n\t        try {\n\t          opts.data = o.data[key];\n\t        } catch (err) {\n\t          // ignore errors\n\t        }\n\t\n\t        try {\n\t          opts.validation = o.validation[key].schema ?\n\t          o.validation[key].schema :\n\t          o.validation[key];\n\t        } catch (err) {\n\t          opts.validation = {};\n\t        }\n\t\n\t        try {\n\t          opts.definitions = s.definitions || o.definitions;\n\t        } catch (err) {\n\t          opts.definitions = o.definitions;\n\t        }\n\t\n\t        errors = errors.concat(make(opts));\n\t      });\n\t    }\n\t\n\t    return errors;\n\t  }\n\t\n\t  function allowsType(schema, type) {\n\t    if (typeof schema.type === 'string') {\n\t      return schema.type === type;\n\t    }\n\t    if (isArray(schema.type)) {\n\t      return schema.type.indexOf(type) !== -1;\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function isArray(obj) {\n\t    if (typeof Array.isArray === 'function') {\n\t      return Array.isArray(obj);\n\t    }\n\t    return Object.prototype.toString.call(obj) === '[object Array]';\n\t  }\n\t\n\t  function formatPath(options) {\n\t    var root = options.hasOwnProperty('root') ?\n\t    options.root : '$';\n\t\n\t    var sep = options.hasOwnProperty('sep') ?\n\t    options.sep : '.';\n\t\n\t    return function (error) {\n\t      var path = root;\n\t\n\t      error.path.forEach(function (key) {\n\t        path += key.match(/^\\d+$/) ?\n\t        '[' + key + ']' :\n\t        key.match(/^[A-Z_$][0-9A-Z_$]*$/i) ?\n\t        sep + key :\n\t        '[' + JSON.stringify(key) + ']';\n\t      });\n\t\n\t      error.path = path;\n\t\n\t      return error;\n\t    };\n\t  }\n\t\n\t  function jjve(env) {\n\t    return function jjve(schema, data, result, options) {\n\t      if (!result || !result.validation) return [];\n\t\n\t      options = options || {};\n\t\n\t      if (typeof schema === 'string') {schema = env.schema[schema];}\n\t\n\t      var errors = make({\n\t        env: env,\n\t        schema: schema,\n\t        data: data,\n\t        validation: result.validation,\n\t        ns: [],\n\t        definitions: schema.definitions || {} });\n\t\n\t\n\t      if (errors.length && options.formatPath !== false) {\n\t        return errors.map(formatPath(options));\n\t      }\n\t\n\t      return errors;\n\t    };\n\t  }\n\t\n\t  // Export for use in server and client.\n\t  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t    module.exports = jjve;\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {return jjve;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else {\n\t    this.jjve = jjve;\n\t  }\n\t}).call(undefined);\n\n/***/ },\n\n/***/ 47:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                                                                                               * Released under the MIT license.\n\t                                                                                                                                                                                                                                                                               * http://laxarjs.org/license\n\t                                                                                                                                                                                                                                                                               */\n\t\n\t\n\texports.featuresForWidget = featuresForWidget;\n\t\n\tvar _json_validator = __webpack_require__(43);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar object = _interopRequireWildcard(_object);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// JSON schema formats:\n\tvar TOPIC_IDENTIFIER = '([a-z][+a-zA-Z0-9]*|[A-Z][+A-Z0-9]*)';\n\tvar SUB_TOPIC_FORMAT = new RegExp('^' + TOPIC_IDENTIFIER + '$');\n\tvar TOPIC_FORMAT = new RegExp('^(' + TOPIC_IDENTIFIER + '(-' + TOPIC_IDENTIFIER + ')*)$');\n\tvar FLAG_TOPIC_FORMAT = new RegExp('^[!]?(' + TOPIC_IDENTIFIER + '(-' + TOPIC_IDENTIFIER + ')*)$');\n\t// simplified RFC-5646 language-tag matcher with underscore/dash relaxation:\n\t// the parts are: language *(\"-\"|\"_\" script|region|constiant) *(\"-\"|\"_\" extension|privateuse)\n\tvar LANGUAGE_TAG_FORMAT = /^[a-z]{2,8}([-_][a-z0-9]{2,8})*([-_][a-z0-9][-_][a-z0-9]{2,8})*$/i;\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction featuresForWidget(widgetSpecification, widgetConfiguration, throwError) {\n\t   if (!widgetSpecification.features || Object.keys(widgetSpecification.features).length === 0) {\n\t      return {};\n\t   }\n\t\n\t   var featureConfiguration = widgetConfiguration.features || {};\n\t   var featuresSpec = widgetSpecification.features;\n\t   var validator = createFeaturesValidator(featuresSpec);\n\t\n\t   object.forEach(featuresSpec.properties, function (feature, name) {\n\t      // ensure that simple object/array features are at least defined\n\t      if (name in featureConfiguration) {\n\t         return;\n\t      }\n\t\n\t      if (feature.type === 'object') {\n\t         featureConfiguration[name] = {};\n\t      } else if (feature.type === 'array') {\n\t         featureConfiguration[name] = [];\n\t      }\n\t   });\n\t\n\t   var errors = validator.validate(featureConfiguration);\n\t\n\t   if (errors.length) {\n\t      var message = errors.reduce(function (message, error) {\n\t         return message + '\\n - ' + error.message.replace(/\\[/g, '\\\\[');\n\t      }, 'Validation of feature-configuration failed. Errors: ');\n\t\n\t      throwError(message);\n\t   }\n\t\n\t   return featureConfiguration;\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction createFeaturesValidator(featuresSpec) {\n\t   var validator = (0, _json_validator.create)(featuresSpec, {\n\t      prohibitAdditionalProperties: true,\n\t      useDefault: true\n\t   });\n\t\n\t   // allows 'mySubTopic0815', 'MY_SUB_TOPIC+OK' and variations:\n\t   validator.addFormat('sub-topic', function (subTopic) {\n\t      return typeof subTopic !== 'string' || SUB_TOPIC_FORMAT.test(subTopic);\n\t   });\n\t\n\t   // allows 'myTopic', 'myTopic-mySubTopic-SUB_0815+OK' and variations:\n\t   validator.addFormat('topic', function (topic) {\n\t      return typeof topic !== 'string' || TOPIC_FORMAT.test(topic);\n\t   });\n\t\n\t   // allows 'myTopic', '!myTopic-mySubTopic-SUB_0815+OK' and variations:\n\t   validator.addFormat('flag-topic', function (flagTopic) {\n\t      return typeof flagTopic !== 'string' || FLAG_TOPIC_FORMAT.test(flagTopic);\n\t   });\n\t\n\t   // allows 'de_DE', 'en-x-laxarJS' and such:\n\t   validator.addFormat('language-tag', function (languageTag) {\n\t      return typeof languageTag !== 'string' || LANGUAGE_TAG_FORMAT.test(languageTag);\n\t   });\n\t\n\t   // checks that object keys have the 'topic' format\n\t   validator.addFormat('topic-map', function (topicMap) {\n\t      return (typeof topicMap === 'undefined' ? 'undefined' : _typeof(topicMap)) !== 'object' || Object.keys(topicMap).every(function (topic) {\n\t         return TOPIC_FORMAT.test(topic);\n\t      });\n\t   });\n\t\n\t   // checks that object keys have the 'language-tag' format\n\t   validator.addFormat('localization', function (localization) {\n\t      return (typeof localization === 'undefined' ? 'undefined' : _typeof(localization)) !== 'object' || Object.keys(localization).every(function (tag) {\n\t         return LANGUAGE_TAG_FORMAT.test(tag);\n\t      });\n\t   });\n\t\n\t   return validator;\n\t}\n\n/***/ },\n\n/***/ 48:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"layout\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"description\": \"The layout to use. May be omitted if another page in the extension hierarchy defines one.\"\n\t\t\t},\n\t\t\t\"extends\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"description\": \"The name of the page to extend.\"\n\t\t\t},\n\t\t\t\"areas\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"description\": \"A map from area name to a list of widgets to display within that area.\",\n\t\t\t\t\"patternProperties\": {\n\t\t\t\t\t\"^[a-z][\\\\.a-zA-Z0-9_]*$\": {\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"widget\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Path to the widget that should be rendered.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"composition\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Path to the composition that should be included.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"layout\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Path to the layout that should be inserted.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\t\"pattern\": \"^[a-z][a-zA-Z0-9_]*$\",\n\t\t\t\t\t\t\t\t\t\"description\": \"ID of the widget or composition. Will be generated if missing.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"insertBeforeId\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\t\"description\": \"The ID of the widget this widget or composition should be inserted before.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"features\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Configuration of the features defined by the widget or composition.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"enabled\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\"description\": \"Set to false to omit widgets e.g. for debugging purposes.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"additionalProperties\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"additionalProperties\": false\n\t\t\t}\n\t\t},\n\t\t\"additionalProperties\": false\n\t};\n\n/***/ },\n\n/***/ 49:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.COMPACT = exports.FLAT = undefined;\n\texports.createProvider = createProvider;\n\texports.createCollector = createCollector;\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\t/** Use to access the flattened page model, where compositions have been expanded. */\n\tvar FLAT = exports.FLAT = 'FLAT';\n\t/** Use to access the compact page/composition model, where compositions have not been expanded. */\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\tvar COMPACT = exports.COMPACT = 'COMPACT';\n\t\n\tfunction createProvider(collector) {\n\t\n\t   return {\n\t\n\t      /** Start collecting page/composition data. */\n\t      enable: function enable() {\n\t         collector.enable();\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /** Stop collecting page/composition data and clean up. */\n\t      disable: function disable() {\n\t         collector.disable();\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Access the current page information.\n\t       * Everything is returned as a copy, sothis object cannot be used to modify the host application.\n\t       *\n\t       * @return {Object}\n\t       *   the current page information, with the following properties:\n\t       *    - `pageDefinitions` {Object}\n\t       *       both the original as well as the expanded/flattened page model for each available page\n\t       *    - `compositionDefinitions` {Object}\n\t       *       both the original as well as the expanded/flattened composition model for each composition of\n\t       *       any available page\n\t       *    - `widgetDescriptors` {Object}\n\t       *       the widget descriptor for each widget that was referenced\n\t       *    - `pageReference` {String}\n\t       *       the reference for the current page, to lookup page/composition definitions\n\t       */\n\t      current: function current() {\n\t         return collector.current();\n\t      },\n\t\n\t\n\t      /**\n\t       * Add a listener function to be notified whenever the page information changes.\n\t       * As a side-effect, this also automatically enables collecting page/composition data.\n\t       * Each listener will be delivered its own copy of the page information.\n\t       *\n\t       * @param {Function} _\n\t       *    The listener to add. Will be called with the current page information whenever that changes.\n\t       */\n\t      addListener: function addListener(_) {\n\t         collector.addListener(_);\n\t      },\n\t\n\t\n\t      /**\n\t       * Remove a page information listener function.\n\t       *\n\t       * @param {Function} _\n\t       *    The listener to remove\n\t       */\n\t      removeListener: function removeListener(_) {\n\t         collector.removeListener(_);\n\t      }\n\t   };\n\t}\n\t\n\tfunction createCollector(configuration, log) {\n\t\n\t   var enabled = configuration.get('tooling.enabled');\n\t\n\t   var listeners = [];\n\t\n\t   var currentPageInfo = {\n\t      pageReference: null,\n\t      pageDefinitions: {},\n\t      compositionDefinitions: {},\n\t      widgetDescriptors: {}\n\t   };\n\t\n\t   return {\n\t\n\t      // eslint-disable-next-line valid-jsdoc\n\t      /** Collect a widget descriptor. */\n\t      collectWidgetDescriptor: function collectWidgetDescriptor(ref, descriptor) {\n\t         if (!enabled) {\n\t            return;\n\t         }\n\t         currentPageInfo.widgetDescriptors[ref] = descriptor;\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      // eslint-disable-next-line valid-jsdoc\n\t      /**\n\t       * Collect a page definition.\n\t       * The page is deep-copied right away, and may safely be modified by the caller.\n\t       */\n\t      collectPageDefinition: function collectPageDefinition(ref, page, type) {\n\t         if (!enabled) {\n\t            return;\n\t         }\n\t         var definitions = currentPageInfo.pageDefinitions;\n\t         definitions[ref] = definitions[ref] || {\n\t            FLAT: null,\n\t            COMPACT: null\n\t         };\n\t         definitions[ref][type] = (0, _object.deepClone)(page);\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      // eslint-disable-next-line valid-jsdoc\n\t      /**\n\t       * Collect a composition definition.\n\t       * The composition is deep-copied right away, and may safely be modified by the caller.\n\t       */\n\t      collectCompositionDefinition: function collectCompositionDefinition(pageRef, compositionInstanceId, composition, type) {\n\t         if (!enabled) {\n\t            return;\n\t         }\n\t         var definitions = currentPageInfo.compositionDefinitions;\n\t         var definitionsByInstance = definitions[pageRef] = definitions[pageRef] || {};\n\t         definitionsByInstance[compositionInstanceId] = definitionsByInstance[compositionInstanceId] || {\n\t            FLAT: null,\n\t            COMPACT: null\n\t         };\n\t         definitionsByInstance[compositionInstanceId][type] = (0, _object.deepClone)(composition);\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      // eslint-disable-next-line valid-jsdoc\n\t      /**\n\t       * Collect information about the current page, and inform all listeners.\n\t       * Each listener will receive its own copy of the page information.\n\t       */\n\t      collectCurrentPage: function collectCurrentPage(ref) {\n\t         if (!enabled) {\n\t            return;\n\t         }\n\t         currentPageInfo.pageReference = ref;\n\t         listeners.forEach(function (listener) {\n\t            listener((0, _object.deepClone)(currentPageInfo));\n\t         });\n\t         cleanup();\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      enable: function enable() {\n\t         enabled = true;\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      disable: function disable() {\n\t         enabled = false;\n\t         currentPageInfo.pageReference = null;\n\t         currentPageInfo.widgetDescriptors = {};\n\t         cleanup();\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      addListener: function addListener(listener) {\n\t         enabled = true;\n\t         listeners.push(listener);\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      removeListener: function removeListener(listener) {\n\t         listeners = listeners.filter(function (_) {\n\t            return _ !== listener;\n\t         });\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      current: function current() {\n\t         if (!enabled) {\n\t            log.warn('laxar page tooling: trying to access data, but collecting it was never enabled');\n\t         }\n\t         return (0, _object.deepClone)(currentPageInfo);\n\t      }\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function cleanup() {\n\t      var currentRef = currentPageInfo.pageReference;\n\t      ['pageDefinitions', 'compositionDefinitions'].forEach(function (collection) {\n\t         Object.keys(currentPageInfo[collection]).filter(function (ref) {\n\t            return ref !== currentRef;\n\t         }).forEach(function (ref) {\n\t            delete currentPageInfo[collection][ref];\n\t         });\n\t      });\n\t   }\n\t}\n\n/***/ },\n\n/***/ 50:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t\n\tfunction create(artifactProvider, cssLoader) {\n\t   return {\n\t      load: function load() {\n\t         var themeProvider = artifactProvider.forTheme();\n\t         themeProvider.descriptor(function (descriptor) {\n\t            return themeProvider.assetUrl(descriptor.styleSource || 'css/theme.css').then(cssLoader.load);\n\t         });\n\t      }\n\t   };\n\t}\n\n/***/ },\n\n/***/ 51:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.adapterErrors = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n\topyright 2016 aixigo AG\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Released under the MIT license.\n\thttp://laxarjs.org/license\n\tn\t\n\texports.create = create;\n\t\n\tvar _string = __webpack_require__(28);\n\t\n\tvar string = _interopRequireWildcard(_string);\n\t\n\tvar _features_provider = __webpack_require__(47);\n\t\n\tvar featuresProvider = _interopRequireWildcard(_features_provider);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar TYPE_WIDGET = 'widget';\n\tvar TYPE_ACTIVITY = 'activity';\n\t\n\tvar ID_SEPARATOR = '-';\n\t\n\t/**\n\t * @name AdapterErrorFactory\n\t * @constructor\n\t */\n\tvar adapterErrors = exports.adapterErrors = {\n\t\n\t   /**\n\t    * Creates (but does not throw) an error indicating that an activity tried accessing the DOM.\n\t    *\n\t    * @param {String} details.technology\n\t    *    the complaining adapter's technology\n\t    * @param {String} details.widgetName\n\t    *    the canonical name of the activity causing the problem\n\t    *\n\t    * @return {Error}\n\t    *    the error, ready to throw\n\t    */\n\t   activityAccessingDom: function activityAccessingDom(_ref) {\n\t      var technology = _ref.technology,\n\t          widgetName = _ref.widgetName;\n\t\n\t      return new Error(technology + ' adapter: Trying to access DOM in activity ' + widgetName);\n\t   },\n\t\n\t\n\t   /**\n\t    * Creates (but does not throw) an error indicating that a widget requested an injection that cannot be\n\t    * provided by the adapter.\n\t    *\n\t    * @param {String} details.technology\n\t    *    the complaining adapter's technology\n\t    * @param {String} details.injection\n\t    *    the failing injection\n\t    * @param {String} details.widgetName\n\t    *    the canonical name of the widget causing the problem\n\t    *\n\t    * @return {Error}\n\t    *    the error, ready to throw\n\t    */\n\t   unknownInjection: function unknownInjection(_ref2) {\n\t      var technology = _ref2.technology,\n\t          injection = _ref2.injection,\n\t          widgetName = _ref2.widgetName;\n\t\n\t      return new Error(technology + ' adapter: Trying to inject unknown service \"' + injection + ' into widget \"' + widgetName + '\"');\n\t   },\n\t\n\t\n\t   /**\n\t    * Creates (but does not throw) an error indicating that a widget was not registered with the current\n\t    * adapter.\n\t    *\n\t    * @param {String} details.technology\n\t    *    the complaining adapter's technology\n\t    * @param {String} details.widgetName\n\t    *    the canonical name of the missing widget\n\t    *\n\t    * @return {Error}\n\t    *    the error, ready to throw\n\t    */\n\t   unknownWidget: function unknownWidget(_ref3) {\n\t      var technology = _ref3.technology,\n\t          widgetName = _ref3.widgetName;\n\t\n\t      return new Error(technology + ' adapter: Unknown widget: ' + widgetName);\n\t   }\n\t};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar noOp = function noOp() {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Create a generic widget loader that can load widgets and activities implemented in various technologies\n\t * by using appropriate adapters.\n\t *\n\t * @param {Log} log\n\t *    log instance to use for technology compatibility warnings\n\t * @param {ArtifactProvider} artifactProvider\n\t *    an artifact provider for looking up widget descriptors and assets\n\t * @param {ControlLoader} controlLoader\n\t *    helps loading controls and their assets\n\t * @param {CssLoader} cssLoader\n\t *    helps loading widget- and control-stylesheets during development\n\t * @param {PagesCollector} pagesCollector\n\t *    used for inspection tools\n\t * @param {Function} servicesForWidget\n\t *    a factory method to create widget-specific services\n\t *\n\t * @return {WidgetLoader}\n\t *    a new widget loader\n\t */\n\tfunction create(log, artifactProvider, controlLoader, cssLoader, pagesCollector, servicesForWidget) {\n\t\n\t   var widgetAdapters = {};\n\t\n\t   /**\n\t    * @name WidgetLoader\n\t    * @constructor\n\t    */\n\t   return {\n\t      load: load,\n\t\n\t      /**\n\t       * Several factory methods for creating error objects that are useful for almost any adapter.\n\t       *\n\t       * @memberof WidgetLoader\n\t       * @type {AdapterErrorFactory}\n\t       */\n\t      adapterErrors: adapterErrors,\n\t\n\t      /**\n\t       * Register support for integration technologies.\n\t       *\n\t       * @param {Object} adapters\n\t       *    a map of widget adapters by technology to be registered with this loader\n\t       *\n\t       * @memberof WidgetLoader\n\t       */\n\t      registerWidgetAdapters: function registerWidgetAdapters(adapters) {\n\t         Object.assign(widgetAdapters, adapters);\n\t      }\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Load a widget using an appropriate adapter\n\t    *\n\t    * First, get the given widget's descriptor to validate and instantiate the widget features.\n\t    * Then, instantiate a widget adapter matching the widget's technology. Using the adapter, create the\n\t    * widget controller. The adapter is returned and can be used to attach the widget to the DOM, or to\n\t    * destroy it.\n\t    *\n\t    * @param {Object} widgetConfiguration\n\t    *    a widget instance configuration (as used in page definitions) to instantiate the widget from\n\t    * @param {Object} [optionalOptions]\n\t    *    map of additonal options\n\t    * @param {Function} [optionalOptions.onBeforeControllerCreation]\n\t    *    a function to call just before the controller is set up. It receives an object of named,\n\t    *    widget-specific injections as arguments\n\t    *\n\t    * @return {Promise} a promise for a widget adapter, with an already instantiated controller\n\t    *\n\t    * @memberof WidgetLoader\n\t    */\n\t   function load(widgetConfiguration) {\n\t      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t          _ref4$onBeforeControl = _ref4.onBeforeControllerCreation,\n\t          onBeforeControllerCreation = _ref4$onBeforeControl === undefined ? noOp : _ref4$onBeforeControl;\n\t\n\t      var widgetArtifactProvider = artifactProvider.forWidget(widgetConfiguration.widget);\n\t\n\t      return widgetArtifactProvider.descriptor().then(function (descriptor) {\n\t         // The control-descriptors must be loaded prior to controller creation.\n\t         // This allows the widget controller to synchronously instantiate controls.\n\t         return Promise.all((descriptor.controls || []).map(controlLoader.load)).then(function (controlDescriptors) {\n\t            controlDescriptors.forEach(checkTechnologyCompatibility(descriptor));\n\t            return descriptor;\n\t         });\n\t      }).then(function (descriptor) {\n\t\n\t         pagesCollector.collectWidgetDescriptor(widgetConfiguration.widget, descriptor);\n\t\n\t         var _descriptor$integrati = descriptor.integration,\n\t             type = _descriptor$integrati.type,\n\t             technology = _descriptor$integrati.technology;\n\t\n\t         var widgetName = descriptor.name;\n\t         if (type !== TYPE_WIDGET && type !== TYPE_ACTIVITY) {\n\t            throwError(widgetConfiguration, 'Unknown integration type \"' + type + '\"');\n\t         }\n\t\n\t         var throwWidgetError = throwError.bind(null, widgetConfiguration);\n\t         var features = featuresProvider.featuresForWidget(descriptor, widgetConfiguration, throwWidgetError);\n\t         var anchorElement = document.createElement('DIV');\n\t         anchorElement.className = widgetName;\n\t         anchorElement.id = 'ax' + ID_SEPARATOR + widgetConfiguration.id;\n\t\n\t         var adapterFactory = widgetAdapters[technology];\n\t         var _adapterFactory$servi = adapterFactory.serviceDecorators,\n\t             serviceDecorators = _adapterFactory$servi === undefined ? function () {\n\t            return {};\n\t         } : _adapterFactory$servi;\n\t\n\t         var _servicesForWidget = servicesForWidget(descriptor, widgetConfiguration, features, serviceDecorators(descriptor, widgetConfiguration)),\n\t             services = _servicesForWidget.services,\n\t             releaseServices = _servicesForWidget.releaseServices;\n\t\n\t         var environment = {\n\t            anchorElement: anchorElement,\n\t            services: services,\n\t            widgetName: widgetName,\n\t            onBeforeControllerCreation: onBeforeControllerCreation\n\t         };\n\t\n\t         return Promise.resolve(adapterFactory.create(environment)).then(function (adapter) {\n\t            return Object.assign({ destroy: noOp }, adapter);\n\t         }).then(function (adapter) {\n\t            return {\n\t               id: widgetConfiguration.id,\n\t               adapter: adapter,\n\t               destroy: function destroy() {\n\t                  releaseServices();\n\t                  adapter.destroy();\n\t               },\n\t\n\t               templatePromise: loadAssets(descriptor, widgetArtifactProvider)\n\t            };\n\t         });\n\t      }, function (err) {\n\t         var message = 'Could not load widget \"' + widgetConfiguration.widget + '\": ' + err.message;\n\t         log.error(message);\n\t         throw err;\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Locates and loads the widget HTML template for this widget (if any) as well as any CSS stylesheets\n\t    * used by this widget or its controls.\n\t    *\n\t    * @param {Object} widgetDescriptor\n\t    *    a descriptor identifying the widget to load assets for\n\t    * @param {ArtifactProvider} artifactProviderForWidget\n\t    *    the provider with which to lookup or fetch artifact HTML and CSS\n\t    *\n\t    * @return {Promise}\n\t    *    A promise that will be resolved with the contents of any HTML template for this widget, or with\n\t    *    `null` if there is no template (for example, if this is an activity).\n\t    *\n\t    * @private\n\t    */\n\t   function loadAssets(widgetDescriptor, _ref5) {\n\t      var assetForTheme = _ref5.assetForTheme,\n\t          assetUrlForTheme = _ref5.assetUrlForTheme;\n\t      var type = widgetDescriptor.integration.type,\n\t          name = widgetDescriptor.name;\n\t\n\t      if (type === TYPE_ACTIVITY) {\n\t         return Promise.resolve(null);\n\t      }\n\t\n\t      return Promise.all([assetForTheme(widgetDescriptor.templateSource || name + '.html'), assetUrlForTheme(widgetDescriptor.styleSource || 'css/' + name + '.css')]).then(function (_ref6) {\n\t         var _ref7 = _slicedToArray(_ref6, 2),\n\t             html = _ref7[0],\n\t             cssUrl = _ref7[1];\n\t\n\t         if (cssUrl) {\n\t            cssLoader.load(cssUrl);\n\t         }\n\t         return html;\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function checkTechnologyCompatibility(widgetDescriptor) {\n\t      var name = widgetDescriptor.name,\n\t          technology = widgetDescriptor.integration.technology;\n\t\n\t      return function (controlDescriptor) {\n\t         var controlTechnology = (controlDescriptor.integration || {}).technology;\n\t         if (controlTechnology === 'plain') {\n\t            // plain is always compatible\n\t            return;\n\t         }\n\t\n\t         if (technology !== controlTechnology) {\n\t            log.warn('Incompatible integration technologies: widget [0] ([1]) cannot use control [2] ([3])', name, technology, controlDescriptor.name, controlTechnology);\n\t         }\n\t      };\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction throwError(widgetConfiguration, message) {\n\t   throw new Error(string.format('Error loading widget \"[widget]\" (id: \"[id]\"): [0]', [message], widgetConfiguration));\n\t}\n\n/***/ },\n\n/***/ 52:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SESSION = 'sessionStorage'; /**\n\t                                 * Copyright 2016 aixigo AG\n\t                                 * Released under the MIT license.\n\t                                 * http://laxarjs.org/license\n\t                                 */\n\t\n\t/**\n\t * Module providing the StorageApi factory.\n\t *\n\t * Widgets and activities can access their StorageApi instance by requesting the injection\n\t * {@link widget_services#axStorage axStorage}, or use\n\t * {@link widget_services#axGlobalStorage axGlobalStorage} for shared items.\n\t *\n\t * As such, in most cases only the {@link StorageApi} documentation is relevant.\n\t *\n\t * @module storage\n\t */\n\t\n\tvar LOCAL = 'localStorage';\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * @param {Object} backend\n\t *    the K/V store, probably only accepting string values\n\t * @param {String} namespace\n\t *    prefix for all keys for namespacing purposes\n\t *\n\t * @return {StorageApi}\n\t *    a storage wrapper to the given backend with `getItem`, `setItem` and `removeItem` methods\n\t *\n\t * @private\n\t */\n\tfunction createStorage(backend, namespace) {\n\t\n\t   /**\n\t    * Provides a convenient API over the browser's `window.localStorage` and `window.sessionStorage` objects.\n\t    * If a browser doesn't support [web storage](http://www.w3.org/TR/webstorage/), a warning is logged to the\n\t    * `console` (if available) and a non-persistent in-memory store will be used instead. Note that this can\n\t    * for example also happen when using Mozilla Firefox with cookies disabled and as such isn't limited to\n\t    * older browsers.\n\t    *\n\t    * Additionally, in contrast to plain *web storage* access, non-string values will be automatically passed\n\t    * through JSON (de-) serialization on storage or retrieval. All keys will be prepended with a combination\n\t    * of a fixed (`ax.`) and an application-specific namespace (configured using `storagePrefix` with fallback\n\t    * to `name`) to avoid naming clashes with other (LaxarJS) web applications running on the same host and\n\t    * port. All {@link StorageApi} accessor methods should be called without any namespace as it is\n\t    * prepended automatically.\n\t    *\n\t    * @name StorageApi\n\t    * @constructor\n\t    */\n\t   return {\n\t      getItem: getItem,\n\t      setItem: setItem,\n\t      removeItem: removeItem\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Retrieves a `value` by `key` from the store. JSON deserialization will automatically be applied.\n\t    *\n\t    * @param {String} key\n\t    *    the key of the item to retrieve (without namespace prefix)\n\t    *\n\t    * @return {*}\n\t    *    the value or `null` if it doesn't exist in the store\n\t    *\n\t    * @memberof StorageApi\n\t    */\n\t   function getItem(key) {\n\t      var item = backend.getItem(namespace + '.' + key);\n\t      return item && JSON.parse(item);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Sets a `value` for a `key`. The value must be JSON serializable. An existing value will be overwritten.\n\t    *\n\t    * @param {String} key\n\t    *    the key of the item to set (without namespace prefix)\n\t    * @param {*} value\n\t    *    the new value to set\n\t    *\n\t    * @memberof StorageApi\n\t    */\n\t   function setItem(key, value) {\n\t      var nsKey = namespace + '.' + key;\n\t      if (value === undefined) {\n\t         backend.removeItem(nsKey);\n\t      } else {\n\t         backend.setItem(nsKey, JSON.stringify(value));\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Removes the value associated with `key` from the store.\n\t    *\n\t    * @param {String} key\n\t    *    the key of the item to remove (without namespace prefix)\n\t    *\n\t    * @memberof StorageApi\n\t    */\n\t   function removeItem(key) {\n\t      backend.removeItem(namespace + '.' + key);\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction getOrFakeBackend(browser, webStorageName) {\n\t   var browserConsole = browser.console();\n\t   var store = window[webStorageName];\n\t   if (store.setItem && store.getItem && store.removeItem) {\n\t      try {\n\t         var testKey = 'ax_.storage.test';\n\t         // In iOS Safari Private Browsing, this will fail:\n\t         store.setItem(testKey, 1);\n\t         store.removeItem(testKey);\n\t         return store;\n\t      } catch (e) {\n\t         // setItem failed: must use fake storage\n\t      }\n\t   }\n\t\n\t   if (browserConsole) {\n\t      var method = 'warn' in browserConsole ? 'warn' : 'log';\n\t      browserConsole[method]('window.' + webStorageName + ' not available: Using non-persistent polyfill. \\n' + 'Try disabling private browsing or enabling cookies.');\n\t   }\n\t\n\t   var backend = {};\n\t   return {\n\t      getItem: function getItem(key) {\n\t         return backend[key] || null;\n\t      },\n\t      setItem: function setItem(key, val) {\n\t         backend[key] = val;\n\t      },\n\t      removeItem: function removeItem(key) {\n\t         if (key in backend) {\n\t            delete backend[key];\n\t         }\n\t      }\n\t   };\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction applicationPrefix(configuration) {\n\t   return configuration.get('storagePrefix', configuration.ensure('name'));\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates a new storage factory. In most cases this module will be called without arguments,\n\t * but having the ability to provide them is useful e.g. for mocking purposes within tests.\n\t * If the arguments are omitted, an attempt is made to access the native browser WebStorage api.\n\t * If that fails, storage is only mocked by an in memory map (thus actually unavailable).\n\t *\n\t * Developers are free to use polyfills to support cases where local- or session-storage may not be\n\t * available. Just make sure to initialize the polyfills before this module.\n\t *\n\t * @param {Object} configuration\n\t *    a configuration service instance, to determine a storage prefix based on the configured name\n\t * @param {Object} browser\n\t *    the browser api adapter\n\t * @param {Object} [localStorageBackend]\n\t *    the backend for local storage. Default is `window.localStorage`\n\t * @param {Object} [sessionStorageBackend]\n\t *    the backend for session storage. Default is `window.sessionStorage`\n\t *\n\t * @return {StorageFactory}\n\t *    a new storage factory\n\t *\n\t * @private\n\t */\n\tfunction create(configuration, browser, localStorageBackend, sessionStorageBackend) {\n\t\n\t   var localBackend = localStorageBackend || getOrFakeBackend(browser, LOCAL);\n\t   var sessionBackend = sessionStorageBackend || getOrFakeBackend(browser, SESSION);\n\t   var prefix = 'ax.' + applicationPrefix(configuration) + '.';\n\t\n\t   /**\n\t    * The API returned by the module's `create` function.\n\t    *\n\t    * @name StorageFactory\n\t    * @constructor\n\t    */\n\t   return {\n\t\n\t      /**\n\t       * Returns a local storage object for a specific local namespace.\n\t       *\n\t       * @param {String} namespace\n\t       *    the namespace to prepend to keys\n\t       *\n\t       * @return {StorageApi}\n\t       *    the local storage object\n\t       *\n\t       * @memberof StorageFactory\n\t       */\n\t      getLocalStorage: function getLocalStorage(namespace) {\n\t         (0, _assert2.default)(namespace).hasType(String).isNotNull();\n\t\n\t         return createStorage(localBackend, prefix + namespace);\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Returns a session storage object for a specific local namespace.\n\t       *\n\t       * @param {String} namespace\n\t       *    the namespace to prepend to keys\n\t       *\n\t       * @return {StorageApi}\n\t       *    the session storage object\n\t       *\n\t       * @memberof StorageFactory\n\t       */\n\t      getSessionStorage: function getSessionStorage(namespace) {\n\t         (0, _assert2.default)(namespace).hasType(String).isNotNull();\n\t\n\t         return createStorage(sessionBackend, prefix + namespace);\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Returns the local storage object for application scoped keys. This is equivalent to\n\t       * `storage.getLocalStorage( 'app' )`.\n\t       *\n\t       * @return {StorageApi}\n\t       *    the application local storage object\n\t       *\n\t       * @memberof StorageFactory\n\t       */\n\t      getApplicationLocalStorage: function getApplicationLocalStorage() {\n\t         return createStorage(localBackend, prefix + 'app');\n\t      },\n\t\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Returns the session storage object for application scoped keys. This is equivalent to\n\t       * `storage.getSessionStorage( 'app' )`.\n\t       *\n\t       * @return {StorageApi}\n\t       *    the application session storage object\n\t       *\n\t       * @memberof StorageFactory\n\t       */\n\t      getApplicationSessionStorage: function getApplicationSessionStorage() {\n\t         return createStorage(sessionBackend, prefix + 'app');\n\t      }\n\t   };\n\t}\n\n/***/ },\n\n/***/ 53:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tfunction create(log) {\n\t\n\t   var api = {\n\t      started: started\n\t   };\n\t\n\t   var idCounter = 0;\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function started(optionalOptions) {\n\t      var timer = new Timer(optionalOptions);\n\t      timer.start();\n\t      return timer;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function Timer(optionalOptions) {\n\t      this.options_ = Object.assign({\n\t         label: 'timer' + idCounter++\n\t      }, optionalOptions);\n\t      this.startTime_ = null;\n\t      this.stopTime_ = null;\n\t      this.splitTimes_ = [];\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   Timer.prototype.getData = function () {\n\t      return {\n\t         label: this.options_.label,\n\t         startTime: this.startTime_,\n\t         stopTime: this.stopTime_,\n\t         splitTimes: (0, _object.deepClone)(this.splitTimes_)\n\t      };\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   Timer.prototype.start = function () {\n\t      this.startTime_ = Date.now();\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   Timer.prototype.splitTime = function (optionalLabel) {\n\t      this.splitTimes_.push({\n\t         time: Date.now(),\n\t         label: optionalLabel || 'split' + this.splitTimes_.length\n\t      });\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   Timer.prototype.stop = function () {\n\t      this.stopTime_ = Date.now();\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   Timer.prototype.stopAndLog = function (optionalLabel) {\n\t      this.stop();\n\t\n\t      var startTime = this.startTime_;\n\t      var endTime = Date.now();\n\t      var label = optionalLabel || 'Timer Stopped';\n\t      this.splitTimes_.push({ label: label, time: endTime });\n\t\n\t      var message = [];\n\t      message.push('Timer \"', this.options_.label, '\": ');\n\t      message.push('start at ', new Date(startTime).toISOString(), ' (client), ');\n\t      message.push(label, ' after ', (endTime - startTime).toFixed(0), 'ms ');\n\t      message.push('(checkpoints: ');\n\t      var intervals = [];\n\t      this.splitTimes_.reduce(function (from, data) {\n\t         intervals.push('\"' + data.label + '\"=' + (data.time - from).toFixed(0) + 'ms');\n\t         return data.time;\n\t      }, startTime);\n\t      message.push(intervals.join(', '), ')');\n\t      log.info(message.join(''));\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return api;\n\t} /**\n\t   * Copyright 2016 aixigo AG\n\t   * Released under the MIT license.\n\t   * http://laxarjs.org/license\n\t   */\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.TARGET_SELF = undefined;\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _json_validator = __webpack_require__(43);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar _flow = __webpack_require__(55);\n\t\n\tvar _flow2 = _interopRequireDefault(_flow);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Module providing the FlowController factory.\n\t *\n\t * This service is internal to LaxarJS and not available to widgets and activities.\n\t *\n\t * @module flow_controller\n\t * @private\n\t */\n\t\n\tvar SESSION_KEY_TIMER = 'navigationTimer';\n\tvar DEFAULT_PLACE = '';\n\t\n\tvar TARGET_SELF = exports.TARGET_SELF = '_self';\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates and returns a new flow controller from its dependencies.\n\t *\n\t * @param {ArtifactProvider} artifactProvider\n\t *    an artifact provider, needed to fetch the flow definition\n\t * @param {Configuration} configuration\n\t *    a configuration instance, to determine the name of the flow to load\n\t * @param {EventBus} eventBus\n\t *    an event bus instance, used to subscribe to navigateRequest events, and to publish will/did-responses\n\t * @param {Logger} log\n\t *    a logger that is used for reporting flow validation and navigation problems\n\t * @param {PageService} pageService\n\t *    the page service to use for actual page transitions (setup, teardown) during navigation\n\t * @param {Router} router\n\t *    router to register places with, and to use for URL construction\n\t * @param {Timer} timer\n\t *    timer to use for measuring page transitions\n\t *\n\t * @return {FlowController}\n\t *    a flow controller instance\n\t */\n\tfunction create(artifactProvider, configuration, eventBus, log, pageService, router, timer) {\n\t\n\t   var COLLABORATOR_ID = 'AxFlowController';\n\t   var availablePlaces = {};\n\t\n\t   var activeParameters = {};\n\t   var activePlace = void 0;\n\t   var navigationInProgress = false;\n\t   var requestedTarget = null;\n\t\n\t   eventBus.subscribe('navigateRequest', function (_ref) {\n\t      var target = _ref.target,\n\t          data = _ref.data;\n\t\n\t      if (navigationInProgress) {\n\t         return;\n\t      }\n\t      requestedTarget = target;\n\t      navigateToTarget(target, Object.assign({}, activeParameters, data));\n\t   }, { subscriber: COLLABORATOR_ID });\n\t\n\t   /**\n\t    * A flow controller can load a flow definition, setup routes, and allows to navigate between places. The\n\t    * flow controller handles router-initiated navigation as well as `navigateRequest` events and triggers\n\t    * instantiation/destruction of the associated pages.\n\t    *\n\t    * @name FlowController\n\t    * @constructor\n\t    */\n\t   return {\n\t      constructAbsoluteUrl: constructAbsoluteUrl,\n\t      loadFlow: loadFlow\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Starts loading the configured flow definition and configures the router.\n\t    *\n\t    * @return {Promise}\n\t    *    a promise that is resolved when all routes have been registered\n\t    */\n\t   function loadFlow() {\n\t      var flowName = configuration.ensure('flow.name');\n\t      return artifactProvider.forFlow(flowName).definition().then(function (flow) {\n\t         validateFlowJson(flow);\n\t         router.registerRoutes(assembleRoutes(flow), createFallbackHandler(flow));\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Get the place definition for a given target or place. If the provided identifier is a target of the\n\t    * current place, the definition of the referenced place is returned. Otherwise, the current place is\n\t    * returned.\n\t    *\n\t    * @param {String} targetOrPlaceId\n\t    *    a string identifying the target or place to obtain a definition for\n\t    * @param {Object} place\n\t    *    the corresponding place definition\n\t    *\n\t    * @return {Object}\n\t    *    a place definition with `targets` and `patterns` as specified in the flow definition, plus `id`\n\t    */\n\t   function placeForTarget(targetOrPlaceId) {\n\t      var place = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : activePlace;\n\t\n\t      var placeId = place ? place.targets[targetOrPlaceId] : null;\n\t      if (placeId == null) {\n\t         placeId = targetOrPlaceId;\n\t      }\n\t      _assert2.default.state(placeId in availablePlaces, 'Unknown target or place \"' + targetOrPlaceId + '\". Current place: \"' + place.id + '\"');\n\t      return availablePlaces[placeId];\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Constructs an absolute URL to the given target or place using the given parameters. If a target is\n\t    * given as first argument, it is resolved using the currently active place.\n\t    *\n\t    * @param {String} targetOrPlace\n\t    *    the target or place ID to construct a URL for\n\t    * @param {Object} [optionalParameters]\n\t    *    optional map of place parameters. Missing parameters are filled base on the parameters that were\n\t    *    passed to the currently active place\n\t    *\n\t    * @return {String}\n\t    *    the generated absolute URL\n\t    *\n\t    * @memberof FlowService\n\t    */\n\t   function constructAbsoluteUrl(targetOrPlace, optionalParameters) {\n\t      var place = placeForTarget(targetOrPlace);\n\t      return router.constructAbsoluteUrl(place.patterns, withoutRedundantParameters(place, optionalParameters));\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function navigateToTarget(targetOrPlaceId, parameters, redirectFrom) {\n\t      var place = placeForTarget(targetOrPlaceId, redirectFrom);\n\t      router.navigateTo(place.patterns, withoutRedundantParameters(place, parameters), !!redirectFrom);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function handleRouteChange(place, routerParameters) {\n\t      var parameters = Object.assign({}, place.defaultParameters, routerParameters);\n\t      if (activePlace && place.id === activePlace.id && equals(parameters, activeParameters)) {\n\t         navigationInProgress = false;\n\t         log.trace('Canceling navigation to \"' + place.id + '\". Already there with same parameters.');\n\t         return Promise.resolve();\n\t      }\n\t      if (navigationInProgress) {\n\t         log.trace('Canceling navigation to \"' + place.id + '\". Navigation already in progress.');\n\t         return Promise.resolve();\n\t      }\n\t      navigationInProgress = true;\n\t\n\t      var fromPlace = activePlace ? activePlace.targets[TARGET_SELF] : '';\n\t      var navigationTimer = timer.started({\n\t         label: 'navigation (' + fromPlace + ' -> ' + place.targets[TARGET_SELF] + ')',\n\t         persistenceKey: SESSION_KEY_TIMER\n\t      });\n\t\n\t      var event = {\n\t         target: requestedTarget || place.id,\n\t         place: place.id,\n\t         data: parameters\n\t      };\n\t      requestedTarget = null;\n\t\n\t      var options = { sender: COLLABORATOR_ID };\n\t      return eventBus.publish('willNavigate.' + event.target, event, options).then(function () {\n\t         if (activePlace && place.id === activePlace.id) {\n\t            activeParameters = parameters;\n\t            return Promise.resolve();\n\t         }\n\t\n\t         return pageService.controller().tearDownPage().then(function () {\n\t            log.setTag('PLCE', place.id);\n\t            activeParameters = parameters;\n\t            activePlace = place;\n\t            return pageService.controller().setupPage(place.page);\n\t         });\n\t      }).then(function () {\n\t         navigationInProgress = false;\n\t         navigationTimer.stopAndLog('didNavigate');\n\t         return eventBus.publish('didNavigate.' + event.target, event, options);\n\t      }).catch(function (err) {\n\t         log.error('Failed to navigate to place \"' + place.id + '\". Error: [0]\\n', err.stack);\n\t         return Promise.reject(err);\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createFallbackHandler(flow) {\n\t      var redirectOn = flow.redirectOn,\n\t          places = flow.places;\n\t\n\t      return function (path) {\n\t         log.warn('Received request for unknown route \"' + path + '\".');\n\t         if (redirectOn.unknownPlace in places) {\n\t            log.trace('- Redirecting to error place (\"' + redirectOn.unknownPlace + '\").');\n\t            handleRouteChange(places[redirectOn.unknownPlace], {});\n\t         } else if (DEFAULT_PLACE in places) {\n\t            log.trace('- Redirecting to default place (\"' + DEFAULT_PLACE + '\").');\n\t            handleRouteChange(places[DEFAULT_PLACE], {});\n\t         } else {\n\t            log.trace('- Got no unknownPlace redirect and no default place. Doing nothing.');\n\t         }\n\t      };\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function assembleRoutes(_ref2) {\n\t      var places = _ref2.places;\n\t\n\t      var routeMap = {};\n\t      (0, _object.forEach)(places, function (place, placeId) {\n\t         place.id = placeId;\n\t         place.patterns = place.patterns || ['/' + placeId];\n\t         (0, _object.setPath)(place, 'targets.' + TARGET_SELF, place.id);\n\t\n\t         var id = place.id,\n\t             patterns = place.patterns,\n\t             page = place.page,\n\t             redirectTo = place.redirectTo;\n\t\n\t         availablePlaces[id] = place;\n\t\n\t         if (redirectTo) {\n\t            patterns.forEach(function (pattern) {\n\t               routeMap[pattern] = function (parameters) {\n\t                  navigateToTarget(redirectTo, parameters, place);\n\t               };\n\t            });\n\t            return;\n\t         }\n\t\n\t         if (!page) {\n\t            log.error('flow: invalid empty place: ' + id);\n\t            return;\n\t         }\n\t\n\t         patterns.forEach(function (pattern) {\n\t            routeMap[pattern] = function (parameters) {\n\t               handleRouteChange(place, parameters);\n\t            };\n\t         });\n\t      });\n\t      return routeMap;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function validateFlowJson(flowJson) {\n\t      var errors = (0, _json_validator.create)(_flow2.default).validate(flowJson);\n\t      if (errors.length) {\n\t         log.error('LaxarJS flow controller: Failed validating flow definition:\\n[0]', errors.map(function (_ref3) {\n\t            var message = _ref3.message;\n\t            return ' - ' + message;\n\t         }).join('\\n'));\n\t         throw new Error('Illegal flow.json format');\n\t      }\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction withoutRedundantParameters(place, parameters) {\n\t   var _place$defaultParamet = place.defaultParameters,\n\t       defaultParameters = _place$defaultParamet === undefined ? {} : _place$defaultParamet;\n\t\n\t   var remainingParameters = {};\n\t   (0, _object.forEach)(parameters, function (value, key) {\n\t      if (!(key in defaultParameters) || defaultParameters[key] !== value) {\n\t         remainingParameters[key] = value;\n\t      }\n\t   });\n\t   return remainingParameters;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction equals(a, b) {\n\t   var aKeys = Object.keys(a);\n\t   var bKeys = Object.keys(b);\n\t   return aKeys.length === bKeys.length && aKeys.every(function (key) {\n\t      return key in b && a[key] === b[key];\n\t   });\n\t}\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\t\"type\": \"object\",\n\t\t\"required\": [\n\t\t\t\"places\"\n\t\t],\n\t\t\"properties\": {\n\t\t\t\"redirectOn\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"description\": \"Globally defined redirects for certain edge cases\",\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"unknownPlace\": {\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"description\": \"This place is loaded whenever the requested place doesn't exist.\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"default\": {},\n\t\t\t\t\"additionalProperties\": false\n\t\t\t},\n\t\t\t\"places\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"format\": \"topic-map\",\n\t\t\t\t\"description\": \"The places for this flow. Keys (that is, place names) must be valid event topics.\",\n\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"patterns\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"Non-empty list of URL patterns to route to this place. If omitted, the place name (prefixed with a slash) is used as the sole pattern.\",\n\t\t\t\t\t\t\t\"minItems\": 1,\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"page\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"The page to render for this place.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"redirectTo\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"The place to redirect to when hitting this place.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"defaultParameters\": {\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"default\": {},\n\t\t\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\t\t\"type\": [\n\t\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\t\"boolean\",\n\t\t\t\t\t\t\t\t\t\"null\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"description\": \"Default values for optional (query) parameters.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"targets\": {\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"format\": \"topic-map\",\n\t\t\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"format\": \"topic\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"description\": \"A map of symbolic targets to place-names reachable from this place.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"additionalProperties\": false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"additionalProperties\": false\n\t};\n\n/***/ },\n\n/***/ 56:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Module providing the FlowService factory.\n\t *\n\t * To access the FlowService in a widget, request the {@link widget_services#axFlowService axFlowService}\n\t * injection.\n\t *\n\t * @module flow_service\n\t */\n\t\n\t/**\n\t * Creates a flow service  backed by the given flow controller.\n\t *\n\t * @param {FlowController} flowController\n\t *    a flow controller, needed to respect default parameter values when generating URLs\n\t *\n\t * @return {FlowService}\n\t *    a flow service instance\n\t *\n\t * @private\n\t */\n\tfunction create(flowController) {\n\t\n\t  /**\n\t   * Allows widgets to create valid URLs without knowledge about the current place, its routing patterns, or\n\t   * about the actual routing implementation.\n\t   *\n\t   * @name FlowService\n\t   * @constructor\n\t   */\n\t  return {\n\t    constructAbsoluteUrl: constructAbsoluteUrl\n\t  };\n\t\n\t  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t  /**\n\t   * Constructs an absolute URL to the given target or place using the given parameters. If a target is\n\t   * given as first argument, it is resolved using the currently active place.\n\t   *\n\t   * @param {String} targetOrPlace\n\t   *    the target or place ID to construct a URL for\n\t   * @param {Object} [optionalParameters]\n\t   *    optional map of place parameters. Missing parameters are filled base on the parameters that were\n\t   *    passed to the currently active place\n\t   *\n\t   * @return {String}\n\t   *    the generated absolute URL\n\t   *\n\t   * @memberof FlowService\n\t   */\n\t  function constructAbsoluteUrl(targetOrPlace) {\n\t    var optionalParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    return flowController.constructAbsoluteUrl(targetOrPlace, optionalParameters);\n\t  }\n\t}\n\n/***/ },\n\n/***/ 57:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Module providing the Heartbeat factory.\n\t *\n\t * To use the Heartbeat service in a widget, request the {@link widget_services#axHeartbeat axHeartbeat}\n\t * injection.\n\t *\n\t * @module heartbeat\n\t */\n\t\n\t/**\n\t * Creates a heartbeat backed by the given scheduler.\n\t *\n\t * @param {Function} [customNextTick]\n\t *    a function that takes a callback, and will asynchronously execute that callback as soon as possible,\n\t *    but asynchronously (that is, after the calling execution stack has finished running).\n\t *    If omitted, the callback is scheduled using `Promise.resolve().then( ... )`.\n\t * @param {Function} [customTimeout]\n\t *    an optional replacement for `window.setTimeout`, used to run coalesced callbacks in a second stage\n\t *    after the immediately scheduled operation\n\t *\n\t * @return {FlowService}\n\t *    a flow service instance\n\t *\n\t * @private\n\t */\n\tfunction create(customNextTick, customTimeout) {\n\t\n\t   var nextTick = customNextTick || function (f) {\n\t      Promise.resolve().then(f);\n\t   };\n\t   var timeout = customTimeout || function (f) {\n\t      setTimeout(f, 0);\n\t   };\n\t\n\t   var heartbeatListeners = [];\n\t   var nextQueue = [];\n\t   var beforeQueue = [];\n\t   var afterQueue = [];\n\t\n\t   var beatRequested = false;\n\t\n\t   /**\n\t    * Scheduler for tasks that possibly synchronously trigger creation of new tasks, that need some common\n\t    * work to be done before or after all of these tasks (and all tasks scheduled in the meantime) are\n\t    * finished.\n\t    *\n\t    * An example would be model-manipulating operations in an application using AngularJS, that need to run\n\t    * `$rootScope.$apply` after all operations are done, but only *once*.\n\t    *\n\t    * @name Heartbeat\n\t    * @constructor\n\t    */\n\t   return {\n\t      registerHeartbeatListener: registerHeartbeatListener,\n\t      onBeforeNext: onBeforeNext,\n\t      onNext: onNext,\n\t      onAfterNext: onAfterNext\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Registers a listener, that is called whenever a heartbeat occurs.\n\t    * It is called after the before and next queues were processed, but before working off the after queue has\n\t    * started.\n\t    * In contrast to the `on*` methods, listeners are not removed after a tick, but will be called again each\n\t    * time a heartbeat occurs.\n\t    * Instead this method returns a function to manually remove the listener again.\n\t    *\n\t    * @param  {Function} listener\n\t    *    the listener to register\n\t    *\n\t    * @return {Function}\n\t    *    a function to remove the listener again\n\t    *\n\t    * @memberof Heartbeat\n\t    */\n\t   function registerHeartbeatListener(listener) {\n\t      heartbeatListeners.push(listener);\n\t\n\t      return function () {\n\t         var index = void 0;\n\t         while ((index = heartbeatListeners.indexOf(listener)) !== -1) {\n\t            heartbeatListeners.splice(index, 1);\n\t         }\n\t      };\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Schedules a function for the next heartbeat.\n\t    * If no heartbeat was triggered yet, it will be requested now.\n\t    *\n\t    * @param {Function} func\n\t    *    a function to schedule for the next tick\n\t    *\n\t    * @memberof Heartbeat\n\t    */\n\t   function onNext(func) {\n\t      if (!beatRequested) {\n\t         beatRequested = true;\n\t         nextTick(function () {\n\t            while (beforeQueue.length) {\n\t               beforeQueue.shift()();\n\t            }\n\t            while (nextQueue.length) {\n\t               nextQueue.shift()();\n\t            }\n\t            heartbeatListeners.forEach(function (listener) {\n\t               return listener();\n\t            });\n\t            if (afterQueue.length) {\n\t               // run after-queue once all directly resolvable promises are through.\n\t               timeout(function () {\n\t                  // Ensure that no further event bus deliveries were scheduled\n\t                  if (!beatRequested) {\n\t                     while (afterQueue.length) {\n\t                        afterQueue.shift()();\n\t                     }\n\t                  }\n\t               });\n\t            }\n\t            beatRequested = false;\n\t         });\n\t      }\n\t      nextQueue.push(func);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Schedules a function to be called before the next heartbeat occurs.\n\t    * Note that `func` may never be called, if there is no next heartbeat since calling this function won't\n\t    * trigger a new heartbeat.\n\t    *\n\t    * @param {Function} func\n\t    *    a function to call before the next heartbeat\n\t    *\n\t    * @memberof Heartbeat\n\t    */\n\t   function onBeforeNext(func) {\n\t      beforeQueue.push(func);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Schedules a function to be called after the next heartbeat occured.\n\t    * Note that `func` may never be called, if there is no next heartbeat since calling this function won't\n\t    * trigger a new heartbeat.\n\t    *\n\t    * @param {Function} func\n\t    *    a function to call after the next heartbeat\n\t    *\n\t    * @memberof Heartbeat\n\t    */\n\t   function onAfterNext(func) {\n\t      afterQueue.push(func);\n\t   }\n\t}\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _area_helper = __webpack_require__(59);\n\t\n\tvar _layout_widget_adapter = __webpack_require__(60);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n\t                                                                                                                                                                                                     * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                     * Released under the MIT license.\n\t                                                                                                                                                                                                     * http://laxarjs.org/license\n\t                                                                                                                                                                                                     */\n\t\n\t\n\tfunction create(eventBus, pageLoader, layoutLoader, widgetLoader, localeManager, visibilityManager, pagesCollector) {\n\t\n\t   (0, _assert2.default)(eventBus).isNotNull();\n\t   (0, _assert2.default)(pageLoader).isNotNull();\n\t   (0, _assert2.default)(layoutLoader).isNotNull();\n\t   (0, _assert2.default)(widgetLoader).isNotNull();\n\t   (0, _assert2.default)(localeManager).isNotNull();\n\t   (0, _assert2.default)(visibilityManager).isNotNull();\n\t   (0, _assert2.default)(pagesCollector).isNotNull();\n\t\n\t   var pageController = void 0;\n\t\n\t   var pageServiceApi = {\n\t      createControllerFor: function createControllerFor(pageElement) {\n\t         _assert2.default.state(!pageController, 'Cannot create a page controller more than once.');\n\t         _assert2.default.state(pageElement instanceof HTMLElement, 'A page controller can only be created for a valid DOM element.');\n\t\n\t         pageController = createPageController(pageElement);\n\t         return pageController;\n\t      },\n\t      controller: function controller() {\n\t         return pageController;\n\t      }\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createPageController(pageElement) {\n\t\n\t      var _areaHelper = null;\n\t      var api = {\n\t         setupPage: setupPage,\n\t         tearDownPage: tearDownPage,\n\t         areaHelper: function areaHelper() {\n\t            return _areaHelper;\n\t         }\n\t      };\n\t\n\t      /** Delay between sending didLifeCycle and attaching widget templates. */\n\t      var WIDGET_ATTACH_DELAY_MS = 5;\n\t      var COLLABORATOR_ID = 'AxPageController';\n\t      var LIFECYCLE_EVENT = { lifecycleId: 'default' };\n\t      var EVENT_OPTIONS = { sender: COLLABORATOR_ID };\n\t      var DEFAULT_AREAS = [{ name: 'activities', hidden: true }, { name: 'popups' }, { name: 'popovers' }];\n\t\n\t      var activeWidgetAdapterWrappers = [];\n\t      var cleanUpLayout = function cleanUpLayout() {};\n\t\n\t      pageElement.innerHTML = '';\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function setupPage(pageName) {\n\t         (0, _assert2.default)(pageName).hasType(String).isNotNull();\n\t\n\t         return pageLoader.load(pageName).then(function (page) {\n\t            _areaHelper = (0, _area_helper.create)(page);\n\t            visibilityManager.setAreaHelper(_areaHelper);\n\t\n\t            var layoutPromise = layoutLoader.load(page.layout).then(function (layoutInfo) {\n\t               cleanUpLayout = renderLayout(pageElement, _areaHelper, layoutInfo);\n\t            });\n\t\n\t            localeManager.subscribe();\n\t            var layoutWidget = function layoutWidget(widget) {\n\t               return layoutWidgetAdapterFor(_areaHelper, widget);\n\t            };\n\t\n\t            // instantiate controllers wrapped by widget adapters\n\t            var widgetPromises = widgetsForPage(page).map(function (widget) {\n\t               return 'layout' in widget ? layoutWidget(widget) : widgetLoader.load(widget);\n\t            });\n\t\n\t            return Promise.all([].concat(_toConsumableArray(widgetPromises), [layoutPromise])).then(function (results) {\n\t               return results.slice(0, -1);\n\t            });\n\t         }).then(function (widgetAdapterWrappers) {\n\t            pagesCollector.collectCurrentPage(pageName);\n\t            activeWidgetAdapterWrappers = widgetAdapterWrappers;\n\t         }).then(localeManager.initialize).then(function () {\n\t            return eventBus.publishAndGatherReplies('beginLifecycleRequest.default', LIFECYCLE_EVENT, EVENT_OPTIONS);\n\t         }).then(visibilityManager.initialize)\n\t         // Give the widgets (a little) time to settle on the event bus before $digesting and painting:\n\t         .then(function () {\n\t            return delay(WIDGET_ATTACH_DELAY_MS);\n\t         }).then(function () {\n\t            return _areaHelper.attachWidgets(activeWidgetAdapterWrappers);\n\t         });\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function tearDownPage() {\n\t         visibilityManager.unsubscribe();\n\t         localeManager.unsubscribe();\n\t\n\t         return eventBus.publishAndGatherReplies('endLifecycleRequest.default', LIFECYCLE_EVENT, EVENT_OPTIONS).then(function () {\n\t            activeWidgetAdapterWrappers.forEach(function (wrapper) {\n\t               return wrapper.destroy();\n\t            });\n\t            activeWidgetAdapterWrappers = [];\n\t            cleanUpLayout();\n\t            cleanUpLayout = function cleanUpLayout() {};\n\t         });\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function widgetsForPage(page) {\n\t         return Object.keys(page.areas).reduce(function (widgets, areaName) {\n\t            var areaWidgets = page.areas[areaName];\n\t            return areaWidgets.reduce(function (widgets, widget) {\n\t               widget.area = areaName;\n\t               return [].concat(_toConsumableArray(widgets), [widget]);\n\t            }, widgets);\n\t         }, []);\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function layoutWidgetAdapterFor(areaHelper, widget) {\n\t         return layoutLoader.load(widget.layout).then(function (_ref) {\n\t            var className = _ref.className,\n\t                html = _ref.html;\n\t\n\t            var adapter = (0, _layout_widget_adapter.create)(areaHelper, className, {\n\t               area: widget.area,\n\t               id: widget.id,\n\t               path: widget.layout\n\t            });\n\t\n\t            return {\n\t               id: widget.id,\n\t               adapter: adapter,\n\t               destroy: adapter.destroy,\n\t               templatePromise: Promise.resolve(html)\n\t            };\n\t         });\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function renderLayout(pageElement, areaHelper, layoutInfo) {\n\t         addClass(pageElement, layoutInfo.className);\n\t         pageElement.innerHTML = layoutInfo.html;\n\t\n\t         var areas = (0, _area_helper.findWidgetAreas)(pageElement);\n\t         var deregisterFuncs = Object.keys(areas).map(function (areaName) {\n\t            return areaHelper.register(areaName, areas[areaName]);\n\t         });\n\t\n\t         DEFAULT_AREAS.forEach(function (area) {\n\t            if (areaHelper.exists(area.name)) {\n\t               return;\n\t            }\n\t\n\t            var node = document.createElement('div');\n\t            // We only set the attribute here for debugging purposes\n\t            node.setAttribute('ax-widget-area', area.name);\n\t            if (area.hidden) {\n\t               node.style.display = 'none';\n\t            }\n\t            deregisterFuncs.push(areaHelper.register(area.name, node));\n\t            pageElement.appendChild(node);\n\t         });\n\t\n\t         return function () {\n\t            deregisterFuncs.forEach(function (func) {\n\t               return func();\n\t            });\n\t            removeClass(pageElement, layoutInfo.className);\n\t         };\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      return api;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return pageServiceApi;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction addClass(element, cssClass) {\n\t   if (element.classList) {\n\t      element.classList.add(cssClass);\n\t      return;\n\t   }\n\t   element.className += ' ' + cssClass;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction removeClass(element, cssClass) {\n\t   if (element.classList) {\n\t      element.classList.remove(cssClass);\n\t      return;\n\t   }\n\t   element.className = element.className.split(' ').map(function (c) {\n\t      return c.trim();\n\t   }).filter(function (c) {\n\t      return c !== cssClass;\n\t   }).join(' ');\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction delay(ms) {\n\t   return new Promise(function (resolve) {\n\t      return setTimeout(resolve, ms);\n\t   });\n\t}\n\n/***/ },\n\n/***/ 59:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\texports.findWidgetAreas = findWidgetAreas;\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\t/**\n\t * The area helper manages widget areas, their DOM representation and their nesting structure.\n\t *\n\t * It tracks widget area visibility in order to compile widgets and to attach them to their areas when\n\t * these become visible.\n\t * It does not interact with the event bus directly, but is consulted by the visibility event manager to\n\t * determine area nesting for visibility events.\n\t */\n\t\n\tfunction create(page) {\n\t\n\t   var exports = {\n\t      setVisibility: setVisibility,\n\t      areasInArea: areasInArea,\n\t      areasInWidget: areasInWidget,\n\t      register: register,\n\t      exists: exists,\n\t      attachWidgets: attachWidgets\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   // all initially visible widgets should be attached together, to reduce jitter and unnecessary DOM ops\n\t   var freeToAttach = false;\n\t\n\t   // keep the dom element for each area, to attach widgets to\n\t   var areaToElement = {};\n\t\n\t   // track widget adapters waiting for their area to become available so that they may attach to its DOM\n\t   var areaToWaitingAdapters = {};\n\t\n\t   // track the visibility status of all areas\n\t   var knownVisibilityState = {};\n\t\n\t   // the containing area name for each widget\n\t   var widgetIdToArea = {};\n\t   (0, _object.forEach)(page.areas, function (widgets, areaName) {\n\t      widgets.forEach(function (widget) {\n\t         widgetIdToArea[widget.id] = areaName;\n\t      });\n\t   });\n\t\n\t   // for each widget with children, and each widget area with nested areas, store a list of child names\n\t   var areasInAreaMap = {};\n\t   var areasInWidgetMap = {};\n\t   (0, _object.forEach)(page.areas, function (widgetEntries, areaName) {\n\t      var containerName = '';\n\t      if (areaName.indexOf('.') !== -1) {\n\t         var widgetId = areaName.split('.')[0];\n\t         areasInWidgetMap[widgetId] = areasInWidgetMap[widgetId] || [];\n\t         areasInWidgetMap[widgetId].push(areaName);\n\t         containerName = widgetIdToArea[widgetId];\n\t      }\n\t      areasInAreaMap[containerName] = areasInAreaMap[containerName] || [];\n\t      areasInAreaMap[containerName].push(areaName);\n\t   });\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function isVisible(areaName) {\n\t      return knownVisibilityState[areaName] || false;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function setVisibility(areaName, visible) {\n\t      if (visible && freeToAttach) {\n\t         attachWaitingAdapters(areaName);\n\t      }\n\t      knownVisibilityState[areaName] = visible;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function areasInArea(containerName) {\n\t      return areasInAreaMap[containerName];\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function areasInWidget(widgetId) {\n\t      return areasInWidgetMap[widgetId];\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Register a widget area\n\t    *\n\t    * @param {String} name\n\t    *    the area name as used in the page definition\n\t    * @param {HTMLElement} element\n\t    *    an HTML element representing the widget area\n\t    *\n\t    * @return {Function}\n\t    *    removes the according area from the registry again\n\t    */\n\t   function register(name, element) {\n\t      if (name in areaToElement) {\n\t         throw new Error('The area \"' + name + '\" is defined twice in the current layout.');\n\t      }\n\t\n\t      areaToElement[name] = element;\n\t      if (freeToAttach && isVisible(name)) {\n\t         attachWaitingAdapters(name);\n\t      }\n\t\n\t      return function () {\n\t         delete areaToElement[name];\n\t      };\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function exists(name) {\n\t      return name in areaToElement;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function attachWidgets(widgetAdapters) {\n\t      freeToAttach = true;\n\t      widgetAdapters.forEach(function (adapterRef) {\n\t         var areaName = widgetIdToArea[adapterRef.id];\n\t         areaToWaitingAdapters[areaName] = areaToWaitingAdapters[areaName] || [];\n\t         areaToWaitingAdapters[areaName].push(adapterRef);\n\t      });\n\t      (0, _object.forEach)(page.areas, function (widgets, areaName) {\n\t         if (isVisible(areaName)) {\n\t            attachWaitingAdapters(areaName);\n\t         }\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   // eslint-disable-next-line valid-jsdoc\n\t   /** @private */\n\t   function attachWaitingAdapters(areaName) {\n\t      var waitingAdapters = areaToWaitingAdapters[areaName];\n\t      if (!waitingAdapters || !waitingAdapters.length) {\n\t         return;\n\t      }\n\t\n\t      var element = areaToElement[areaName];\n\t      if (!element) {\n\t         return;\n\t      }\n\t\n\t      // Make sure that all assets are available before proceeding, so that DOM update happens en bloc.\n\t      Promise.all(waitingAdapters.map(function (adapterRef) {\n\t         return adapterRef.templatePromise;\n\t      })).then(function (htmlTemplates) {\n\t         // prepare first/last bootstrap classes for appending widgets\n\t         waitingAdapters.forEach(function (adapterRef, i) {\n\t            adapterRef.adapter.domAttachTo(element, htmlTemplates[i]);\n\t         });\n\t      });\n\t\n\t      delete areaToWaitingAdapters[areaName];\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return exports;\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\tfunction findWidgetAreas(rootElement) {\n\t   var areas = {};\n\t   Array.from(rootElement.querySelectorAll('[ax-widget-area],[data-ax-widget-area]')).forEach(function (elem) {\n\t      var name = elem.getAttribute('ax-widget-area') || elem.getAttribute('data-ax-widget-area');\n\t\n\t      areas[name] = elem;\n\t   });\n\t   return areas;\n\t}\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _area_helper = __webpack_require__(59);\n\t\n\tfunction create(areaHelper, className, widget) {\n\t\n\t   var exports = {\n\t      createController: createController,\n\t      domAttachTo: domAttachTo,\n\t      domDetach: domDetach,\n\t      destroy: destroy\n\t   };\n\t   var layoutNode = void 0;\n\t   var deregister = function deregister() {};\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createController() {}\n\t   // noop\n\t\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function domAttachTo(areaElement, htmlTemplate) {\n\t      if (layoutNode) {\n\t         areaElement.appendChild(layoutNode);\n\t         return;\n\t      }\n\t\n\t      layoutNode = document.createElement('div');\n\t      layoutNode.id = widget.id;\n\t      layoutNode.className = className;\n\t      layoutNode.innerHTML = htmlTemplate;\n\t\n\t      var areas = (0, _area_helper.findWidgetAreas)(layoutNode);\n\t      var deregisterFuncs = Object.keys(areas).map(function (areaName) {\n\t         return areaHelper.register(widget.id + '.' + areaName, areas[areaName]);\n\t      });\n\t      deregister = function deregister() {\n\t         return deregisterFuncs.forEach(function (func) {\n\t            return func();\n\t         });\n\t      };\n\t\n\t      areaElement.appendChild(layoutNode);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function domDetach() {\n\t      if (layoutNode.parentNode) {\n\t         layoutNode.parentNode.removeChild(layoutNode);\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function destroy() {\n\t      deregister();\n\t      layoutNode = null;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return exports;\n\t} /**\n\t   * Copyright 2016 aixigo AG\n\t   * Released under the MIT license.\n\t   * http://laxarjs.org/license\n\t   */\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                                                                                               * Released under the MIT license.\n\t                                                                                                                                                                                                                                                                               * http://laxarjs.org/license\n\t                                                                                                                                                                                                                                                                               */\n\t\n\t\n\texports.create = create;\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\t/**\n\t * Module providing the page.js router factory.\n\t *\n\t * @module pagejs_router\n\t */\n\t\n\tvar ROUTE_PARAM_MATCHER = /\\/:([^\\/\\?\\(]+)(\\(\\.\\*\\)|\\?)?/g;\n\tvar TRAILING_SEGMENTS_MATCHER = /\\/(_\\/)*_?$/;\n\t\n\t/**\n\t * Creates and returns a new page.js router instance from its dependencies.\n\t *\n\t * @param {Object} pagejs\n\t *    the pagejs router module (or a compatible mock)\n\t * @param {Browser} browser\n\t *    the browser, used to determine the document base href\n\t * @param {Configuration} configuration\n\t *    the configuration instance, used to lookup router configuration as described above\n\t *\n\t * @return {PagejsRouter}\n\t *    a router instance that will route as soon as `registerRoutes` is invoked\n\t *\n\t * @private\n\t */\n\tfunction create(pagejs, browser, configuration) {\n\t\n\t   var hashbang = configuration.get('router.pagejs.hashbang', false);\n\t   var queryEnabled = configuration.ensure('router.query.enabled');\n\t\n\t   var base = configuration.get('router.base') || fallbackBase(hashbang);\n\t   var origin = originFromLocation(browser.location());\n\t   var absoluteBase = browser.resolve(base, origin);\n\t\n\t   /**\n\t    * Router implementation based on [page.js](https://visionmedia.github.io/page.js/).\n\t    *\n\t    * This router allows to register flow patterns in page.js syntax so that their handler is activated when\n\t    * the corresponding URL is entered in the browser. While that alone does not add much to the\n\t    * functionality built into page.js, this router also allows to construct URLs based on a pattern and\n\t    * corresponding substitution parameters. Finally, users can trigger navigation directly.\n\t    *\n\t    * Note that the router supports various configuration options:\n\t    *\n\t    *  - `router.pagejs`: configuration object that is directly passed to page.js (such as `click`,\n\t    *    `popstate`, `dispatch`, `hashbang`). The application is responsible for specifying the required\n\t    *    options, as LaxarJS does not touch the page.js defaults otherwise. Consult the page.js documentation\n\t    *    for more information\n\t    *  - `router.query.enabled`: if `true`, query parameters are automatically transformed into additional\n\t    *    place parameters and vice versa. The default is `false`\n\t    *  - `router.base`: The base path under which to perform routing. If omitted, the document base href is\n\t    *    used\n\t    *\n\t    * Note that this router encodes/decodes certain parameters in a way that is different from page.js:\n\t    *\n\t    *  - when the value `null` is encoded into a URL path segment, it is encoded as `_`\n\t    *  - the value `/` is double-encoded\n\t    *\n\t    * @name PagejsRouter\n\t    * @constructor\n\t    */\n\t   return {\n\t      registerRoutes: registerRoutes,\n\t      navigateTo: navigateTo,\n\t      constructAbsoluteUrl: constructAbsoluteUrl\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Register all routes defined in the given route map, as well as a fallback route that should be used\n\t    * when none of the other routes match. Also causes the initial route to be triggered.\n\t    *\n\t    * @param {Object.<String, Function>} routeMap\n\t    *    a map of routing patterns in page.js syntax to the corresponding handler functions. When invoked,\n\t    *    the handler functions will receive the decoded parameter values for their pattern and (if configured)\n\t    *    from the query string, as a map from string parameter name to string value\n\t    * @param {Function} fallbackHandler\n\t    *    a handler that is invoked when none of the configured routes match. It receives the failed path as\n\t    *    a string argument\n\t    *\n\t    * @memberof PagejsRouter\n\t    */\n\t   function registerRoutes(routeMap, fallbackHandler) {\n\t      pagejs.base(base);\n\t      (0, _object.forEach)(routeMap, function (handler, pattern) {\n\t         pagejs(pattern, function (context) {\n\t            handler(collectParameters(pattern, context));\n\t         });\n\t      });\n\t      pagejs('*', function (context) {\n\t         fallbackHandler(context.path);\n\t      });\n\t      pagejs.start(configuration.get('router.pagejs', {}));\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Change the browser location to a different routable URL, from pattern and parameters. This is also\n\t    * called reverse-routing.\n\t    *\n\t    * @param {String[]} patterns\n\t    *    a list of patterns to choose from. This allows the router to pick the \"best\" pattern, such as the\n\t    *    pattern containing the largest number of given parameters. This router always picks the first pattern\n\t    *    for now.\n\t    * @param {Object} parameters\n\t    *    parameter values to substitute into the pattern to generate a URL\n\t    * @param {Boolean} [replaceHistory=true]\n\t    *    if `true`, the current history entry is replaced with the new one, otherwise a new entry is pushed.\n\t    *    Useful to express redirects\n\t    *\n\t    * @memberof PagejsRouter\n\t    */\n\t   function navigateTo(patterns, parameters) {\n\t      var replaceHistory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t      var path = constructPath(patterns, parameters);\n\t      (replaceHistory ? pagejs.redirect : pagejs.show)(path);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Create a routable URL, from pattern and parameters. This allows to create link-hrefs without repeating\n\t    * URL patterns throughout the code base.\n\t    *\n\t    * @param {Array<String>} patterns\n\t    *    a list of patterns to choose from. This allows the router to pick the \"best\" pattern, such as the\n\t    *    pattern containing the largest number of given parameters. This router always picks the first pattern\n\t    *    for now.\n\t    * @param {Object} parameters\n\t    *    parameter values to substitute into the pattern to generate a URL\n\t    * @param {Object} parameterDefaults\n\t    *    only applicable if query strings are enabled by configuration: before a parameter is encoded into the\n\t    *    query string, it is checked against the default. Only values that are different from their default\n\t    *    are kept\n\t    *\n\t    * @return {String} the resulting URL, including schema and host\n\t    *\n\t    * @memberof PagejsRouter\n\t    */\n\t   function constructAbsoluteUrl(patterns, parameters, parameterDefaults) {\n\t      var routingPath = constructPath(patterns, parameters, parameterDefaults);\n\t      return hashbang ? absoluteBase + '#!' + routingPath : '' + absoluteBase + routingPath;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function constructPath(patterns, parameters) {\n\t      var bestPattern = patterns[0];\n\t      var path = bestPattern.replace(ROUTE_PARAM_MATCHER, function ($0, $param, $modifier) {\n\t         var replacement = encodeSegment(parameters[$param], $modifier === '(.*)');\n\t         delete parameters[$param];\n\t         return '/' + replacement;\n\t      }).replace(TRAILING_SEGMENTS_MATCHER, '/');\n\t\n\t      if (queryEnabled) {\n\t         var _ret = function () {\n\t            var query = [];\n\t            (0, _object.forEach)(parameters, function (value, parameterName) {\n\t               var encodedKey = encodeURIComponent(parameterName);\n\t               if (value === true) {\n\t                  query.push(encodedKey);\n\t                  return;\n\t               }\n\t               if (value === false || value == null) {\n\t                  return;\n\t               }\n\t               query.push(encodedKey + '=' + encodeURIComponent(value));\n\t            });\n\t\n\t            if (query.length) {\n\t               return {\n\t                  v: path + '?' + query.join('&')\n\t               };\n\t            }\n\t         }();\n\t\n\t         if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t\n\t      return path;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function collectParameters(pattern, context) {\n\t      var _context$querystring = context.querystring,\n\t          querystring = _context$querystring === undefined ? '' : _context$querystring,\n\t          _context$params = context.params,\n\t          params = _context$params === undefined ? {} : _context$params;\n\t\n\t      var parameters = {};\n\t      if (queryEnabled && querystring.length) {\n\t         querystring.split('&').map(function (_) {\n\t            return _.split('=').map(decodeURIComponent);\n\t         }).forEach(function (_ref) {\n\t            var _ref2 = _slicedToArray(_ref, 2),\n\t                key = _ref2[0],\n\t                value = _ref2[1];\n\t\n\t            parameters[key] = value !== undefined ? value : true;\n\t         });\n\t      }\n\t      (0, _object.forEach)(params, function (value, key) {\n\t         var isMultiSegment = pattern.indexOf('/:' + key + '(.*)') !== -1;\n\t         parameters[key] = decodeSegment(value, isMultiSegment);\n\t      });\n\t      return parameters;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Encode a parameter value for use as path segment(s) in routing.\n\t    *\n\t    * Usually, values are simply URL-encoded, but there are special cases:\n\t    *\n\t    *  - `null` and `undefined` are encoded as '_',\n\t    *  - other non-string values are converted to strings before URL encoding,\n\t    *  - slashes ('/') are double-encoded to '%252F', so that page.js ignores them during route matching,\n\t    *  - underscore ('_') is double-encoded to '%255F', to avoid confusion with '_' (null).\n\t    *\n\t    * When decoded, for use in didNavigate events, the original values will be restored, except for:\n\t    *  - non-string input values, which will always be decoded into strings,\n\t    *  - `undefined` values which will be decoded to `null`.\n\t    *\n\t    * @param {*} value\n\t    *   the parameter to encode\n\t    * @param {Boolean} [isMultiSegment=false]\n\t    *   determines if encoded value may contain slashes (true) or if slashes are double-encoded so that the\n\t    *   parameter can always be matched by a single path segment (false)\n\t    * @return {String}\n\t    *   the encoded value, for use as a path segment in URLs\n\t    *\n\t    * @private\n\t    */\n\t   function encodeSegment(value, isMultiSegment) {\n\t      if (value == null) {\n\t         return '_';\n\t      }\n\t      var urlSegments = encodeURIComponent(value).replace(/_/g, '%255F');\n\t      return isMultiSegment ? urlSegments : urlSegments.replace(/%2F/g, '%252F');\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Decodes a place parameter value from a path segment, to restore it for use in will/didNavigate events.\n\t    *\n\t    * Usually, this reverses the application of {#encodeSegment} after the browser has decoded a URL, except:\n\t    *  - path-segments based on non-string input values, which will always be decoded into strings,\n\t    *  - path-segments based on `undefined` values which will be decoded to `null`.\n\t    *\n\t    * Note that while the browser has already performed URL-decoding, this function replaces `%2F` into `/`\n\t    * and `%5F` to `_`, to be compatible with the double-encoding performaed by {#encodeSegment}.\n\t    *\n\t    * @param {String} value\n\t    *   the encoded parameter segment to decode\n\t    * @param {Boolean} [isMultiSegment=false]\n\t    *   determines if url-encoded slashes in the value were part of the original input (true) or if slashes\n\t    *   in the given value were double-encoded by {#encodeSegment} and need additional decoding (false)\n\t    * @return {String}\n\t    *   the decoded value, for use as a path segment in URLs\n\t    *\n\t    * @private\n\t    */\n\t   function decodeSegment(value, isMultiSegment) {\n\t      if (value === '_' || value == null) {\n\t         return null;\n\t      }\n\t      var segments = value.replace(/%5F/g, '_');\n\t      return isMultiSegment ? segments : segments.replace(/%2F/g, '/');\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function fallbackBase(hashbang) {\n\t      if (hashbang) {\n\t         return browser.location().pathname;\n\t      }\n\t      // relies on the HTML `base` element being present\n\t      var documentBase = browser.resolve('.').replace(/\\/$/, '');\n\t      return documentBase;\n\t   }\n\t}\n\t\n\tfunction originFromLocation(_ref3) {\n\t   var protocol = _ref3.protocol,\n\t       hostname = _ref3.hostname,\n\t       port = _ref3.port;\n\t\n\t   return protocol + '://' + hostname + (port ? ':' + port : '');\n\t}\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar senderOptions = { sender: 'AxPageController' }; /**\n\t                                                     * Copyright 2016 aixigo AG\n\t                                                     * Released under the MIT license.\n\t                                                     * http://laxarjs.org/license\n\t                                                     */\n\t\n\tvar subscriberOptions = { subscriber: 'AxPageController' };\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * The LocaleManager initializes the locale(s) and implements changes to them.\n\t *\n\t * Before publishing the state of all configured locales, it listens to change requests, allowing\n\t * widgets and activities (such as a LocaleSwitcherWidget) to influence the state of locales before\n\t * the navigation is complete.\n\t */\n\t\n\tfunction create(eventBus, configuration) {\n\t\n\t   var exports = {\n\t      initialize: initialize,\n\t      subscribe: subscribe,\n\t      unsubscribe: unsubscribe\n\t   };\n\t\n\t   var configLocales = configuration.ensure('i18n.locales');\n\t   var i18n = void 0;\n\t   var initialized = void 0;\n\t   var unsubscribeFromEventBus = function unsubscribeFromEventBus() {};\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function publish(locale) {\n\t      var event = { locale: locale, languageTag: i18n[locale] };\n\t      return eventBus.publish('didChangeLocale.' + locale, event, senderOptions);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function initialize() {\n\t      initialized = true;\n\t      return Promise.all(Object.keys(configLocales).map(publish));\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function unsubscribe() {\n\t      unsubscribeFromEventBus();\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function subscribe() {\n\t      i18n = (0, _object.deepClone)(configLocales);\n\t      initialized = false;\n\t\n\t      unsubscribeFromEventBus = eventBus.subscribe('changeLocaleRequest', function (event) {\n\t         i18n[event.locale] = event.languageTag;\n\t         if (initialized) {\n\t            publish(event.locale);\n\t         }\n\t      }, subscriberOptions);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return exports;\n\t}\n\n/***/ },\n\n/***/ 63:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\tvar senderOptions = { sender: 'AxPageController', deliverToSender: false };\n\tvar subscriberOptions = { subscriber: 'AxPageController' };\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * The visibility event manager initializes and coordinates events for widget area visibility.\n\t *\n\t * It subscribes to all visibility changes and propagates them to nested widget areas\n\t * (if applicable). It is not concerned with the resulting DOM-visibility of individual controls:\n\t * the `axVisibilityService` takes care of that.\n\t *\n\t * @param {EventBus} eventBus\n\t *    an event bus instance\n\t * @return {Object}\n\t *    a function to trigger initialization of the manager and initial widget visibility\n\t */\n\tfunction create(eventBus) {\n\t\n\t   var exports = {\n\t      initialize: initialize,\n\t      setAreaHelper: setAreaHelper,\n\t      unsubscribe: unsubscribe\n\t   };\n\t\n\t   var areaHelper = void 0;\n\t   var unsubscribeFromAreaVisibilityRequest = function unsubscribeFromAreaVisibilityRequest() {};\n\t   var unsubscribeFromWidgetVisibilityRequest = function unsubscribeFromWidgetVisibilityRequest() {};\n\t   var ROOT = '';\n\t\n\t   function setAreaHelper(_) {\n\t      areaHelper = _;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function initialize() {\n\t      // broadcast visibility changes in individual widgets to their nested areas\n\t      unsubscribeFromWidgetVisibilityRequest = eventBus.subscribe('changeWidgetVisibilityRequest', function (event) {\n\t         var affectedAreas = areaHelper.areasInWidget(event.widget);\n\t         var will = ['willChangeWidgetVisibility', event.widget, event.visible].join('.');\n\t         var did = ['didChangeWidgetVisibility', event.widget, event.visible].join('.');\n\t\n\t         eventBus.publish(will, event, senderOptions);\n\t\n\t         Promise.all((affectedAreas || []).map(event.visible ? show : hide)).then(function () {\n\t            return eventBus.publish(did, event, senderOptions);\n\t         });\n\t      }, subscriberOptions);\n\t\n\t      // broadcast visibility changes in widget areas to their nested areas\n\t      unsubscribeFromAreaVisibilityRequest = eventBus.subscribe('changeAreaVisibilityRequest', function (event) {\n\t         return initiateAreaChange(event.area, event.visible);\n\t      }, subscriberOptions);\n\t\n\t      return implementAreaChange(ROOT, true);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function show(area) {\n\t      return requestAreaChange(area, true);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function hide(area) {\n\t      return requestAreaChange(area, false);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * First, publish a `changeAreaVisibilityRequest` to ask if some widget would like to manage the\n\t    * given area's visibility.\n\t    * If no widget responds, self-issue a will/did-response to notify interested widgets in the area\n\t    * of their new visibility status.\n\t    * In either case, manage the propagation to nested areas and inform the area helper so that it\n\t    * may compile and attach the templates of any newly visible widgets.\n\t    *\n\t    * @param {String} area\n\t    *    the area whose visibility to update\n\t    * @param {Boolean} visible\n\t    *    the new visibility state of the given area, to the best knowledge of the client\n\t    * @return {Promise}\n\t    *    promise that is resolved after the change request is completed\n\t    */\n\t   function requestAreaChange(area, visible) {\n\t      var request = ['changeAreaVisibilityRequest', area].join('.');\n\t      var event = { area: area, visible: visible };\n\t      return eventBus.publishAndGatherReplies(request, event, senderOptions).then(function (responses) {\n\t         if (responses.length === 0) {\n\t            // no one took responsibility, so the event manager determines visibility by area nesting\n\t            return initiateAreaChange(area, visible);\n\t         }\n\t         // assume the first 'did'-response to be authoritative:\n\t         var response = responses[0];\n\t         return implementAreaChange(area, response.event.visible);\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   // eslint-disable-next-line valid-jsdoc\n\t   /**\n\t    * Set the new visibility state for the given area, then issue requests for the child areas.\n\t    * Inform the area helper so that it may compile and attach the templates of any newly visible\n\t    * widgets.\n\t    */\n\t   function initiateAreaChange(area, visible) {\n\t      var will = ['willChangeAreaVisibility', area, visible].join('.');\n\t      var event = { area: area, visible: visible };\n\t      return eventBus.publish(will, event, senderOptions).then(function () {\n\t         return implementAreaChange(area, visible);\n\t      }).then(function () {\n\t         var did = ['didChangeAreaVisibility', area, visible].join('.');\n\t         return eventBus.publish(did, event, senderOptions);\n\t      });\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function implementAreaChange(ofArea, areaVisible) {\n\t      areaHelper.setVisibility(ofArea, areaVisible);\n\t      var children = areaHelper.areasInArea(ofArea);\n\t      if (!children) {\n\t         return Promise.resolve();\n\t      }\n\t\n\t      return Promise.all(children.map(areaVisible ? show : hide));\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function unsubscribe() {\n\t      unsubscribeFromWidgetVisibilityRequest();\n\t      unsubscribeFromAreaVisibilityRequest();\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   return exports;\n\t}\n\n/***/ },\n\n/***/ 64:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _log = __webpack_require__(36);\n\t\n\tvar _widget_services_i18n = __webpack_require__(65);\n\t\n\tvar _widget_services_visibility = __webpack_require__(66);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t\n\t/**\n\t * Factory for the services that are available to the controller of a widget, regardless of the underlying\n\t * view framework.\n\t *\n\t * @module widget_services\n\t */\n\t\n\tvar INVALID_ID_MATCHER = /[^A-Za-z0-9_\\.-]/g;\n\tvar ID_SEPARATOR = '-';\n\t\n\tfunction create(artifactProvider, configuration, controlLoader, globalEventBus, flowService, log, heartbeat, pageService, storage, toolingProviders) {\n\t\n\t   var i18nOptions = configuration.ensure('i18n');\n\t\n\t   return {\n\t      forWidget: function forWidget(specification, widgetConfiguration, features) {\n\t         var decorators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t         var widgetId = widgetConfiguration.id;\n\t         var widgetName = specification.name;\n\t\n\t\n\t         var instances = {\n\t            /**\n\t             * Area helper service instance.\n\t             *\n\t             * @type {AxAreaHelper}\n\t             */\n\t            axAreaHelper: null,\n\t\n\t            /**\n\t             * widget asset accessor instance.\n\t             *\n\t             * @type {AxAssets}\n\t             */\n\t            axAssets: null,\n\t\n\t            /**\n\t             * Interface to the configuration the application was bootstrapped with.\n\t             *\n\t             * @type {Configuration}\n\t             */\n\t            axConfiguration: null,\n\t\n\t            /**\n\t             * Context information and tiny service collection.\n\t             *\n\t             * @type {AxContext}\n\t             */\n\t            axContext: null,\n\t\n\t            /**\n\t             * The control loader api to provide access to control modules used by a widget.\n\t             *\n\t             * @type {ControlLoader}\n\t             */\n\t            axControls: null,\n\t\n\t            /**\n\t             * Event bus instance specifically enriched for a widget instance.\n\t             *\n\t             * @type {AxEventBus}\n\t             */\n\t            axEventBus: null,\n\t\n\t            /**\n\t             * The features the widget was configured with.\n\t             * Its structure depends solely on the schema defined in the widget's descriptor file\n\t             * (`widget.json`)\n\t             *\n\t             * @type {Object}\n\t             */\n\t            axFeatures: null,\n\t\n\t            /**\n\t             * Injection for the flow service.\n\t             *\n\t             * @type {FlowService}\n\t             */\n\t            axFlowService: null,\n\t\n\t            /**\n\t             * The global event bus instance of the application.\n\t             * {@link axEventBus} should always be prefered over this, since for example unsubscribing from\n\t             * event subscriptions on widget destruction needs be done manually and can lead to severe memory\n\t             * leaks if omitted.\n\t             * One valid use case could be an activity, that has permanent knowledge about the application's\n\t             * state and lifetime, and for example adds an inspector to the event bus.\n\t             *\n\t             * @type {EventBus}\n\t             */\n\t            axGlobalEventBus: null,\n\t\n\t            /**\n\t             * The global logger instance.\n\t             *\n\t             * @type {Logger}\n\t             */\n\t            axGlobalLog: null,\n\t\n\t            /**\n\t             * The global storage factory.\n\t             *\n\t             * @type {StorageFactory}\n\t             */\n\t            axGlobalStorage: null,\n\t\n\t            /**\n\t             * The heartbeat instance.\n\t             *\n\t             * @type {Heartbeat}\n\t             */\n\t            axHeartbeat: null,\n\t\n\t            /**\n\t             * I18n api specifically for the widget instance.\n\t             *\n\t             * @type {AxI18n}\n\t             */\n\t            axI18n: null,\n\t\n\t            /**\n\t             * A function that generates page wide unique ids based on ids that are unique within the scope\n\t             * of a widget.\n\t             *\n\t             * A common use case is the connection of a `label` HTML element and an `input` element via `for`\n\t             * and `id` attributes.\n\t             * For such cases ids should **always** be generated using this service.\n\t             *\n\t             * Example:\n\t             * ```js\n\t             * widgetDom.querySelector( 'label' ).setAttribute( 'for', axId( 'myField' ) );\n\t             * widgetDom.querySelector( 'input' ).setAttribute( 'id', axId( 'myField' ) );\n\t             * ```\n\t             *\n\t             * @param {String} localUniqueId\n\t             *    an identifier that is unique within a widget\n\t             *\n\t             * @return {String}\n\t             *    an identifier that is unique for the current page\n\t             *\n\t             * @type {Function}\n\t             */\n\t            axId: null,\n\t\n\t            /**\n\t             * The widget logger instance.\n\t             * This is basically the same as the {@link #axGlobalLog}, but adds the name of the widget as\n\t             * prefix and its id as suffix to every log message.\n\t             *\n\t             * @type {Logger}\n\t             */\n\t            axLog: null,\n\t\n\t            /**\n\t             * Ready to use storage apis for a widget.\n\t             * All keys are namespaced by the widget id to limit visibility to this specific instance.\n\t             *\n\t             * @type {AxStorage}\n\t             */\n\t            axStorage: null,\n\t\n\t            /**\n\t             * Access to the tooling provider API.\n\t             * TODO Fix the type (and document toolingProviders)\n\t             *\n\t             * @type {*}\n\t             */\n\t            axTooling: null,\n\t\n\t            /**\n\t             * Visibility services for a widget instance.\n\t             * @type {AxVisibility}\n\t             */\n\t            axVisibility: null\n\t         };\n\t\n\t         var services = Object.assign({}, instances);\n\t         var releaseHandlers = [];\n\t\n\t         registerServiceFactory('axAreaHelper', function () {\n\t            return createAreaHelperForWidget(widgetId);\n\t         }, function () {\n\t            instances.axAreaHelper.release();\n\t         });\n\t         registerServiceFactory('axAssets', function () {\n\t            return createAssetsServiceForWidget(widgetName);\n\t         });\n\t         registerService('axConfiguration', configuration);\n\t         registerServiceFactory('axContext', function () {\n\t            return createContextForWidget(widgetConfiguration, widgetId, services);\n\t         });\n\t         registerService('axControls', controlLoader);\n\t         registerServiceFactory('axEventBus', function () {\n\t            return createEventBusForWidget(services.axGlobalEventBus, widgetName, widgetId);\n\t         }, function () {\n\t            instances.axEventBus.release();\n\t         });\n\t         registerService('axFeatures', features);\n\t         registerService('axFlowService', flowService);\n\t         registerService('axGlobalEventBus', globalEventBus);\n\t         registerService('axGlobalLog', log);\n\t         registerService('axGlobalStorage', storage);\n\t         registerService('axHeartbeat', heartbeat);\n\t\n\t         registerServiceFactory('axI18n', function () {\n\t            return (0, _widget_services_i18n.create)(services.axContext, i18nOptions);\n\t         });\n\t         registerServiceFactory('axId', function () {\n\t            return createIdGeneratorForWidget(widgetId);\n\t         });\n\t         registerServiceFactory('axLog', function () {\n\t            return createLoggerForWidget(log, widgetName, widgetId);\n\t         });\n\t         registerServiceFactory('axStorage', function () {\n\t            return createStorageForWidget(storage, widgetId);\n\t         });\n\t         registerServiceFactory('axVisibility', function () {\n\t            return (0, _widget_services_visibility.create)(services.axContext, services.axAreaHelper);\n\t         });\n\t         registerService('axTooling', toolingProviders);\n\t\n\t         return {\n\t            services: services,\n\t            releaseServices: function releaseServices() {\n\t               releaseHandlers.forEach(function (f) {\n\t                  f();\n\t               });\n\t            }\n\t         };\n\t\n\t         /////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t         function registerService(name, instance) {\n\t            var decorate = decorators[name];\n\t            instances[name] = services[name] = decorate ? decorate(instance) : instance;\n\t         }\n\t\n\t         /////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t         function registerServiceFactory(name, factory, optionalRelease) {\n\t            Object.defineProperty(services, name, {\n\t               get: function get() {\n\t                  if (!instances[name]) {\n\t                     var decorate = decorators[name];\n\t                     var instance = factory();\n\t                     instances[name] = decorate ? decorate(instance) : instance;\n\t                     if (optionalRelease) {\n\t                        releaseHandlers.push(optionalRelease);\n\t                     }\n\t                  }\n\t                  return instances[name];\n\t               }\n\t            });\n\t         }\n\t      }\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createContextForWidget(widgetConfiguration, widgetId, services) {\n\t\n\t      /**\n\t       * This object encapsulates widget context information and provides access to the most important widget\n\t       * specific service instances.\n\t       * Most commonly this is used when working with\n\t       * [LaxarJS Patterns](https://github.com/LaxarJS/laxar-patterns).\n\t       *\n\t       * @name AxContext\n\t       * @constructor\n\t       */\n\t      return {\n\t\n\t         /**\n\t          * The event bus instance of the widget. This is the same as {@link #axEventBus}.\n\t          *\n\t          * @type {AxEventBus}\n\t          * @memberof AxContext\n\t          */\n\t         eventBus: services.axEventBus,\n\t\n\t         /**\n\t          * The configured features of the widget. This is the same as {@link #axFeatures}.\n\t          *\n\t          * @type {Object}\n\t          * @memberof AxContext\n\t          */\n\t         features: services.axFeatures,\n\t\n\t         /**\n\t          * The unique id generator function. This is the same as {@link #axId}.\n\t          *\n\t          * @type {Function}\n\t          * @memberof AxContext\n\t          */\n\t         id: services.axId,\n\t\n\t         /**\n\t          * The widget local log instance. This is the same as {@link #axLog}.\n\t          *\n\t          * @type {AxLog}\n\t          * @memberof AxContext\n\t          */\n\t         log: services.axLog,\n\t\n\t         /**\n\t          * Some information regarding the widget instance.\n\t          *\n\t          * The following fields are available:\n\t          * - `area`: full name of the area the widget is located in\n\t          * - `id`: the unique id of the widget on the page\n\t          * - `path`: path of the widget that was used to reference it in the according page or composition.\n\t          *    This is not the actual path on the file system, but most probably an alias known by the used\n\t          *    module loader.\n\t          *\n\t          * @type {Object}\n\t          * @memberof AxContext\n\t          */\n\t         widget: {\n\t            area: widgetConfiguration.area,\n\t            id: widgetId,\n\t            path: widgetConfiguration.widget\n\t         }\n\t      };\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createAreaHelperForWidget(widgetId) {\n\t      var deregisterFuncs = [];\n\t\n\t      /**\n\t       * @name AxAreaHelper\n\t       * @constructor\n\t       */\n\t      return {\n\t         /**\n\t          * Looks up the global name of a widget area within a widget, as generated by LaxarJS.\n\t          * This is the reverse of {@link #AxAreaHelper.localName()}.\n\t          *\n\t          * @param {String} localAreaName\n\t          *    the widget-local name of the area\n\t          *\n\t          * @return {String}\n\t          *    the globally valid name of the area\n\t          *\n\t          * @memberof AxAreaHelper\n\t          */\n\t         fullName: function fullName(localAreaName) {\n\t            (0, _assert2.default)(localAreaName || null).hasType(String).isNotNull();\n\t            return qualify(localAreaName);\n\t         },\n\t\n\t\n\t         /**\n\t          * Returns the local part of a global area name.\n\t          * This is the reverse of {@link #AxAreaHelper.fullName()}.\n\t          *\n\t          * @param {String} fullAreaName\n\t          *    the global name of the area\n\t          *\n\t          * @return {String}\n\t          *    the name of the area as it is known to the widget\n\t          *\n\t          * @memberof AxAreaHelper\n\t          */\n\t         localName: function localName(fullAreaName) {\n\t            (0, _assert2.default)(fullAreaName).hasType(String).isNotNull();\n\t            return unqualify(fullAreaName);\n\t         },\n\t\n\t\n\t         /**\n\t          * Registers a DOM element as area of a widget with the area helper.\n\t          *\n\t          * @param {String} localAreaName\n\t          *    the widget-local name of the area\n\t          * @param {HTMLElement} element\n\t          *    the element to register as widget area\n\t          *\n\t          * @memberof AxAreaHelper\n\t          */\n\t         register: function register(localAreaName, element) {\n\t            (0, _assert2.default)(localAreaName).hasType(String).isNotNull();\n\t            (0, _assert2.default)(element).hasType(Object).isNotNull();\n\t            var areaHelper = pageService.controller().areaHelper();\n\t            deregisterFuncs.push(areaHelper.register(qualify(localAreaName), element));\n\t         },\n\t         release: function release() {\n\t            deregisterFuncs.forEach(function (_) {\n\t               _();\n\t            });\n\t         }\n\t      };\n\t\n\t      function qualify(localAreaName) {\n\t         return widgetId + '.' + localAreaName;\n\t      }\n\t\n\t      function unqualify(fullAreaName) {\n\t         return fullAreaName.slice(widgetId.length + 1);\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createAssetsServiceForWidget(widgetName) {\n\t      var widgetArtifacts = artifactProvider.forWidget(widgetName);\n\t\n\t      /**\n\t       * _Note:_ This service is a function with the {@link #AxAssets.url()}, {@link #AxAssets.forTheme()} and\n\t       * {@link #AxAssets.urlForTheme()} functions as properties.\n\t       *\n\t       * Resolves an asset located directly in the widget folder or a subfolder of it.\n\t       * Valid assets are all non-binary files like JSON or text files.\n\t       * For binary files there exists the {@link #AxAssets.url} function.\n\t       *\n\t       * Example:\n\t       * ```\n\t       * function Controller( axAssets ) {\n\t       *    axAssets( 'data.json' ).then( fileContent => { ... } );\n\t       * }\n\t       * ```\n\t       *\n\t       * @param {String} name\n\t       *    name of the asset to resolve\n\t       *\n\t       * @return {Promise}\n\t       *    promise for the asset\n\t       *\n\t       * @name AxAssets\n\t       */\n\t      var assetService = function assetService(name) {\n\t         return widgetArtifacts.asset(name);\n\t      };\n\t\n\t      /**\n\t       * Resolves the absolute url to the given asset located directly in the widget folder or a subfolder of\n\t       * it.\n\t       * This can then be safely used in e.g. `video` or `img` tags.\n\t       *\n\t       * Example:\n\t       * ```\n\t       * function Controller( axAssets ) {\n\t       *    axAssets.url( 'tux.jpg' ).then( url => { img.src = url; } );\n\t       * }\n\t       * ```\n\t       *\n\t       * @param  {String} name\n\t       *    name of the asset the url should be returned of\n\t       *\n\t       * @return {Promise}\n\t       *    promise for the url\n\t       *\n\t       * @memberof AxAssets\n\t       */\n\t      assetService.url = function (name) {\n\t         return widgetArtifacts.assetUrl(name);\n\t      };\n\t\n\t      /**\n\t       * Resolves an asset from one of the `*.theme` subfolders of the widget.\n\t       * The folder from which the asset is taken, depends on the selected theme and the availability of the\n\t       * file within that theme (See\n\t       * [here](http://laxarjs.org/docs/laxar-latest/manuals/creating_themes/#how-the-runtime-finds-css) for\n\t       * further information on theme asset lookup).\n\t       * Valid assets are all non-binary files like JSON or text files.\n\t       * For binary files there exists the {@link #AxAssets.urlForTheme} function.\n\t       *\n\t       * Example:\n\t       * ```\n\t       * function Controller( axAssets ) {\n\t       *    axAssets.forTheme( 'some-template.html' ).then( template => { ... } );\n\t       * }\n\t       * ```\n\t       *\n\t       * @param {String} name\n\t       *    name of the asset to resolve\n\t       *\n\t       * @return {Promise}\n\t       *    promise for the asset\n\t       *\n\t       * @memberof AxAssets\n\t       */\n\t      assetService.forTheme = function (name) {\n\t         return widgetArtifacts.assetForTheme(name);\n\t      };\n\t\n\t      /**\n\t       * Resolves the absolute url to the given asset from one of the `*.theme` subfolders of the widget.\n\t       * This can then be safely used in e.g. `video` or `img` tags.\n\t       * The folder from which the asset is taken, depends on the selected theme and the availability of the\n\t       * file within that theme (See\n\t       * [here](http://laxarjs.org/docs/laxar-latest/manuals/creating_themes/#how-the-runtime-finds-css) for\n\t       * further information on theme asset lookup).\n\t       *\n\t       * Example:\n\t       * ```\n\t       * function Controller( axAssets ) {\n\t       *    axAssets.urlForTheme( 'icon.jpg' ).then( url => { img.src = url; } );\n\t       * }\n\t       * ```\n\t       *\n\t       * @param  {String} name\n\t       *    name of the asset the url should be returned of\n\t       *\n\t       * @return {Promise}\n\t       *    promise for the url\n\t       *\n\t       * @memberof AxAssets\n\t       */\n\t      assetService.urlForTheme = function (name) {\n\t         return widgetArtifacts.assetUrlForTheme(name);\n\t      };\n\t      return assetService;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createLoggerForWidget(logger, widgetName, widgetId) {\n\t      var newLogger = Object.create(logger);\n\t      newLogger.log = function (level, message) {\n\t         for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t            rest[_key - 2] = arguments[_key];\n\t         }\n\t\n\t         return logger.log.apply(logger, [level, enrich(message)].concat(rest, [_log.BLACKBOX]));\n\t      };\n\t      Object.keys(logger.levels).map(function (_) {\n\t         return _.toLowerCase();\n\t      }).forEach(function (method) {\n\t         newLogger[method] = function (message) {\n\t            for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t               rest[_key2 - 1] = arguments[_key2];\n\t            }\n\t\n\t            return logger[method].apply(logger, [enrich(message)].concat(rest, [_log.BLACKBOX]));\n\t         };\n\t      });\n\t      return newLogger;\n\t\n\t      function enrich(message) {\n\t         return widgetName + ': ' + message + ' (widget-id: ' + widgetId + ')';\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createStorageForWidget(storage, widgetId) {\n\t      var namespace = 'widget-' + widgetId;\n\t\n\t      /**\n\t       * Ready to use storage API for a single widget instance.\n\t       * All keys are namespaced by the widget id to limit visibility to this specific instance.\n\t       *\n\t       * @name AxStorage\n\t       * @constructor\n\t       */\n\t      return {\n\t         /**\n\t          * An instance of the storage api using the persistent `window.localStorage`.\n\t          *\n\t          * @type {StorageApi}\n\t          * @memberof AxStorage\n\t          */\n\t         local: storage.getLocalStorage(namespace),\n\t\n\t         /**\n\t          * An instance of the storage api using the non-persistent `window.sessionStorage`.\n\t          *\n\t          * @type {StorageApi}\n\t          * @memberof AxStorage\n\t          */\n\t         session: storage.getSessionStorage(namespace)\n\t      };\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createIdGeneratorForWidget(widgetId) {\n\t      var charCodeOfA = 'a'.charCodeAt(0);\n\t      function fixLetter(l) {\n\t         // We map invalid characters deterministically to valid lower case letters. Thereby a collision of\n\t         // two IDs with different invalid characters at the same positions is less likely to occur.\n\t         return String.fromCharCode(charCodeOfA + l.charCodeAt(0) % 26);\n\t      }\n\t\n\t      var prefix = 'ax' + ID_SEPARATOR + widgetId.replace(INVALID_ID_MATCHER, fixLetter) + ID_SEPARATOR;\n\t      return function (localId) {\n\t         return prefix + ('' + localId).replace(INVALID_ID_MATCHER, fixLetter);\n\t      };\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function createEventBusForWidget(eventBus, widgetName, widgetId) {\n\t\n\t      var collaboratorId = 'widget.' + widgetName + '#' + widgetId;\n\t      var inspectorRemoveFunctions = [];\n\t      var unsubscribeFunctions = [];\n\t\n\t      /**\n\t       * This is an extension of the global {@link event_bus#EventBus EventBus} by widget specific information\n\t       * and tasks.\n\t       * For example a combination of the widget's name and its id is always used as subscriber and sender\n\t       * id.\n\t       * Hence for example {@link event_bus#EventBus.publishAndGatherReplies EventBus.publishAndGatherReplies}\n\t       * works without passing in any options.\n\t       *\n\t       * Additionally all subscriptions of a widget are removed as soon as the widget itself is destroyed.\n\t       * So in practice a widget will receive no further events after the `endLifecycleRequest` event\n\t       * processing has finished.\n\t       *\n\t       * The documentation for the events bus api can be found {@linkplain event_bus here}.\n\t       *\n\t       * @name AxEventBus\n\t       * @constructor\n\t       */\n\t      return {\n\t         addInspector: function addInspector(inspector) {\n\t            return makeAutoRemovable(inspectorRemoveFunctions, eventBus.addInspector(inspector));\n\t         },\n\t         unsubscribe: function unsubscribe(subscriber) {\n\t            return eventBus.unsubscribe(subscriber);\n\t         },\n\t         subscribe: function subscribe(eventName, subscriber, optionalOptions) {\n\t            var options = Object.assign({}, optionalOptions, { subscriber: collaboratorId });\n\t            var unsubscribe = eventBus.subscribe(eventName, subscriber, options);\n\t\n\t            return makeAutoRemovable(unsubscribeFunctions, unsubscribe);\n\t         },\n\t         publish: function publish(eventName, optionalEvent, optionalOptions) {\n\t            var options = Object.assign({}, optionalOptions, { sender: collaboratorId });\n\t            return eventBus.publish(eventName, optionalEvent, options);\n\t         },\n\t         publishAndGatherReplies: function publishAndGatherReplies(eventName, optionalEvent, optionalOptions) {\n\t            var options = Object.assign({}, optionalOptions, { sender: collaboratorId });\n\t            return eventBus.publishAndGatherReplies(eventName, optionalEvent, options);\n\t         },\n\t         release: function release() {\n\t            purgeAutoRemoveRegistries(inspectorRemoveFunctions, unsubscribeFunctions);\n\t         }\n\t      };\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function makeAutoRemovable(registry, removeFunction) {\n\t         registry.push(removeFunction);\n\t         return function () {\n\t            removeFunction();\n\t            var index = registry.indexOf(removeFunction);\n\t            if (index !== -1) {\n\t               registry.splice(index, 1);\n\t            }\n\t         };\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function purgeAutoRemoveRegistries() {\n\t         for (var _len3 = arguments.length, registries = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t            registries[_key3] = arguments[_key3];\n\t         }\n\t\n\t         registries.forEach(function (registry) {\n\t            registry.forEach(function (_) {\n\t               _();\n\t            });\n\t            registry.length = 0;\n\t         });\n\t      }\n\t   }\n\t}\n\n/***/ },\n\n/***/ 65:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n\t                                                                                                                                                                                                                                                                               * Copyright 2016 aixigo AG\n\t                                                                                                                                                                                                                                                                               * Released under the MIT license.\n\t                                                                                                                                                                                                                                                                               * http://laxarjs.org/license\n\t                                                                                                                                                                                                                                                                               */\n\t\n\t/**\n\t * Factory for i18n widget service instances.\n\t *\n\t * @module widget_services_i18n\n\t */\n\t\n\t\n\texports.create = create;\n\t\n\tvar _assert = __webpack_require__(26);\n\t\n\tvar _assert2 = _interopRequireDefault(_assert);\n\t\n\tvar _object = __webpack_require__(27);\n\t\n\tvar _string = __webpack_require__(28);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar noDeliveryToSender = { deliverToSender: false };\n\t\n\tvar primitives = {\n\t   string: true,\n\t   number: true,\n\t   boolean: true\n\t};\n\t\n\tvar normalize = memoize(function (languageTag) {\n\t   return languageTag.toLowerCase().replace(/[_]/g, '-');\n\t});\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Creates a widget-specific helper for `didChangeLocale` events.\n\t *\n\t * @param {AxContext} context\n\t *    the widget context/scope that the handler should work with. It uses the `eventBus` property there\n\t *    with which it can do the event handling. The i18n service may be asked to `track` more context\n\t *    properties `i18n`, an object that maps each locale to its current language tag.\n\t * @param {Object} [optionalOptions]\n\t *    the fallback language tag to use when no localization is available for a locale's current language tag\n\t * @param {String} [optionalOptions.fallback]\n\t *    the fallback language tag to use when no localization is available for a locale's current language tag\n\t * @param {Boolean} [optionalOptions.strict]\n\t *    if `true`, localizations are only used if the language tags exactly match the current locale's tag\n\t *    (after normalizing case and dash/underscore). If `false` (default), specific requests can be satisfied\n\t *    by general localizations (e.g. a translation for 'en' may be used when missing 'en_GB' was requested).\n\t *\n\t * @return {AxI18n}\n\t *    an i18n instance\n\t */\n\tfunction create(context) {\n\t   var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t   var features = context.features,\n\t       eventBus = context.eventBus;\n\t   var _optionalOptions$fall = optionalOptions.fallback,\n\t       fallback = _optionalOptions$fall === undefined ? 'en' : _optionalOptions$fall,\n\t       _optionalOptions$stri = optionalOptions.strict,\n\t       strict = _optionalOptions$stri === undefined ? false : _optionalOptions$stri;\n\t\n\t   var handlers = {};\n\t   var tags = {};\n\t   var callbacks = {};\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   var release = eventBus.subscribe('didChangeLocale', handleLocaleChange);\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * An i18n instance allows to create {@link #AxI18nHandler} instances for any feature, but is itself also\n\t    * an i18n handler for the feature `i18n`.\n\t    * So if the widget using the {@link widget_services#axI18n axI18n} injection does use the recommended\n\t    * name `i18n` for the localization feature, use this directly with the i18n handler API.\n\t    *\n\t    * @constructor\n\t    * @name AxI18n\n\t    */\n\t   return Object.assign({\n\t      forFeature: forFeature,\n\t      release: release\n\t   }, forFeature('i18n'));\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Creates and returns an i18n handler for the loclization configuration under the given\n\t    * [feature path](../glossary#feature-path).\n\t    * The value is expected to be an object with the key `locale` that is configured with the locale to use\n\t    * in the widget instance.\n\t    *\n\t    * @param {String} featurePath\n\t    *    the feature path localization configuration can be found at\n\t    *\n\t    * @return {AxI18nHandler}\n\t    *    the i18n handler for the given feature path\n\t    *\n\t    * @memberof AxI18n\n\t    */\n\t   function forFeature(featurePath) {\n\t      (0, _assert2.default)(featurePath).hasType(String).isNotNull();\n\t      if (handlers[featurePath]) {\n\t         return handlers[featurePath];\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * @constructor\n\t       * @name AxI18nHandler\n\t       */\n\t      var api = {\n\t         format: format,\n\t         languageTag: languageTag,\n\t\n\t         /**\n\t          * Localize the given internationalized object using the given languageTag.\n\t          *\n\t          * If i18n is configured to be _strict_, the currently active language tag is used to lookup a\n\t          * translation.\n\t          * If nothing is found, the `languageTag` argument is tried.\n\t          * If still nothing is found, `undefined` is returned.\n\t          *\n\t          * In the case _strict_ is set to `false`, the behavior is the same as in _strict_ mode if an exact\n\t          * localization is available.\n\t          * If not, the language tag is successively generalized by stripping off the rightmost sub-tags\n\t          * until a localization is found.\n\t          * Eventually, a fallback (default: 'en') is used.\n\t          * This behavior is especially useful for controls (such as a datepicker), where we cannot\n\t          * anticipate all required language tags, as they may be app-specific.\n\t          *\n\t          * @param {*} i18nValue\n\t          *    a possibly internationalized value:\n\t          *    - when passing a primitive value, it is returned as-is\n\t          *    - when passing an object, the languageTag is used as a key within that object\n\t          * @param {*} [optionalFallbackValue]\n\t          *    a value to use if no localization is available for the given language tag\n\t          * @param {String} [languageTag]\n\t          *    a language tag to override the current locale tag. Only available in _strict_ mode\n\t          *\n\t          * @return {*}\n\t          *    the localized value if found, the fallback (or `undefined`) otherwise\n\t          *\n\t          * @memberof AxI18nHandler\n\t          * @name localize\n\t          */\n\t         localize: strict ? localizeStrict : localizeRelaxed,\n\t         track: track,\n\t         update: update,\n\t         whenLocaleChanged: whenLocaleChanged\n\t      };\n\t      handlers[featurePath] = api;\n\t      var locale = (0, _object.path)(features, featurePath + '.locale');\n\t      (0, _assert2.default)(locale).hasType(String).isNotNull('axI18n: missing feature-configuration \\'' + featurePath + '.locale\\' (widget: ' + context.widget.id + ')');\n\t      return api;\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Updates the language tag for the configured locale by emitting the according `changeLocaleRequest`\n\t       * event.\n\t       *\n\t       * @param {String} languageTag\n\t       *    the language tag to propagate\n\t       *\n\t       * @return {Promise}\n\t       *    the promise of the event cycle\n\t       *\n\t       * @memberof AxI18nHandler\n\t       */\n\t      function update(languageTag) {\n\t         return eventBus.publishAndGatherReplies('changeLocaleRequest.' + locale, {\n\t            locale: locale,\n\t            languageTag: languageTag\n\t         }, noDeliveryToSender).then(function () {\n\t            tags[locale] = languageTag;\n\t         });\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Returns the language tag set for the configured locale.\n\t       * If no tag is available, `undefined` is returned.\n\t       *\n\t       * @return {String}\n\t       *    the active language tag or `undefined`\n\t       *\n\t       * @memberof AxI18nHandler\n\t       */\n\t      function languageTag() {\n\t         return tags[locale];\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Tracks the current i18n state under the given property.\n\t       * This includes the current locale and the currently valid tag for this locale.\n\t       *\n\t       * @param {Boolean} [enabled=true]\n\t       *    if `true`, tracking is enabled\n\t       * @param {*} [property=featurePath]\n\t       *    name of the context property to store the state at\n\t       *\n\t       * @memberof AxI18nHandler\n\t       */\n\t      function track() {\n\t         var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t         var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : featurePath;\n\t\n\t         if (enabled && property) {\n\t            (0, _object.setPath)(context, property, { locale: locale, tags: tags });\n\t         }\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Format an i18n value, by first localizing it and then applying substitutions.\n\t       *\n\t       * These are equivalent:\n\t       * - `string.format( axI18n.localize( i18nValue ), numericArgs, namedArgs )`\n\t       * - `axI18n.format( i18nValue, numericArgs, namedArgs )`.\n\t       *\n\t       * @param {String} i18nValue\n\t       *    the value to localize and then format\n\t       * @param {Array} [optionalIndexedReplacements]\n\t       *    replacements for any numeric placeholders in the localized value\n\t       * @param {Object} [optionalNamedReplacements]\n\t       *    replacements for any named placeholders in the localized value\n\t       *\n\t       * @return {String}\n\t       *    the formatted string after localization\n\t       *\n\t       * @memberof AxI18nHandler\n\t       */\n\t      function format(i18nValue, optionalIndexedReplacements, optionalNamedReplacements) {\n\t         var formatString = api.localize(i18nValue);\n\t         return formatString && (0, _string.format)(formatString, optionalIndexedReplacements, optionalNamedReplacements);\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      /**\n\t       * Registers a callback that is called whenever the new valid locale was received via event.\n\t       *\n\t       * @param {Function} callback\n\t       *    the function to call on locale change\n\t       *\n\t       * @memberof AxI18nHandler\n\t       */\n\t      function whenLocaleChanged(callback) {\n\t         callbacks[locale] = callbacks[locale] || [];\n\t         callbacks[locale].push(callback);\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function localizeRelaxed(i18nValue, optionalFallbackValue) {\n\t         if (!i18nValue || primitives[typeof i18nValue === 'undefined' ? 'undefined' : _typeof(i18nValue)]) {\n\t            // value is not internationalized\n\t            return i18nValue;\n\t         }\n\t\n\t         var tag = tags[locale];\n\t         var tagParts = tag ? tag.replace(/-/g, '_').split('_') : [];\n\t         while (tagParts.length > 0) {\n\t            var currentLocaleTag = tagParts.join('-');\n\t            var value = localizeStrict(i18nValue, undefined, currentLocaleTag);\n\t            if (value !== undefined) {\n\t               return value;\n\t            }\n\t            tagParts.pop();\n\t         }\n\t\n\t         return fallback ? localizeStrict(i18nValue, optionalFallbackValue, fallback) : optionalFallbackValue;\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function localizeStrict(i18nValue, optionalFallbackValue) {\n\t         var languageTag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : tags[locale];\n\t\n\t         if (!i18nValue || primitives[typeof i18nValue === 'undefined' ? 'undefined' : _typeof(i18nValue)]) {\n\t            // Value is not i18n\n\t            return i18nValue;\n\t         }\n\t         if (!languageTag) {\n\t            return optionalFallbackValue;\n\t         }\n\t\n\t         // Try one direct lookup before scanning the input keys,\n\t         // assuming that language-tags are written in consistent style.\n\t         var value = i18nValue[languageTag];\n\t         if (value !== undefined) {\n\t            return value;\n\t         }\n\t\n\t         var lookupKey = normalize(languageTag);\n\t         var availableTags = Object.keys(i18nValue);\n\t         var n = availableTags.length;\n\t         for (var i = 0; i < n; ++i) {\n\t            var t = availableTags[i];\n\t            if (normalize(t) === lookupKey) {\n\t               return i18nValue[t];\n\t            }\n\t         }\n\t\n\t         return optionalFallbackValue;\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function handleLocaleChange(_ref) {\n\t      var locale = _ref.locale,\n\t          languageTag = _ref.languageTag;\n\t\n\t      var newTag = normalize(languageTag);\n\t      if (newTag === tags[locale]) {\n\t         return;\n\t      }\n\t      tags[locale] = newTag;\n\t      callbacks[locale] = callbacks[locale] || [];\n\t      callbacks[locale].forEach(function (f) {\n\t         f(languageTag);\n\t      });\n\t   }\n\t}\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction memoize(f) {\n\t   var cache = {};\n\t   return function (key) {\n\t      var value = cache[key];\n\t      if (value === undefined) {\n\t         value = f(key);\n\t         cache[key] = value;\n\t      }\n\t      return value;\n\t   };\n\t}\n\n/***/ },\n\n/***/ 66:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.create = create;\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t\n\t/**\n\t * Factory for i18n widget service instances.\n\t *\n\t * @module widget_services_visibility\n\t */\n\t\n\t// <-- temporary guard until https://github.com/LaxarJS/laxar-dox/issues/21 is fixed\n\tvar noDeliveryToSender = { deliverToSender: false };\n\tvar noOp = function noOp() {};\n\t\n\t/**\n\t * Creates a widget-specific helper for `didChangeAreaVisibility` events.\n\t *\n\t * @param {AxContext} context\n\t *    the widget context/scope that the handler should work with. It uses the `eventBus` property there\n\t *    with which it can do the event handling. The visibility handler will set the boolean context property\n\t *    `isVisible` which can be used to determine the visibility state of the entire widget, e.g. for use in\n\t *    templates.\n\t *\n\t * @param {AxAreaHelper} areaHelper\n\t *    an area helper to qualify/unqualify names for this widget's areas\n\t *\n\t * @return {AxVisibility}\n\t *    a visibility handler instance\n\t */\n\tfunction create(context, areaHelper) {\n\t\n\t   /**\n\t    *\n\t    *\n\t    * @constructor\n\t    * @name AxVisibility\n\t    */\n\t   var api = {\n\t      onChange: onChange,\n\t      onHide: onHide,\n\t      onShow: onShow,\n\t      release: release,\n\t      track: track,\n\t      unsubscribe: unsubscribe,\n\t      updateAreaVisibility: updateAreaVisibility,\n\t      updateWidgetVisibility: updateWidgetVisibility\n\t   };\n\t\n\t   var eventBus = context.eventBus;\n\t\n\t   // reading the widget visibility\n\t\n\t   var isVisible = false;\n\t   var trackingProperty = void 0;\n\t   var showListeners = [];\n\t   var hideListeners = [];\n\t   var unsubscribeToChanges = noOp;\n\t\n\t   // controlling the visibility of the widget and its areas\n\t   var visibilityByArea = {};\n\t   var overrideByArea = {};\n\t   var unsubscribeToAreaRequests = noOp;\n\t\n\t   return api;\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Registers a callback to be run when this widget becomes hidden.\n\t    *\n\t    * @param {Function} callback\n\t    *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating\n\t    *    the new visibility state (`false`). The callback will *not* be invoked for the start value (`false`).\n\t    *\n\t    * @return {AxVisibility}\n\t    *    this instance for chaining\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function onHide(callback) {\n\t      hideListeners.push(callback);\n\t      updateChangeSubscription();\n\t      return api;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Registers a callback to be run when this widget becomes visbile.\n\t    *\n\t    * @param {Function} callback\n\t    *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating\n\t    *    the new visibility state (`true`).\n\t    *\n\t    * @return {AxVisibility}\n\t    *    this instance for chaining\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function onShow(callback) {\n\t      showListeners.push(callback);\n\t      updateChangeSubscription();\n\t      return api;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Registers a callback for changes to this widget's visibility.\n\t    *\n\t    * @param {Function} callback\n\t    *    a callback to be invoked whenever the widget visibility changes, with a boolean argument indicating\n\t    *    the new visibility state. The callback will *not* be invoked for the start value (`false`).\n\t    *\n\t    * @return {AxVisibility}\n\t    *    this instance for chaining\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function onChange(callback) {\n\t      showListeners.push(callback);\n\t      hideListeners.push(callback);\n\t      updateChangeSubscription();\n\t      return api;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Starts tracking visibility as a property on the context.\n\t    *\n\t    * @param {Boolean} enabled\n\t    *    If `true` (default) an event bus subscription will be maintained to track visibility changes of the\n\t    *    current widget by updating a managed property on the context. If `false`, any existing subscription\n\t    *    will be cancelled. If set, the context property will *not* be removed.\n\t    * @param {String} property\n\t    *    The name of the context property to maintain. Changing the property name after tracking has started\n\t    *    once will not remove previously created properties.\n\t    *\n\t    * @return {AxVisibility}\n\t    *    this instance for chaining\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function track() {\n\t      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t      var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'isVisible';\n\t\n\t      trackingProperty = enabled ? property : null;\n\t      if (enabled) {\n\t         context[trackingProperty] = isVisible;\n\t      }\n\t      updateChangeSubscription();\n\t      return api;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Triggers a visibility change to the given area. The visibility of the area and its nested areas is\n\t    * re-evaluated over the event bus. Use this to implement e.g. tabbing/accordion/expander widgets.\n\t    *\n\t    * @param {Object} visibilityByLocalArea\n\t    *   A mapping of local area names (without the widget ID) to their new visibility state (Boolean).\n\t    *   Areas that are omitted here are left as is. Areas that have not been set at all just assume the\n\t    *   visibility state of the containing area.\n\t    * @param {Object} [optionalOptions]\n\t    *   Additional options\n\t    * @param {Object} [optionalOptions.overrideContainer]\n\t    *   Allows the specified areas to become visible even if the widget's container area is not visible.\n\t    *\n\t    * @return {Promise}\n\t    *    a promise that is resolved (without a value) when the visibility change was applied\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function updateAreaVisibility(visibilityByLocalArea) {\n\t      var optionalOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t      var _optionalOptions$over = optionalOptions.overrideContainer,\n\t          overrideContainer = _optionalOptions$over === undefined ? false : _optionalOptions$over;\n\t\n\t\n\t      if (unsubscribeToAreaRequests === noOp) {\n\t         var requestEvent = 'changeAreaVisibilityRequest.' + context.widget.id;\n\t         unsubscribeToAreaRequests = eventBus.subscribe(requestEvent, responder(isAreaVisible));\n\t      }\n\t\n\t      var promises = Object.keys(visibilityByLocalArea).map(function (name) {\n\t         var oldVisible = visibilityByArea[name];\n\t         var oldOverride = overrideByArea[name];\n\t         var visible = visibilityByArea[name] = visibilityByLocalArea[name];\n\t         if (overrideContainer) {\n\t            overrideByArea[name] = overrideContainer;\n\t         } else if (oldOverride) {\n\t            delete overrideByArea[name];\n\t         }\n\t         if (oldVisible !== visible || oldOverride !== overrideByArea[name]) {\n\t            var area = areaHelper.fullName(name);\n\t            var eventName = 'changeAreaVisibilityRequest.' + area + '.' + visible;\n\t            return eventBus.publishAndGatherReplies(eventName, { area: area, visible: visible }, noDeliveryToSender);\n\t         }\n\t         return Promise.resolve();\n\t      });\n\t\n\t      return Promise.all(promises).then(noOp);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /* @private helper for updateAreaVisibility */\n\t   function isAreaVisible(localAreaName, containerVisible) {\n\t      var areaVisible = visibilityByArea[localAreaName];\n\t      if (areaVisible === undefined) {\n\t         return containerVisible;\n\t      }\n\t      return areaVisible && (containerVisible || overrideByArea[localAreaName]);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Triggers a visibility change the widget itself and all its areas, always overriding its container\n\t    * visibility with the given value.\n\t    * This simplifies implementing popup/popover/layer widgets, which always live in an invisible container\n\t    * area, but need to show/hide all their owned areas.\n\t    *\n\t    * To control the visibility of individual areas, use #updateAreaVisibility\n\t    *\n\t    * @param {Boolean} visible\n\t    *   The new visibility state of the widget.\n\t    *\n\t    * @return {AxVisibility}\n\t    *    this instance for chaining\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function updateWidgetVisibility(visible) {\n\t      var widget = context.widget.id;\n\t      var eventName = 'changeWidgetVisibilityRequest.' + widget + '.' + visible;\n\t      return eventBus.publishAndGatherReplies(eventName, { widget: widget, visible: visible }, noDeliveryToSender);\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Remove the given callback (registered through one or more of the on... methods) from any subscriptions.\n\t    *\n\t    * @param {Function} callback\n\t    *    a callback that was previously registered using any of the `on...` methods.\n\t    *    It will be removed from all registrations. Passing an unknown callback has no effect.\n\t    *\n\t    * @return {AxVisibility}\n\t    *    this instance for chaining\n\t    *\n\t    * @memberof AxVisibility\n\t    */\n\t   function unsubscribe(callback) {\n\t      [showListeners, hideListeners].forEach(remove);\n\t\n\t      function remove(array) {\n\t         var index = array.indexOf(callback);\n\t         if (index === -1) {\n\t            return;\n\t         }\n\t         array.splice(index, 1);\n\t         remove(array);\n\t      }\n\t      return api;\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function release() {\n\t      unsubscribeToAreaRequests();\n\t      unsubscribeToChanges();\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function updateChangeSubscription() {\n\t      var needsSubscription = trackingProperty || showListeners.length + hideListeners.length;\n\t      if (needsSubscription && unsubscribeToChanges === noOp) {\n\t         unsubscribeToChanges = eventBus.subscribe('didChangeAreaVisibility.' + context.widget.area, function (_ref) {\n\t            var visible = _ref.visible;\n\t\n\t            if (visible === isVisible) {\n\t               return;\n\t            }\n\t            isVisible = visible;\n\t            if (trackingProperty) {\n\t               context[trackingProperty] = visible;\n\t            }\n\t            (visible ? showListeners : hideListeners).forEach(function (f) {\n\t               return f(visible);\n\t            });\n\t         });\n\t      } else if (unsubscribeToChanges && !needsSubscription) {\n\t         unsubscribeToChanges();\n\t         unsubscribeToChanges = noOp;\n\t      }\n\t   }\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   function responder(callback) {\n\t      return function (_ref2) {\n\t         var area = _ref2.area,\n\t             containerVisible = _ref2.visible;\n\t\n\t         var visible = callback(areaHelper.localName(area), containerVisible);\n\t         if (visible === true || visible === false) {\n\t            var didEvent = 'didChangeAreaVisibility.' + area + '.' + visible;\n\t            eventBus.publish(didEvent, { area: area, visible: visible }, noDeliveryToSender);\n\t         }\n\t      };\n\t   }\n\t}\n\n/***/ },\n\n/***/ 67:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\texports.createCollectors = createCollectors;\n\texports.createProviders = createProviders;\n\t\n\tvar _pages = __webpack_require__(49);\n\t\n\t// eslint-disable-next-line valid-jsdoc\n\t/** Collects inspection data from laxarjs services */\n\tfunction createCollectors(configuration, log) {\n\t   return {\n\t      pages: (0, _pages.createCollector)(configuration, log)\n\t   };\n\t}\n\t\n\t// eslint-disable-next-line valid-jsdoc\n\t/** Exposes inspection data from laxarjs services to development tools */\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Accepts and keeps laxarjs application data from various laxarjs services, and makes it available to\n\t * development tools.\n\t *\n\t * This module has an internal API (the `collectors`-service), and an external API (the `providers` service).\n\t * The collectors service is fed data by the other laxarjs services, while the provider allows external\n\t * listeners to subscribe to that data's changes, or to retrieve snapshots of it.\n\t */\n\t\n\tfunction createProviders(collectors) {\n\t   return {\n\t      pages: (0, _pages.createProvider)(collectors.pages)\n\t   };\n\t}\n\n/***/ },\n\n/***/ 68:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.bootstrap = bootstrap;\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Copyright 2016 aixigo AG\n\t * Released under the MIT license.\n\t * http://laxarjs.org/license\n\t */\n\t/**\n\t * Module for the plain widget adapter factory.\n\t * In LaxarJS _plain_ widgets are defined as widgets without dependency to a specific view library or\n\t * framwork, and instead would be implemented using simple DOM access and manipulation.\n\t *\n\t * A developer will never call any of the API of this module.\n\t * The documentation solely exists as a blueprint for custom widget adapters and to explain certain concepts.\n\t *\n\t * @module plain_adapter\n\t */\n\t\n\tvar technology = exports.technology = 'plain';\n\t\n\tvar noOp = function noOp() {};\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Initializes the adapter module and returns a factory for plain widgets.\n\t * Note that the plain adapter doesn't need all the provided arguments, but they are listed here for\n\t * documentation purposes.\n\t *\n\t * @param {Object} artifacts\n\t *    the artifacts available to this adapter factory\n\t * @param {Object} artifacts.widgets\n\t *    all widgets, that are implemented in the adapter's technology\n\t * @param {Object} artifacts.controls\n\t *    all controls, that are implemented in the adapter's technology\n\t * @param {Object} services\n\t *    a selection of services adapter implementations may need to fulfill their task\n\t * @param {AdapterUtilities} services.adapterUtilities\n\t *    common utilities, that may be useful to a widget adapter\n\t * @param {ArtifactProvider} services.artifactProvider\n\t *    the artifact provider instance\n\t * @param {Configuration} services.configuration\n\t *    access to the application configuration\n\t * @param {EventBus} services.globalEventBus\n\t *    the global event bus.\n\t *    Note that an adapter should not sent any events by itself.\n\t *    It may instead be necessary that the adapter makes the event bus globally available to its widgets (for\n\t *    example like the AngularJS 1.x adapter), or that it registers an inspector\n\t * @param {Heartbeat} services.heartbeat\n\t *    the heartbeat instance.\n\t *    Depending on the underlying view technology (like AngularJS 1.x) it may be important to get notified\n\t *    when to re-render the user interface.\n\t *    For that reason an adapter can register a callback at the heartbeat, that gets called after all events\n\t *    of the current cycle were processed\n\t * @param {Log} services.log\n\t *    the global log instance\n\t * @param {StorageFactory} services.storage\n\t *    the global storage factory api\n\t * @param {Tooling} services.tooling\n\t *    access to the tooling api\n\t * @param {HTMLElement} anchorElement\n\t *    the DOM node the laxar application is bootstrapped on.\n\t *    An adapter should never try to access DOM nodes that are not the `anchorElement` or any of its children,\n\t *    since they are not under control of this LaxarJS application.\n\t *\n\t * @return {PlainAdapterFactory}\n\t *    the factory for plain widget adapters\n\t */\n\tfunction bootstrap(artifacts, _ref) {\n\t   var widgetLoader = _ref.widgetLoader,\n\t       artifactProvider = _ref.artifactProvider;\n\t   var adapterErrors = widgetLoader.adapterErrors;\n\t\n\t   /**\n\t    * A factory for plain widget adapters.\n\t    *\n\t    * @constructor\n\t    * @name PlainAdapterFactory\n\t    */\n\t\n\t   return {\n\t      create: create\n\t   };\n\t\n\t   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t   /**\n\t    * Creates a new adapter instance for the given widget environment.\n\t    *\n\t    * @param {Object} environment\n\t    *    the environment for the widget to create and manage\n\t    * @param {HTMLElement} environment.anchorElement\n\t    *    the DOM node that the widget's DOM fragment should be inserted into\n\t    * @param {String} environment.name\n\t    *    the name of the widget to load, exactly as specified by the widget descriptor\n\t    * @param {widget_services} environment.services\n\t    *    the services for this widget instance\n\t    * @param {Function} environment.onBeforeControllerCreation\n\t    *    a function that the adapter must call with a map of all to-be-injected services, just before\n\t    *    creating the controller\n\t    *\n\t    * @return {Object}\n\t    *    the adapter instance\n\t    *\n\t    * @memberof PlainAdapterFactory\n\t    */\n\t   function create(_ref2) {\n\t      var widgetName = _ref2.widgetName,\n\t          anchorElement = _ref2.anchorElement,\n\t          services = _ref2.services,\n\t          onBeforeControllerCreation = _ref2.onBeforeControllerCreation;\n\t\n\t\n\t      var onDomAvailable = null;\n\t      var domAttached = false;\n\t\n\t      var provider = artifactProvider.forWidget(widgetName);\n\t\n\t      return Promise.all([provider.descriptor(), provider.module()]).then(createController, function () {\n\t         return adapterErrors.unknownWidget({ technology: technology, widgetName: widgetName });\n\t      }).then(function () {\n\t         return {\n\t            domAttachTo: domAttachTo,\n\t            domDetach: domDetach\n\t         };\n\t      });\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function createController(_ref3) {\n\t         var _ref4 = _slicedToArray(_ref3, 2),\n\t             descriptor = _ref4[0],\n\t             module = _ref4[1];\n\t\n\t         services.axWithDom = function (callback) {\n\t            if (domAttached) {\n\t               callback(anchorElement);\n\t            }\n\t         };\n\t         var injections = (module.injections || []).map(function (injection) {\n\t            if (!(injection in services)) {\n\t               throw adapterErrors.unknownInjection({ technology: technology, injection: injection, widgetName: widgetName });\n\t            }\n\t            if (injection === 'axWithDom' && descriptor.integration.type === 'activity') {\n\t               throw adapterErrors.activityAccessingDom({ technology: technology, injection: injection, widgetName: widgetName });\n\t            }\n\t            return services[injection];\n\t         });\n\t\n\t         onBeforeControllerCreation(services);\n\t\n\t         var _ref5 = module.create.apply(module, _toConsumableArray(injections)) || {};\n\t\n\t         var _ref5$onDomAvailable = _ref5.onDomAvailable;\n\t         onDomAvailable = _ref5$onDomAvailable === undefined ? noOp : _ref5$onDomAvailable;\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function domAttachTo(areaElement, htmlTemplate) {\n\t         if (htmlTemplate === null) {\n\t            return;\n\t         }\n\t         anchorElement.innerHTML = htmlTemplate;\n\t         areaElement.appendChild(anchorElement);\n\t         domAttached = true;\n\t         onDomAvailable(anchorElement);\n\t      }\n\t\n\t      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\t      function domDetach() {\n\t         var parent = anchorElement.parentNode;\n\t         if (parent) {\n\t            parent.removeChild(anchorElement);\n\t         }\n\t         domAttached = false;\n\t      }\n\t   }\n\t}\n\n/***/ },\n\n/***/ 281:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(282);\n\t\n\t__webpack_require__(285);\n\t\n\t__webpack_require__(286);\n\t\n\t__webpack_require__(287);\n\t\n\t__webpack_require__(288);\n\n/***/ },\n\n/***/ 282:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};(function (root) {\n\t\n\t  // Store setTimeout reference so promise-polyfill will be unaffected by\n\t  // other code modifying setTimeout (like sinon.useFakeTimers())\n\t  var setTimeoutFunc = setTimeout;\n\t\n\t  function noop() {}\n\t\n\t  // Polyfill for Function.prototype.bind\n\t  function bind(fn, thisArg) {\n\t    return function () {\n\t      fn.apply(thisArg, arguments);\n\t    };\n\t  }\n\t\n\t  function Promise(fn) {\n\t    if (_typeof(this) !== 'object') throw new TypeError('Promises must be constructed via new');\n\t    if (typeof fn !== 'function') throw new TypeError('not a function');\n\t    this._state = 0;\n\t    this._handled = false;\n\t    this._value = undefined;\n\t    this._deferreds = [];\n\t\n\t    doResolve(fn, this);\n\t  }\n\t\n\t  function handle(self, deferred) {\n\t    while (self._state === 3) {\n\t      self = self._value;\n\t    }\n\t    if (self._state === 0) {\n\t      self._deferreds.push(deferred);\n\t      return;\n\t    }\n\t    self._handled = true;\n\t    Promise._immediateFn(function () {\n\t      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t      if (cb === null) {\n\t        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t        return;\n\t      }\n\t      var ret;\n\t      try {\n\t        ret = cb(self._value);\n\t      } catch (e) {\n\t        reject(deferred.promise, e);\n\t        return;\n\t      }\n\t      resolve(deferred.promise, ret);\n\t    });\n\t  }\n\t\n\t  function resolve(self, newValue) {\n\t    try {\n\t      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\t      if (newValue && ((typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) === 'object' || typeof newValue === 'function')) {\n\t        var then = newValue.then;\n\t        if (newValue instanceof Promise) {\n\t          self._state = 3;\n\t          self._value = newValue;\n\t          finale(self);\n\t          return;\n\t        } else if (typeof then === 'function') {\n\t          doResolve(bind(then, newValue), self);\n\t          return;\n\t        }\n\t      }\n\t      self._state = 1;\n\t      self._value = newValue;\n\t      finale(self);\n\t    } catch (e) {\n\t      reject(self, e);\n\t    }\n\t  }\n\t\n\t  function reject(self, newValue) {\n\t    self._state = 2;\n\t    self._value = newValue;\n\t    finale(self);\n\t  }\n\t\n\t  function finale(self) {\n\t    if (self._state === 2 && self._deferreds.length === 0) {\n\t      Promise._immediateFn(function () {\n\t        if (!self._handled) {\n\t          Promise._unhandledRejectionFn(self._value);\n\t        }\n\t      });\n\t    }\n\t\n\t    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t      handle(self, self._deferreds[i]);\n\t    }\n\t    self._deferreds = null;\n\t  }\n\t\n\t  function Handler(onFulfilled, onRejected, promise) {\n\t    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t    this.promise = promise;\n\t  }\n\t\n\t  /**\n\t     * Take a potentially misbehaving resolver function and make sure\n\t     * onFulfilled and onRejected are only called once.\n\t     *\n\t     * Makes no guarantees about asynchrony.\n\t     */\n\t  function doResolve(fn, self) {\n\t    var done = false;\n\t    try {\n\t      fn(function (value) {\n\t        if (done) return;\n\t        done = true;\n\t        resolve(self, value);\n\t      }, function (reason) {\n\t        if (done) return;\n\t        done = true;\n\t        reject(self, reason);\n\t      });\n\t    } catch (ex) {\n\t      if (done) return;\n\t      done = true;\n\t      reject(self, ex);\n\t    }\n\t  }\n\t\n\t  Promise.prototype['catch'] = function (onRejected) {\n\t    return this.then(null, onRejected);\n\t  };\n\t\n\t  Promise.prototype.then = function (onFulfilled, onRejected) {\n\t    var prom = new this.constructor(noop);\n\t\n\t    handle(this, new Handler(onFulfilled, onRejected, prom));\n\t    return prom;\n\t  };\n\t\n\t  Promise.all = function (arr) {\n\t    var args = Array.prototype.slice.call(arr);\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      if (args.length === 0) return resolve([]);\n\t      var remaining = args.length;\n\t\n\t      function res(i, val) {\n\t        try {\n\t          if (val && ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' || typeof val === 'function')) {\n\t            var then = val.then;\n\t            if (typeof then === 'function') {\n\t              then.call(val, function (val) {\n\t                res(i, val);\n\t              }, reject);\n\t              return;\n\t            }\n\t          }\n\t          args[i] = val;\n\t          if (--remaining === 0) {\n\t            resolve(args);\n\t          }\n\t        } catch (ex) {\n\t          reject(ex);\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < args.length; i++) {\n\t        res(i, args[i]);\n\t      }\n\t    });\n\t  };\n\t\n\t  Promise.resolve = function (value) {\n\t    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.constructor === Promise) {\n\t      return value;\n\t    }\n\t\n\t    return new Promise(function (resolve) {\n\t      resolve(value);\n\t    });\n\t  };\n\t\n\t  Promise.reject = function (value) {\n\t    return new Promise(function (resolve, reject) {\n\t      reject(value);\n\t    });\n\t  };\n\t\n\t  Promise.race = function (values) {\n\t    return new Promise(function (resolve, reject) {\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        values[i].then(resolve, reject);\n\t      }\n\t    });\n\t  };\n\t\n\t  // Use polyfill for setImmediate for performance gains\n\t  Promise._immediateFn = typeof setImmediate === 'function' && function (fn) {setImmediate(fn);} ||\n\t  function (fn) {\n\t    setTimeoutFunc(fn, 0);\n\t  };\n\t\n\t  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t    if (typeof console !== 'undefined' && console) {\n\t      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t    }\n\t  };\n\t\n\t  /**\n\t      * Set the immediate function to execute callbacks\n\t      * @param fn {function} Function to execute\n\t      * @deprecated\n\t      */\n\t  Promise._setImmediateFn = function _setImmediateFn(fn) {\n\t    Promise._immediateFn = fn;\n\t  };\n\t\n\t  /**\n\t      * Change the function to execute on unhandled rejection\n\t      * @param {function} fn Function to execute on unhandled rejection\n\t      * @deprecated\n\t      */\n\t  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n\t    Promise._unhandledRejectionFn = fn;\n\t  };\n\t\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = Promise;\n\t  } else if (!root.Promise) {\n\t    root.Promise = Promise;\n\t  }\n\t\n\t})(undefined);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(283).setImmediate))\n\n/***/ },\n\n/***/ 283:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";var apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function () {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function () {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function (timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\tTimeout.prototype.close = function () {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function (item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function (item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function (item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t      item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(284);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n/***/ },\n\n/***/ 284:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {\"use strict\";(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t        // Callback can either be a function or a string\n\t        if (typeof callback !== \"function\") {\n\t            callback = new Function(\"\" + callback);\n\t        }\n\t        // Copy function arguments\n\t        var args = new Array(arguments.length - 1);\n\t        for (var i = 0; i < args.length; i++) {\n\t            args[i] = arguments[i + 1];\n\t        }\n\t        // Store and register the task\n\t        var task = { callback: callback, args: args };\n\t        tasksByHandle[nextHandle] = task;\n\t        registerImmediate(nextHandle);\n\t        return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t            case 0:\n\t                callback();\n\t                break;\n\t            case 1:\n\t                callback(args[0]);\n\t                break;\n\t            case 2:\n\t                callback(args[0], args[1]);\n\t                break;\n\t            case 3:\n\t                callback(args[0], args[1], args[2]);\n\t                break;\n\t            default:\n\t                callback.apply(undefined, args);\n\t                break;}\n\t\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function registerImmediate(handle) {\n\t            process.nextTick(function () {runIfPresent(handle);});\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function () {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function onGlobalMessage(event) {\n\t            if (event.source === global &&\n\t            typeof event.data === \"string\" &&\n\t            event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function registerImmediate(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function (event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function registerImmediate(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function registerImmediate(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function registerImmediate(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? undefined : global : self);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(31)))\n\n/***/ },\n\n/***/ 285:\n/***/ function(module, exports) {\n\n\t'use strict';(function (self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return;\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && function () {\n\t      try {\n\t        new Blob();\n\t        return true;\n\t      } catch (e) {\n\t        return false;\n\t      }\n\t    }(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self };\n\t\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t    '[object Int8Array]',\n\t    '[object Uint8Array]',\n\t    '[object Uint8ClampedArray]',\n\t    '[object Int16Array]',\n\t    '[object Uint16Array]',\n\t    '[object Int32Array]',\n\t    '[object Uint32Array]',\n\t    '[object Float32Array]',\n\t    '[object Float64Array]'];\n\t\n\t\n\t    var isDataView = function isDataView(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj);\n\t    };\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n\t    };\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name);\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name');\n\t    }\n\t    return name.toLowerCase();\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value);\n\t    }\n\t    return value;\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function next() {\n\t        var value = items.shift();\n\t        return { done: value === undefined, value: value };\n\t      } };\n\t\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function () {\n\t        return iterator;\n\t      };\n\t    }\n\t\n\t    return iterator;\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {};\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function (value, name) {\n\t        this.append(name, value);\n\t      }, this);\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function (name) {\n\t        this.append(name, headers[name]);\n\t      }, this);\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function (name, value) {\n\t    name = normalizeName(name);\n\t    value = normalizeValue(value);\n\t    var oldValue = this.map[name];\n\t    this.map[name] = oldValue ? oldValue + ',' + value : value;\n\t  };\n\t\n\t  Headers.prototype['delete'] = function (name) {\n\t    delete this.map[normalizeName(name)];\n\t  };\n\t\n\t  Headers.prototype.get = function (name) {\n\t    name = normalizeName(name);\n\t    return this.has(name) ? this.map[name] : null;\n\t  };\n\t\n\t  Headers.prototype.has = function (name) {\n\t    return this.map.hasOwnProperty(normalizeName(name));\n\t  };\n\t\n\t  Headers.prototype.set = function (name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value);\n\t  };\n\t\n\t  Headers.prototype.forEach = function (callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this);\n\t      }\n\t    }\n\t  };\n\t\n\t  Headers.prototype.keys = function () {\n\t    var items = [];\n\t    this.forEach(function (value, name) {items.push(name);});\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  Headers.prototype.values = function () {\n\t    var items = [];\n\t    this.forEach(function (value) {items.push(value);});\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  Headers.prototype.entries = function () {\n\t    var items = [];\n\t    this.forEach(function (value, name) {items.push([name, value]);});\n\t    return iteratorFor(items);\n\t  };\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'));\n\t    }\n\t    body.bodyUsed = true;\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function (resolve, reject) {\n\t      reader.onload = function () {\n\t        resolve(reader.result);\n\t      };\n\t      reader.onerror = function () {\n\t        reject(reader.error);\n\t      };\n\t    });\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader();\n\t    var promise = fileReaderReady(reader);\n\t    reader.readAsArrayBuffer(blob);\n\t    return promise;\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader();\n\t    var promise = fileReaderReady(reader);\n\t    reader.readAsText(blob);\n\t    return promise;\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf);\n\t    var chars = new Array(view.length);\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i]);\n\t    }\n\t    return chars.join('');\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0);\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength);\n\t      view.set(new Uint8Array(buf));\n\t      return view.buffer;\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false;\n\t\n\t    this._initBody = function (body) {\n\t      this._bodyInit = body;\n\t      if (!body) {\n\t        this._bodyText = '';\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body;\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body;\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body;\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString();\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer);\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body);\n\t      } else {\n\t        throw new Error('unsupported BodyInit type');\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type);\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t        }\n\t      }\n\t    };\n\t\n\t    if (support.blob) {\n\t      this.blob = function () {\n\t        var rejected = consumed(this);\n\t        if (rejected) {\n\t          return rejected;\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob);\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob');\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]));\n\t        }\n\t      };\n\t\n\t      this.arrayBuffer = function () {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer);\n\t        }\n\t      };\n\t    }\n\t\n\t    this.text = function () {\n\t      var rejected = consumed(this);\n\t      if (rejected) {\n\t        return rejected;\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob);\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text');\n\t      } else {\n\t        return Promise.resolve(this._bodyText);\n\t      }\n\t    };\n\t\n\t    if (support.formData) {\n\t      this.formData = function () {\n\t        return this.text().then(decode);\n\t      };\n\t    }\n\t\n\t    this.json = function () {\n\t      return this.text().then(JSON.parse);\n\t    };\n\t\n\t    return this;\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase();\n\t    return methods.indexOf(upcased) > -1 ? upcased : method;\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {};\n\t    var body = options.body;\n\t\n\t    if (typeof input === 'string') {\n\t      this.url = input;\n\t    } else {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read');\n\t      }\n\t      this.url = input.url;\n\t      this.credentials = input.credentials;\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers);\n\t      }\n\t      this.method = input.method;\n\t      this.mode = input.mode;\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit;\n\t        input.bodyUsed = true;\n\t      }\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit';\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers);\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET');\n\t    this.mode = options.mode || this.mode || null;\n\t    this.referrer = null;\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests');\n\t    }\n\t    this._initBody(body);\n\t  }\n\t\n\t  Request.prototype.clone = function () {\n\t    return new Request(this, { body: this._bodyInit });\n\t  };\n\t\n\t  function decode(body) {\n\t    var form = new FormData();\n\t    body.trim().split('&').forEach(function (bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=');\n\t        var name = split.shift().replace(/\\+/g, ' ');\n\t        var value = split.join('=').replace(/\\+/g, ' ');\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value));\n\t      }\n\t    });\n\t    return form;\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers();\n\t    rawHeaders.split('\\r\\n').forEach(function (line) {\n\t      var parts = line.split(':');\n\t      var key = parts.shift().trim();\n\t      if (key) {\n\t        var value = parts.join(':').trim();\n\t        headers.append(key, value);\n\t      }\n\t    });\n\t    return headers;\n\t  }\n\t\n\t  Body.call(Request.prototype);\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {};\n\t    }\n\t\n\t    this.type = 'default';\n\t    this.status = 'status' in options ? options.status : 200;\n\t    this.ok = this.status >= 200 && this.status < 300;\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n\t    this.headers = new Headers(options.headers);\n\t    this.url = options.url || '';\n\t    this._initBody(bodyInit);\n\t  }\n\t\n\t  Body.call(Response.prototype);\n\t\n\t  Response.prototype.clone = function () {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url });\n\t\n\t  };\n\t\n\t  Response.error = function () {\n\t    var response = new Response(null, { status: 0, statusText: '' });\n\t    response.type = 'error';\n\t    return response;\n\t  };\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308];\n\t\n\t  Response.redirect = function (url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code');\n\t    }\n\t\n\t    return new Response(null, { status: status, headers: { location: url } });\n\t  };\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function (input, init) {\n\t    return new Promise(function (resolve, reject) {\n\t      var request = new Request(input, init);\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      xhr.onload = function () {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '') };\n\t\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options));\n\t      };\n\t\n\t      xhr.onerror = function () {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.ontimeout = function () {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.open(request.method, request.url, true);\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true;\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob';\n\t      }\n\t\n\t      request.headers.forEach(function (value, name) {\n\t        xhr.setRequestHeader(name, value);\n\t      });\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n\t    });\n\t  };\n\t  self.fetch.polyfill = true;\n\t})(typeof self !== 'undefined' ? self : undefined);\n\n/***/ },\n\n/***/ 286:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/* eslint-disable prefer-rest-params */\n\t// Polyfill based on:\n\t// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from\n\t// Production steps of ECMA-262, Edition 6, 22.1.2.1\n\tif (!Array.from) {\n\t   (function () {\n\t      var toStr = Object.prototype.toString;\n\t      var isCallable = function isCallable(fn) {\n\t         return typeof fn === 'function' || toStr.call(fn) === '[ object Function ]';\n\t      };\n\t      var toInteger = function toInteger(value) {\n\t         var number = Number(value);\n\t         if (isNaN(number)) {\n\t            return 0;\n\t         }\n\t         if (number === 0 || !isFinite(number)) {\n\t            return number;\n\t         }\n\t         return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n\t      };\n\t      var maxSafeInteger = Math.pow(2, 53) - 1;\n\t      var toLength = function toLength(value) {\n\t         var len = toInteger(value);\n\t         return Math.min(Math.max(len, 0), maxSafeInteger);\n\t      };\n\t\n\t      // The length property of the from method is 1.\n\t      Array.from = function from(arrayLike /*, mapFn, thisArg */) {\n\t         // 1. Let C be the this value.\n\t         var C = this;\n\t\n\t         // 2. Let items be ToObject(arrayLike).\n\t         var items = Object(arrayLike);\n\t\n\t         // 3. ReturnIfAbrupt(items).\n\t         if (arrayLike == null) {\n\t            throw new TypeError('Array.from requires an array-like object - not null or undefined');\n\t         }\n\t\n\t         // 4. If mapfn is undefined, then let mapping be false.\n\t         // eslint-disable-next-line no-void\n\t         var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\t         var T = void 0;\n\t         if (typeof mapFn !== 'undefined') {\n\t            // 5. else\n\t            // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n\t            if (!isCallable(mapFn)) {\n\t               throw new TypeError('Array.from: when provided, the second argument must be a function');\n\t            }\n\t\n\t            // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t            if (arguments.length > 2) {\n\t               T = arguments[2];\n\t            }\n\t         }\n\t\n\t         // 10. Let lenValue be Get(items, \"length\").\n\t         // 11. Let len be ToLength(lenValue).\n\t         var len = toLength(items.length);\n\t\n\t         // 13. If IsConstructor(C) is true, then\n\t         // 13. a. Let A be the result of calling the [ [Construct] ] internal method\n\t         // of C with an argument list containing the single item len.\n\t         // 14. a. Else, Let A be ArrayCreate(len).\n\t         var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\t\n\t         // 16. Let k be 0.\n\t         var k = 0;\n\t         // 17. Repeat, while k < len… (also steps a - h)\n\t         var kValue = void 0;\n\t         while (k < len) {\n\t            kValue = items[k];\n\t            if (mapFn) {\n\t               A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n\t            } else {\n\t               A[k] = kValue;\n\t            }\n\t            k += 1;\n\t         }\n\t         // 18. Let putStatus be Put(A, \"length\", len, true).\n\t         A.length = len;\n\t         // 20. Return A.\n\t         return A;\n\t      };\n\t   })();\n\t}\n\n/***/ },\n\n/***/ 287:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// Polyfill based on:\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\n\t// Alternatives seem to cause problems with MSIE (e.g. by relying on a `global` object).\n\tif (!Array.prototype.includes) {\n\t   // eslint-disable-next-line no-extend-native\n\t   Array.prototype.includes = function (searchElement, optionalFromIndex) {\n\t      'use strict';\n\t\n\t      if (this == null) {\n\t         throw new TypeError('Array.prototype.includes called on null or undefined');\n\t      }\n\t      var list = Object(this);\n\t      var n = parseInt(list.length, 10) || 0;\n\t      if (n === 0) {\n\t         return false;\n\t      }\n\t\n\t      var start = parseInt(optionalFromIndex, 10) || 0;\n\t      var k = start >= 0 ? start : Math.max(0, n + start);\n\t\n\t      // detect special case (only NaN !== NaN):\n\t      // eslint-disable-next-line no-self-compare\n\t      if (searchElement !== searchElement) {\n\t         while (k < n) {\n\t            if (list[k] !== list[k]) {\n\t               return true;\n\t            }\n\t            k++;\n\t         }\n\t         return false;\n\t      }\n\t\n\t      while (k < n) {\n\t         if (searchElement === list[k]) {\n\t            return true;\n\t         }\n\t         k++;\n\t      }\n\t      return false;\n\t   };\n\t}\n\n/***/ },\n\n/***/ 288:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/* eslint-disable prefer-rest-params */\n\t// Polyfill based on:\n\t// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\tif (!Object.assign) {\n\t   Object.assign = function (target) {\n\t      'use strict';\n\t      // We must check against these specific cases.\n\t\n\t      if (target === undefined || target === null) {\n\t         throw new TypeError('Cannot convert undefined or null to object');\n\t      }\n\t\n\t      var output = Object(target);\n\t      for (var index = 1; index < arguments.length; index++) {\n\t         var source = arguments[index];\n\t         if (source !== undefined && source !== null) {\n\t            for (var nextKey in source) {\n\t               // eslint-disable-next-line max-depth\n\t               if (source.hasOwnProperty(nextKey)) {\n\t                  output[nextKey] = source[nextKey];\n\t               }\n\t            }\n\t         }\n\t      }\n\t      return output;\n\t   };\n\t}\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// vendor.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 91dda75be414ef65d874","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\n/**\n * The API entry point for boostrapping LaxarJS applications.\n * Also, provides a couple of utilities to deal with assertions, objects and strings.\n *\n * @module laxar\n */\n\nimport assert from './lib/utilities/assert';\nimport * as object from './lib/utilities/object';\nimport * as string from './lib/utilities/string';\n\nimport { create as createServices } from './lib/runtime/services';\nimport * as plainAdapter from './lib/runtime/plain_adapter';\n\n\n// Get a reference to the global object of the JS environment.\n// See http://stackoverflow.com/a/6930376 for details\nlet global;\ntry {\n   // eslint-disable-next-line no-new-func, no-eval\n   global = Function( 'return this' )() || ( 1, eval )( 'this' );\n}\ncatch( _ ) {\n   // if it forbids eval, it's probably a browser\n   global = window;\n}\n\n\n/**\n * Bootstraps AngularJS on the provided `anchorElement` and sets up the LaxarJS runtime.\n *\n * @param {HTMLElement} anchorElement\n *    the element to insert the page in\n * @param {Object} [optionalOptions]\n *    optional options for bootstrapping\n * @param {Array} optionalOptions.widgetAdapters\n *    widget adapters that are used in this application\n * @param {Object} optionalOptions.configuration\n *    configuration for the laxar application. See http://laxarjs.org/docs/laxar-latest/manuals/configuration/\n *    for further information on available properties\n * @param {Object} optionalOptions.artifacts\n *    an artifact listing for the application, generated by the utilized built tool (e.g. webpack)\n *\n * @memberof laxar\n */\nexport function bootstrap(\n   anchorElement, { widgetAdapters = [], configuration = {}, artifacts = {} } = {}\n) {\n   assert( anchorElement ).isNotNull();\n   assert( widgetAdapters ).hasType( Array ).isNotNull();\n   assert( artifacts ).hasType( Object ).isNotNull();\n   assert( configuration ).hasType( Object ).isNotNull();\n\n   const services = createServices( configuration, artifacts );\n\n   const { globalEventBus, log, storage, themeLoader, widgetLoader } = services;\n   themeLoader.load();\n\n   const adapterServices = {\n      artifactProvider: services.artifactProvider,\n      configuration: services.configuration,\n      flowService: services.flowService,\n      globalEventBus,\n      heartbeat: services.heartbeat,\n      log,\n      pageService: services.pageService,\n      storage,\n      tooling: services.toolingProviders,\n      widgetLoader: services.widgetLoader\n   };\n\n   const adapterModules = [ plainAdapter, ...widgetAdapters ];\n   const adapters = bootstrapWidgetAdapters( anchorElement, adapterServices, adapterModules, artifacts );\n   widgetLoader.registerWidgetAdapters( adapters );\n\n   announceInstance( services );\n\n   const flowName = services.configuration.get( 'flow.name' );\n   if( !flowName ) {\n      log.trace( 'LaxarJS Bootstrap complete: No `flow.name` configured.' );\n      return;\n   }\n\n   whenDocumentReady( () => {\n      log.trace( `LaxarJS loading Flow: ${flowName}` );\n      services.pageService.createControllerFor( anchorElement );\n      services.flowController\n         .loadFlow()\n         .then( () => {\n            log.trace( 'Flow loaded' );\n         }, err => {\n            log.fatal( 'LaxarJS failed to load flow.' );\n            log.fatal( 'Error [0].\\nStack: [1]', err, err && err.stack );\n         } );\n   } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction whenDocumentReady( callback ) {\n   if( document.readyState === 'complete' ) {\n      callback();\n   }\n   else {\n      document.addEventListener( 'DOMContentLoaded', callback );\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction bootstrapWidgetAdapters( anchorElement, services, adapterModules, artifacts ) {\n   const { log } = services;\n   const adapterModulesByTechnology = {};\n   const artifactsByTechnology = {};\n\n   adapterModules.forEach( module => {\n      adapterModulesByTechnology[ module.technology ] = module;\n      artifactsByTechnology[ module.technology ] = { widgets: [], controls: [] };\n   } );\n\n   [ 'widgets', 'controls' ].forEach( type => {\n      artifacts[ type ].forEach( artifact => {\n         const { technology } = artifact.descriptor.integration;\n         if( !adapterModulesByTechnology[ technology ] ) {\n            const { name } = artifact.descriptor;\n            log.fatal( 'Unknown widget technology: [0], required by [1] \"[2]\"', technology, type, name );\n            return;\n         }\n         artifactsByTechnology[ technology ][ type ].push( artifact );\n      } );\n   } );\n\n   const adaptersByTechnology = {};\n   Object.keys( adapterModulesByTechnology ).forEach( technology => {\n      const adapterModule = adapterModulesByTechnology[ technology ];\n      const artifacts = artifactsByTechnology[ technology ];\n      adaptersByTechnology[ technology ] = adapterModule.bootstrap( artifacts, services, anchorElement );\n   } );\n   return adaptersByTechnology;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction announceInstance( services ) {\n   const { configuration, log, storage } = services;\n\n   if( configuration.get( 'tooling.enabled' ) ) {\n      instances()[ configuration.get( 'name', 'unnamed' ) ] = services;\n   }\n\n   const idGenerator = configuration.get( 'logging.instanceId', simpleId );\n   if( idGenerator === false ) { return; }\n\n   const instanceIdStorageKey = 'axLogTags.INST';\n   const store = storage.getApplicationSessionStorage();\n   let instanceId = store.getItem( instanceIdStorageKey );\n   if( !instanceId ) {\n      instanceId = idGenerator();\n      store.setItem( instanceIdStorageKey, instanceId );\n   }\n   log.addTag( 'INST', instanceId );\n\n   function simpleId() {\n      return `${Date.now()}${Math.floor( Math.random() * 100 )}`;\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Provide tooling access to LaxarJS services.\n *\n * Each laxar#bootstrap call creates a new set of services such as a logger, global event bus etc. For tools\n * like the laxar-developer-tools-widget, it may be necessary to access these services for a given instance,\n * or for all instances.\n *\n * @param {String} [optionalName]\n *   The configuration name of a LaxarJS instance to inspect.\n *   May be omitted to access all application instances by name.\n *\n * @return {Object}\n *   The tooling services for a specified instance, or for all instances that have tooling enabled.\n *\n * @memberof laxar\n */\nfunction instances( optionalName ) {\n   const instances = global.laxarInstances = ( global.laxarInstances || {} );\n   return optionalName ? instances[ optionalName ] : instances;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport {\n   assert,\n   object,\n   string,\n   instances,\n   plainAdapter\n};\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/laxar.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * The *assert* module provides some simple assertion methods for type checks, truthyness tests and guards\n * invalid code paths.\n * When importing the module as `default` module, it is the {@link assert} function itself.\n *\n * When requiring `laxar`, it is available as `laxar.assert`.\n *\n * @module assert\n */\n\n/**\n * Constructor for an Assertion.\n *\n * @param {*} subject\n *    the object assertions are made for\n * @param {String} [optionalDetails]\n *    details that should be printed in case no specific details are given for an assertion method\n *\n * @constructor\n * @private\n */\nfunction Assertion( subject, optionalDetails ) {\n   this.subject_ = subject;\n   this.details_ = optionalDetails || null;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Throws an error if the subject is `null` or `undefined`.\n *\n * @param {String} [optionalDetails]\n *    details to append to the error message\n *\n * @return {Assertion}\n *    this instance\n */\nAssertion.prototype.isNotNull = function isNotNull( optionalDetails ) {\n   if( this.subject_ == null ) {\n      fail( 'Expected value to be defined and not null.', optionalDetails || this.details_ );\n   }\n\n   return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Throws an error if the subject is not of the given type. No error is thrown for `null` or `undefined`.\n *\n * @param {Function} type\n *    the expected type of the subject\n * @param {String} [optionalDetails]\n *    details to append to the error message\n *\n * @return {Assertion}\n *    this instance\n */\nAssertion.prototype.hasType = function hasType( type, optionalDetails ) {\n   if( typeof this.subject_ === 'undefined' || this.subject_ === null ) {\n      return this;\n   }\n\n   if( typeof type !== 'function' ) {\n      fail( `type must be a constructor function. Got ${typeof type}.` );\n   }\n\n   if( !checkType( this.subject_, type ) ) {\n      const actualString = functionName( this.subject_.constructor );\n      const expectedString = functionName( type );\n\n      fail( `Expected value to be an instance of \"${expectedString}\" but was \"${actualString}\".`,\n            optionalDetails || this.details_ );\n   }\n\n   return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Throws an error if the subject is no object or the given property is not defined on it.\n *\n * @param {String} property\n *    the property that is expected for the subject\n * @param {String} [optionalDetails]\n *    details to append to the error message\n *\n * @return {Assertion}\n *    this instance\n */\nAssertion.prototype.hasProperty = function hasProperty( property, optionalDetails ) {\n   if( typeof this.subject_ !== 'object' ) {\n      fail( `value must be an object. Got ${typeof this.subject_}.` );\n   }\n\n   if( !( property in this.subject_ ) ) {\n      fail( `value is missing mandatory property \"${property}\".`, optionalDetails || this.details_ );\n   }\n\n   return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction fail( message, optionalDetails ) {\n   let details = '';\n   if( optionalDetails ) {\n      const detailString = typeof optionalDetails === 'object' ?\n         JSON.stringify( optionalDetails ) : optionalDetails;\n      details = ` Details: ${detailString}`;\n   }\n   throw new Error( `Assertion error: ${message}${details}` );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst TYPE_TO_CONSTRUCTOR = {\n   'string': String,\n   'number': Number,\n   'boolean': Boolean,\n   'function': Function\n};\nfunction checkType( subject, type ) {\n   if( typeof subject === 'object' ) {\n      return subject instanceof type;\n   }\n\n   const actualType = TYPE_TO_CONSTRUCTOR[ typeof subject ];\n   return actualType === type;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst FUNCTION_NAME_MATCHER = /^function ([^\\(]*)\\(/i;\nfunction functionName( func ) {\n   const match = FUNCTION_NAME_MATCHER.exec( func.toString().trim() );\n   return match[ 1 ].length ? match[ 1 ] : 'n/a';\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates and returns a new `Assertion` instance for the given `subject`.\n *\n * **Note**: this function is no member of the module, but the module itself. Thus when using `assert` via\n * laxar, `assert` is will be no simple object, but this function having the other functions as\n * properties.\n *\n * Example:\n * ```js\n * define( [ 'laxar' ], function( ax ) {\n *    ax.assert( ax.assert ).hasType( Function );\n *    ax.assert.state( typeof ax.assert.codeIsUnreachable === 'function' );\n * } );\n * ```\n *\n * @param {*} subject\n *    the object assertions are made for\n * @param {String} [optionalDetails]\n *    details that should be printed in case no specific details are given when calling an assertion method\n *\n * @return {Assertion}\n *    the assertion instance\n */\nfunction assert( subject, optionalDetails ) {\n   return new Assertion( subject, optionalDetails );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Marks a code path as erroneous by throwing an error when reached.\n *\n * @param {String} [optionalDetails]\n *    details to append to the error message\n */\nassert.codeIsUnreachable = function codeIsUnreachable( optionalDetails ) {\n   fail( 'Code should be unreachable!', optionalDetails );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Throws an error if the given expression is falsy.\n *\n * @param {*} expression\n *    the expression to test for truthyness\n * @param {String} [optionalDetails]\n *    details to append to the error message\n */\nassert.state = function state( expression, optionalDetails ) {\n   if( !expression ) {\n      fail( 'State does not hold.', optionalDetails );\n   }\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport default assert;\nexport const codeIsUnreachable = assert.codeIsUnreachable;\nexport const state = assert.state;\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/utilities/assert.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\n/**\n * Utilities for dealing with objects.\n *\n * When requiring `laxar`, it is available as `laxar.object`.\n *\n * @module object\n */\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns all properties from `obj` with missing properties completed from `defaults`. If `obj` is `null`\n * or `undefined`, an empty object is automatically created. `obj` and `defaults` are not modified by this\n * function. This is very useful for optional map arguments, resembling some kind of configuration.\n *\n * Example:\n * ```js\n * object.options( { validate: true }, {\n *    validate: false,\n *    highlight: true\n * } );\n * // =>\n * // {\n * //    validate: true,\n * //    highlight: true\n * // }\n * ```\n *\n * @param {Object} obj\n *    the options object to use as source, may be `null` or `undefined`\n * @param {Object} defaults\n *    the defaults to take missing properties from\n *\n * @return {Object}\n *    the completed options object\n */\nexport function options( obj, defaults ) {\n   return { ...defaults, ...obj };\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Iterates over the keys of an object and calls the given iterator function for each entry.\n * On each iteration the iterator function is passed the `value`, the `key` and the complete `object` as\n * arguments.\n * If `object` is an array, the native `Array.prototype.forEach` function is called.\n * In this case the keys are the indices of the array.\n *\n * Example:\n * ```\n * object.forEach( { name: Peter, age: 12 }, ( value, key ) => {\n *    console.log( `${key} = ${value}\\n` );\n * });\n * // =>\n * // name = Peter\n * // age = 12\n * ```\n *\n * @param {Object} object\n *    the object to run the iterator function on\n * @param {Function} iteratorFunction\n *    the iterator function to run on each key-value pair\n */\nexport function forEach( object, iteratorFunction ) {\n   if( Array.isArray( object ) ) {\n      object.forEach( iteratorFunction );\n      return;\n   }\n\n   for( const key in object ) {\n      if( hasOwnProperty( object, key ) ) {\n         iteratorFunction( object[ key ], key, object );\n      }\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Finds a property in a nested object structure by a given path. A path is a string of keys, separated\n * by a dot from each other, used to traverse that object and find the value of interest. An additional\n * default is returned, if otherwise the value would yield `undefined`.\n *\n * Note that `path()` must only be used in situations where all path segments are also valid\n * JavaScript identifiers, and should never be used with user-specified paths:\n *\n *  - there is no mechanism to escape '.' in path segments; a dot always separates keys,\n *  - an empty string as a path segment will abort processing and return the entire sub-object under the\n *    respective position. For historical reasons, the path interpretation differs from that performed by\n *    {@link #setPath()}.\n *\n *\n * Example:\n *\n * ```js\n * object.path( { one: { two: 3 } }, 'one.two' ); // => 3\n * object.path( { one: { two: 3 } }, 'one.three' ); // => undefined\n * object.path( { one: { two: 3 } }, 'one.three', 42 ); // => 42\n * object.path( { one: { two: 3 } }, 'one.' ); // => { two: 3 }\n * object.path( { one: { two: 3 } }, '' ); // => { one: { two: 3 } }\n * object.path( { one: { two: 3 } }, '.' ); // => { one: { two: 3 } }\n * ```\n *\n * @param {Object} obj\n *    the object to traverse\n * @param {String} thePath\n *    the path to search for\n * @param {*} [optionalDefault]\n *    the value to return instead of `undefined` if nothing is found\n *\n * @return {*}\n *    the value at the given path\n */\nexport function path( obj, thePath, optionalDefault = undefined ) {\n   const pathArr = thePath.split( '.' );\n   let node = obj;\n   let key = pathArr.shift();\n\n   while( key ) {\n      if( node && typeof node === 'object' && hasOwnProperty( node, key ) ) {\n         node = node[ key ];\n         key = pathArr.shift();\n      }\n      else {\n         return optionalDefault;\n      }\n   }\n\n   return node;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Sets a property in a nested object structure at a given path to a given value. A path is a string of\n * keys, separated by a dot from each other, used to traverse that object and find the place where the\n * value should be set. Any missing subtrees along the path are created.\n *\n * Note that `setPath()` must only be used in situations where all path segments are also valid\n * JavaScript identifiers, and should never be used with user-specified paths:\n *\n *  - there is no mechanism to escape '.' in path segments; a dot will always create separate keys,\n *  - an empty string as a path segment will create an empty string key in the object graph where missing.\n *    For historical reasons, this path interpretation differs from that performed by #path (see there).\n *\n *\n * Example:\n *\n * ```js\n * object.setPath( {}, 'name.first', 'Peter' ); // => { name: { first: 'Peter' } }\n * object.setPath( {}, 'pets.1', 'Hamster' ); // => { pets: [ null, 'Hamster' ] }\n * object.setPath( {}, '', 'Hamster' ); // => { '': 'Hamster' } }\n * object.setPath( {}, '.', 'Hamster' ); // => { '': { '': 'Hamster' } } }\n * ```\n *\n * @param {Object} obj\n *    the object to modify\n * @param {String} path\n *    the path to set a value at\n * @param {*} value\n *    the value to set at the given path\n *\n * @return {*}\n *    the full object (for chaining)\n */\nexport function setPath( obj, path, value ) {\n   let node = obj;\n   const pathArr = path.split( '.' );\n   const last = pathArr.pop();\n\n   pathArr.forEach( ( pathFragment, index ) => {\n      if( !node[ pathFragment ] || typeof node[ pathFragment ] !== 'object' ) {\n         const lookAheadFragment = pathArr[ index + 1 ] || last;\n         if( lookAheadFragment.match( /^[0-9]+$/ ) ) {\n            node[ pathFragment ] = [];\n            fillArrayWithNull( node[ pathFragment ], parseInt( lookAheadFragment, 10 ) );\n         }\n         else {\n            node[ pathFragment ] = {};\n         }\n      }\n\n      node = node[ pathFragment ];\n   } );\n\n   if( Array.isArray( node ) && last > node.length ) {\n      fillArrayWithNull( node, last );\n   }\n\n   node[ last ] = value;\n\n   return obj;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns a deep clone of the given object. Note that the current implementation is intended to be used\n * for simple object literals only. There is no guarantee that cloning objects instantiated via\n * constructor function works and cyclic references will lead to endless recursion.\n *\n * @param {*} object\n *    the object to clone\n *\n * @return {*}\n *    the clone\n */\nexport function deepClone( object ) {\n   if( !object || typeof object !== 'object' ) {\n      return object;\n   }\n\n   // Using plain for-loops here for performance-reasons.\n   let result;\n   if( Array.isArray( object ) ) {\n      result = [];\n      for( let i = 0, length = object.length; i < length; ++i ) {\n         result[ i ] = deepClone( object[ i ] );\n      }\n   }\n   else {\n      result = {};\n      for( const key in object ) {\n         if( hasOwnProperty( object, key ) ) {\n            result[ key ] = deepClone( object[ key ] );\n         }\n      }\n   }\n\n   return result;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a lookup table from a function and a list of inputs to the function.\n *\n * @param {Function} fn\n *    The callback to apply to all inputs\n * @param {String[]|Number[]|Boolean[]} keys\n *    The keys for the lookup table, and inputs to the function.\n *\n * @return {Object}\n *    An object mapping the given keys to their values under `fn`.\n */\nexport function tabulate( fn, keys ) {\n   return keys.reduce(\n      ( table, k ) => { table[ k ] = fn( k ); return table; },\n      {}\n   );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Sets all entries of the given array to `null`.\n *\n * @private\n */\nfunction fillArrayWithNull( arr, toIndex ) {\n   for( let i = arr.length; i < toIndex; ++i ) {\n      arr[ i ] = null;\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n// eslint-disable-next-line valid-jsdoc\n/**\n * @private\n */\nfunction hasOwnProperty( object, property ) {\n   return hasOwnProp.call( object, property );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/utilities/object.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Utilities for dealing with strings.\n *\n * When requiring `laxar`, it is available as `laxar.string`.\n *\n * @module string\n */\n\n//\nconst BACKSLASH = '\\\\';\nconst OPENING_BRACKET = '[';\nconst CLOSING_BRACKET = ']';\nconst INTEGER_MATCHER = /^[0-9]+$/;\n\n/**\n * A map of all available default format specifiers to their respective formatter function.\n * The following specifiers are available:\n *\n * - `%d` / `%i`: Format the given numeric value as integer. Decimal places are removed\n * - `%f`: Format the given numeric value as floating point value. This specifier supports precision as\n *   sub-specifier (e.g. `%.2f` for 2 decimal places)\n * - `%s`: use simple string serialization using `toString`\n * - `%o`: Format complex objects using `JSON.stringify`\n *\n * @type {Object}\n * @name DEFAULT_FORMATTERS\n */\nexport const DEFAULT_FORMATTERS = Object.freeze( {\n   's'( input ) {\n      return `${input}`;\n   },\n\n   'd'( input ) {\n      return input.toFixed( 0 );\n   },\n\n   'i'( input, subSpecifierString ) {\n      return DEFAULT_FORMATTERS.d( input, subSpecifierString );\n   },\n\n   'f'( input, subSpecifierString ) {\n      const precision = subSpecifierString.match( /^\\.(\\d)$/ );\n      if( precision ) {\n         return input.toFixed( precision[ 1 ] );\n      }\n\n      return `${input}`;\n   },\n\n   'o'( input ) {\n      return JSON.stringify( input );\n   },\n\n   'default'( input, subSpecifierString ) {\n      return DEFAULT_FORMATTERS.s( input, subSpecifierString );\n   }\n} );\n\nconst DEFAULT_FORMATTER = createFormatter( DEFAULT_FORMATTERS );\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Substitutes all unescaped placeholders in the given string for a given indexed or named value.\n * A placeholder is written as a pair of brackets around the key of the placeholder. An example of an\n * indexed placeholder is `[0]` and a named placeholder would look like this `[replaceMe]`. If no\n * replacement for a key exists, the placeholder will simply not be substituted.\n *\n * Some examples:\n * ```javascript\n * string.format( 'Hello [0], how do you like [1]?', [ 'Peter', 'Cheeseburgers' ] );\n * // => 'Hello Peter, how do you like Cheeseburgers?'\n * ```\n * ```javascript\n * string.format( 'Hello [name] and [partner], how do you like [0]?', [ 'Pizza' ], {\n *    name: 'Hans',\n *    partner: 'Roswita'\n * } );\n * // => 'Hello Hans and Roswita, how do you like Pizza?'\n * ```\n * If a pair of brackets should not be treated as a placeholder, the opening bracket can simply be escaped\n * by backslashes (thus to get an actual backslash in a JavaScript string literal, which is then treated as\n * an escape symbol, it needs to be written as double backslash):\n * ```javascript\n * string.format( 'A [something] should eventually only have \\\\[x].', {\n *    something: 'checklist'\n * } );\n * // => 'A checklist should eventually only have [x].'\n * ```\n * A placeholder key can be any character string besides `[`, `]` and `:` to keep parsing simple and fast.\n * By using `:` as separator it is possible to provide a type specifier for string serialization or other\n * additional mapping functions for the value to insert. Type specifiers always begin with an `%` and end\n * with the specifier type. Builtin specifiers and their according formatter functions are defined\n * as {@link DEFAULT_FORMATTERS}.\n *\n * When no specifier is provided, by default `%s` is assumed.\n *\n * Example:\n * ```javascript\n * string.format( 'Hello [0:%s], you owe me [1:%.2f] euros.', [ 'Peter', 12.1243 ] );\n * // => 'Hello Peter, you owe me 12.12 euros.'\n * ```\n *\n * Mapping functions should instead consist of simple strings and may not begin with a `%` character. It is\n * advised to use the same naming rules as for simple JavaScript functions. Type specifiers and mapping\n * functions are applied in the order they appear within the placeholder.\n *\n * An example, where we assume that the mapping functions `flip` and `double` where defined by the user\n * when creating the `formatString` function using {@link #createFormatter()}:\n * ```javascript\n * formatString( 'Hello [0:%s:flip], you owe me [1:double:%.2f] euros.', [ 'Peter', 12 ] );\n * // => 'Hello reteP, you owe me 24.00 euros.'\n * ```\n *\n * Note that there currently exist no builtin mapping functions.\n *\n * If a type specifier is used that doesn't exist, an exception is thrown. In contrast to that the use of\n * an unknown mapping function results in a no-op. This is on purpose to be able to use filter-like\n * functions that, in case they are defined for a formatter, transform a value as needed and in all other\n * cases simply are ignored and don't alter the value.\n *\n * @param {String} string\n *    the string to replace placeholders in\n * @param {Array} [optionalIndexedReplacements]\n *    an optional array of indexed replacements\n * @param {Object} [optionalNamedReplacements]\n *    an optional map of named replacements\n *\n * @return {String}\n *    the string with placeholders substituted for their according replacements\n */\nexport function format( string, optionalIndexedReplacements, optionalNamedReplacements ) {\n   return DEFAULT_FORMATTER( string, optionalIndexedReplacements, optionalNamedReplacements );\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a new format function having the same api as {@link #format()}. If the first argument is\n * omitted or `null`, the default formatters for type specifiers are used. Otherwise only the provided map\n * of specifiers is available to the returned format function. Each key of the map is a specifier character\n * where the `%` is omitted and the value is the formatting function. A formatting function receives the\n * value to format (i.e. serialize) and the sub-specifier (if any) as arguments. For example for the format\n * specifier `%.2f` the sub-specifier would be `.2` where for `%s` it would simply be the empty string.\n *\n * Example:\n * ```js\n * const format = string.createFormatter( {\n *    'm': function( value ) {\n *       return value.amount + ' ' + value.currency;\n *    },\n *    'p': function( value, subSpecifier ) {\n *       return Math.pow( value, parseInt( subSpecifier, 10 ) );\n *    }\n * } );\n *\n * format( 'You owe me [0:%m].', [ { amount: 12, currency: 'EUR' } ] );\n * // => 'You owe me 12 EUR.'\n *\n * format( '[0]^3 = [0:%3p]', [ 2 ] );\n * // => '2^3 = 8'\n * ```\n *\n * The second argument is completely additional to the behavior of the default {@link #format()}\n * function. Here a map from mapping function id to actual mapping function can be passed in. Whenever the\n * id of a mapping function is found within the placeholder, that mapping function is called with the\n * current value and its return value is either passed to the next mapping function or rendered\n * instead of the placeholder if there are no more mapping function ids or type specifiers within the\n * placeholder string.\n *\n * ```javascript\n * const format = string.createFormatter( null, {\n *    flip: function( value ) {\n *       return ( '' + s ).split( '' ).reverse().join( '' );\n *    },\n *    double: function( value ) {\n *       return value * 2;\n *    }\n * } );\n *\n * format( 'Hello [0:%s:flip], you owe me [1:double:%.2f] euros.', [ 'Peter', 12 ] );\n * // => 'Hello reteP, you owe me 24.00 euros.'\n * ```\n *\n * @param {Object} typeFormatters\n *    map from format specifier (single letter without leading `%`) to formatting function\n * @param {Object} [optionalValueMappers]\n *    map from mapping identifier to mapping function\n *\n * @return {Function}\n *    a function having the same api as {@link #format()}\n */\nexport function createFormatter( typeFormatters = DEFAULT_FORMATTERS, optionalValueMappers = {} ) {\n\n   function format( string, optionalIndexedReplacements, optionalNamedReplacements ) {\n      if( typeof string !== 'string' ) {\n         return defaultTypeFormatter( typeFormatters )( string );\n      }\n\n      const indexed = Array.isArray( optionalIndexedReplacements ) ? optionalIndexedReplacements : [];\n      let named = {};\n      if( optionalNamedReplacements ) {\n         named = optionalNamedReplacements || {};\n      }\n      else if( !Array.isArray( optionalIndexedReplacements ) ) {\n         named = optionalIndexedReplacements || {};\n      }\n\n      const chars = string.split( '' );\n      let output = '';\n      for( let i = 0, len = chars.length; i < len; ++i ) {\n         if( chars[ i ] === BACKSLASH ) {\n            if( i + 1 === len ) {\n               throw new Error( `Unterminated escaping sequence at index ${i} of string: \"${string}\".` );\n            }\n\n            output += chars[ ++i ];\n         }\n         else if( chars[ i ] === OPENING_BRACKET ) {\n            const closingIndex = string.indexOf( CLOSING_BRACKET, i + 1 );\n            if( closingIndex === -1 ) {\n               throw new Error( `Unterminated placeholder at index ${i} of string: \"${string}\".` );\n            }\n\n            const key = string.substring( i + 1, closingIndex );\n\n            output += replacePlaceholder( key, named, indexed, { string, index: i } );\n\n            i = closingIndex;\n         }\n         else {\n            output += chars[ i ];\n         }\n      }\n      return output;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function replacePlaceholder( placeholder, named, indexed, context ) {\n      let specifier = '';\n      let subSpecifierString = '';\n      const placeholderParts = placeholder.split( ':' );\n      const key = placeholderParts[ 0 ];\n\n      let value;\n      if( INTEGER_MATCHER.test( key ) && key < indexed.length ) {\n         value = indexed[ key ];\n      }\n      else if( key in named ) {\n         value = named[ key ];\n      }\n      else {\n         return OPENING_BRACKET + placeholder + CLOSING_BRACKET;\n      }\n\n      if( placeholderParts.length > 1 ) {\n\n         if( placeholderParts[ 1 ].charAt( 0 ) !== '%' ) {\n            value = defaultTypeFormatter( typeFormatters )( value );\n         }\n\n         return placeholderParts.slice( 1 ).reduce( ( value, part ) => {\n            if( part.indexOf( '%' ) === 0 ) {\n               const specifierMatch = part.match( /^%(.*)(\\w)$/ );\n               specifier = specifierMatch ? specifierMatch[ 2 ] : '';\n               subSpecifierString = specifierMatch ? specifierMatch[ 1 ] : '';\n               if( specifier in typeFormatters ) {\n                  return typeFormatters[ specifier ]( value, subSpecifierString );\n               }\n               const knownSpecifiers = Object.keys( typeFormatters )\n                  .filter( _ => _ !== 'default' )\n                  .map( _ => `%${_}` )\n                  .join( ', ' );\n\n               throw new Error(\n                  `Unknown format specifier \"%${specifier}\" for placeholder` +\n                  ` at index ${context.index} of string: \"${context.string}\"` +\n                  ` (Known specifiers are: ${knownSpecifiers}).`\n               );\n            }\n            if( part in optionalValueMappers ) {\n               return optionalValueMappers[ part ]( value );\n            }\n\n            return value;\n         }, value );\n      }\n\n      return defaultTypeFormatter( typeFormatters )( value );\n   }\n\n   ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return format;\n\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction defaultTypeFormatter( typeFormatters ) {\n   if( 'default' in typeFormatters ) {\n      return typeFormatters[ 'default' ];\n   }\n\n   return DEFAULT_FORMATTERS[ 'default' ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/utilities/string.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport pagejs from 'page';\nimport assert from '../utilities/assert';\nimport { create as createConfiguration } from './configuration';\nimport { create as createBrowser } from './browser';\nimport { create as createLog } from './log';\nimport { create as createEventBus } from '../runtime/event_bus';\nimport { create as createArtifactProvider } from './artifact_provider';\nimport { create as createControlLoader } from '../loaders/control_loader';\nimport { create as createCssLoader } from '../loaders/css_loader';\nimport { create as createLayoutLoader } from '../loaders/layout_loader';\nimport { create as createPageLoader } from '../loaders/page_loader';\nimport { create as createThemeLoader } from '../loaders/theme_loader';\nimport { create as createWidgetLoader } from '../loaders/widget_loader';\nimport { create as createStorage } from './storage';\nimport { create as createTimer } from './timer';\nimport { create as createFlowController } from './flow_controller';\nimport { create as createFlowService } from './flow_service';\nimport { create as createHeartbeat } from './heartbeat';\nimport { create as createPageService } from './page_service';\nimport { create as createPagejsRouter } from './pagejs_router';\nimport { create as createLocaleEventManager } from './locale_event_manager';\nimport { create as createVisibilityEventManager } from './visibility_event_manager';\nimport { create as createWidgetServices } from './widget_services';\nimport {\n   createCollectors as createToolingCollectors,\n   createProviders as createToolingProviders\n} from '../tooling/tooling';\n\nexport function create( configurationSource, assets ) {\n\n   const configurationDefaults = {\n      baseHref: undefined,\n      eventBusTimeoutMs: 120 * 1000,\n      router: {\n         query: {\n            enabled: false\n         }\n         // 'pagejs' is not configured here:\n         // any deviation from the page.js library defaults must be set by the application\n      },\n      flow: {\n         entryPoint: {\n            target: 'default',\n            parameters: {}\n         }\n      },\n      i18n: {\n         fallback: 'en',\n         strict: false,\n         locales: {\n            'default': 'en'\n         }\n      },\n      logging: {\n         levels: {},\n         threshold: 'INFO'\n      },\n      name: 'unnamed',\n      theme: 'default',\n      storagePrefix: undefined,\n      tooling: {\n         enabled: false\n      }\n   };\n   const configuration = createConfiguration( configurationSource, configurationDefaults );\n\n   const browser = createBrowser();\n   const log = createLog( configuration, browser );\n   const collectors = createToolingCollectors( configuration, log );\n\n   const storage = createStorage( configuration, browser );\n   const timer = createTimer( log, storage );\n\n   const artifactProvider = createArtifactProvider( assets, browser, configuration, log );\n\n   const heartbeat = createHeartbeat();\n\n   // MSIE Bug we have to wrap setTimeout to pass assertion\n   const timeoutFn = ( f, t ) => setTimeout( f, t );\n   const globalEventBus = createEventBus( configuration, log, heartbeat.onNext, timeoutFn );\n\n   const cssLoader = createCssLoader();\n   const themeLoader = createThemeLoader( artifactProvider, cssLoader );\n   const layoutLoader = createLayoutLoader( artifactProvider, cssLoader );\n   const pageLoader = createPageLoader( artifactProvider, collectors.pages );\n   const controlLoader = createControlLoader( artifactProvider, cssLoader );\n   let widgetServices = { forWidget() {\n      assert.codeIsUnreachable( 'Using widget services before they are available');\n   } };\n   const widgetLoader = createWidgetLoader(\n      log,\n      artifactProvider,\n      controlLoader,\n      cssLoader,\n      collectors.pages,\n      ( ...args ) => widgetServices.forWidget( ...args )\n   );\n\n   const localeManager = createLocaleEventManager( globalEventBus, configuration );\n   const visibilityManager = createVisibilityEventManager( globalEventBus );\n   const pageService = createPageService(\n      globalEventBus,\n      pageLoader,\n      layoutLoader,\n      widgetLoader,\n      localeManager,\n      visibilityManager,\n      collectors.pages\n   );\n\n   const router = createPagejsRouter( pagejs, browser, configuration );\n\n   const flowController = createFlowController(\n      artifactProvider,\n      configuration,\n      globalEventBus,\n      log,\n      pageService,\n      router,\n      timer\n   );\n   const flowService = createFlowService(\n      flowController\n   );\n\n   const toolingProviders = createToolingProviders( collectors );\n\n   widgetServices = createWidgetServices(\n      artifactProvider,\n      configuration,\n      controlLoader,\n      globalEventBus,\n      flowService,\n      log,\n      heartbeat,\n      pageService,\n      storage,\n      toolingProviders\n   );\n\n   return {\n      configuration,\n      cssLoader,\n      artifactProvider,\n      flowController,\n      flowService,\n      globalEventBus,\n      heartbeat,\n      layoutLoader,\n      log,\n      pageService,\n      storage,\n      themeLoader,\n      timer,\n      toolingProviders,\n      widgetLoader\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/services.js","  /* globals require, module */\n\n  'use strict';\n\n  /**\n   * Module dependencies.\n   */\n\n  var pathtoRegexp = require('path-to-regexp');\n\n  /**\n   * Module exports.\n   */\n\n  module.exports = page;\n\n  /**\n   * Detect click event\n   */\n  var clickEvent = ('undefined' !== typeof document) && document.ontouchstart ? 'touchstart' : 'click';\n\n  /**\n   * To work properly with the URL\n   * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n   */\n\n  var location = ('undefined' !== typeof window) && (window.history.location || window.location);\n\n  /**\n   * Perform initial dispatch.\n   */\n\n  var dispatch = true;\n\n\n  /**\n   * Decode URL components (query string, pathname, hash).\n   * Accommodates both regular percent encoding and x-www-form-urlencoded format.\n   */\n  var decodeURLComponents = true;\n\n  /**\n   * Base path.\n   */\n\n  var base = '';\n\n  /**\n   * Running flag.\n   */\n\n  var running;\n\n  /**\n   * HashBang option\n   */\n\n  var hashbang = false;\n\n  /**\n   * Previous context, for capturing\n   * page exit events.\n   */\n\n  var prevContext;\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or redirection,\n   * or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page('/from', '/to')\n   *   page();\n   *\n   * @param {string|!Function|!Object} path\n   * @param {Function=} fn\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' === typeof path) {\n      return page('*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' === typeof fn) {\n      var route = new Route(/** @type {string} */ (path));\n      for (var i = 1; i < arguments.length; ++i) {\n        page.callbacks.push(route.middleware(arguments[i]));\n      }\n      // show <path> with [state]\n    } else if ('string' === typeof path) {\n      page['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n      // start [options]\n    } else {\n      page.start(path);\n    }\n  }\n\n  /**\n   * Callback functions.\n   */\n\n  page.callbacks = [];\n  page.exits = [];\n\n  /**\n   * Current path being processed\n   * @type {string}\n   */\n  page.current = '';\n\n  /**\n   * Number of pages navigated to.\n   * @type {number}\n   *\n   *     page.len == 0;\n   *     page('/login');\n   *     page.len == 1;\n   */\n\n  page.len = 0;\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {string} path\n   * @api public\n   */\n\n  page.base = function(path) {\n    if (0 === arguments.length) return base;\n    base = path;\n  };\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  page.start = function(options) {\n    options = options || {};\n    if (running) return;\n    running = true;\n    if (false === options.dispatch) dispatch = false;\n    if (false === options.decodeURLComponents) decodeURLComponents = false;\n    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);\n    if (false !== options.click) {\n      document.addEventListener(clickEvent, onclick, false);\n    }\n    if (true === options.hashbang) hashbang = true;\n    if (!dispatch) return;\n    var url = (hashbang && ~location.hash.indexOf('#!')) ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;\n    page.replace(url, null, true, dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  page.stop = function() {\n    if (!running) return;\n    page.current = '';\n    page.len = 0;\n    running = false;\n    document.removeEventListener(clickEvent, onclick, false);\n    window.removeEventListener('popstate', onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} dispatch\n   * @param {boolean=} push\n   * @return {!Context}\n   * @api public\n   */\n\n  page.show = function(path, state, dispatch, push) {\n    var ctx = new Context(path, state);\n    page.current = ctx.path;\n    if (false !== dispatch) page.dispatch(ctx);\n    if (false !== ctx.handled && false !== push) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Goes back in the history\n   * Back should always let the current route push state and then go back.\n   *\n   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n   * @param {Object=} state\n   * @api public\n   */\n\n  page.back = function(path, state) {\n    if (page.len > 0) {\n      // this may need more testing to see if all browsers\n      // wait for the next tick to go back in history\n      history.back();\n      page.len--;\n    } else if (path) {\n      setTimeout(function() {\n        page.show(path, state);\n      });\n    }else{\n      setTimeout(function() {\n        page.show(base, state);\n      });\n    }\n  };\n\n\n  /**\n   * Register route to redirect from one path to other\n   * or just redirect to another route\n   *\n   * @param {string} from - if param 'to' is undefined redirects to 'from'\n   * @param {string=} to\n   * @api public\n   */\n  page.redirect = function(from, to) {\n    // Define route from a path to another\n    if ('string' === typeof from && 'string' === typeof to) {\n      page(from, function(e) {\n        setTimeout(function() {\n          page.replace(/** @type {!string} */ (to));\n        }, 0);\n      });\n    }\n\n    // Wait for the push state and replace it with another\n    if ('string' === typeof from && 'undefined' === typeof to) {\n      setTimeout(function() {\n        page.replace(from);\n      }, 0);\n    }\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} init\n   * @param {boolean=} dispatch\n   * @return {!Context}\n   * @api public\n   */\n\n\n  page.replace = function(path, state, init, dispatch) {\n    var ctx = new Context(path, state);\n    page.current = ctx.path;\n    ctx.init = init;\n    ctx.save(); // save before dispatching, which may redirect\n    if (false !== dispatch) page.dispatch(ctx);\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n  page.dispatch = function(ctx) {\n    var prev = prevContext,\n      i = 0,\n      j = 0;\n\n    prevContext = ctx;\n\n    function nextExit() {\n      var fn = page.exits[j++];\n      if (!fn) return nextEnter();\n      fn(prev, nextExit);\n    }\n\n    function nextEnter() {\n      var fn = page.callbacks[i++];\n\n      if (ctx.path !== page.current) {\n        ctx.handled = false;\n        return;\n      }\n      if (!fn) return unhandled(ctx);\n      fn(ctx, nextEnter);\n    }\n\n    if (prev) {\n      nextExit();\n    } else {\n      nextEnter();\n    }\n  };\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n  function unhandled(ctx) {\n    if (ctx.handled) return;\n    var current;\n\n    if (hashbang) {\n      current = base + location.hash.replace('#!', '');\n    } else {\n      current = location.pathname + location.search;\n    }\n\n    if (current === ctx.canonicalPath) return;\n    page.stop();\n    ctx.handled = false;\n    location.href = ctx.canonicalPath;\n  }\n\n  /**\n   * Register an exit route on `path` with\n   * callback `fn()`, which will be called\n   * on the previous context when a new\n   * page is visited.\n   */\n  page.exit = function(path, fn) {\n    if (typeof path === 'function') {\n      return page.exit('*', path);\n    }\n\n    var route = new Route(path);\n    for (var i = 1; i < arguments.length; ++i) {\n      page.exits.push(route.middleware(arguments[i]));\n    }\n  };\n\n  /**\n   * Remove URL encoding from the given `str`.\n   * Accommodates whitespace in both x-www-form-urlencoded\n   * and regular percent-encoded form.\n   *\n   * @param {string} val - URL component to decode\n   */\n  function decodeURLEncodedURIComponent(val) {\n    if (typeof val !== 'string') { return val; }\n    return decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} state\n   * @api public\n   */\n\n  function Context(path, state) {\n    if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + (hashbang ? '#!' : '') + path;\n    var i = path.indexOf('?');\n\n    this.canonicalPath = path;\n    this.path = path.replace(base, '') || '/';\n    if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\n    this.title = document.title;\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n    this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n    this.params = {};\n\n    // fragment\n    this.hash = '';\n    if (!hashbang) {\n      if (!~this.path.indexOf('#')) return;\n      var parts = this.path.split('#');\n      this.path = parts[0];\n      this.hash = decodeURLEncodedURIComponent(parts[1]) || '';\n      this.querystring = this.querystring.split('#')[0];\n    }\n  }\n\n  /**\n   * Expose `Context`.\n   */\n\n  page.Context = Context;\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function() {\n    page.len++;\n    history.pushState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function() {\n    history.replaceState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} options\n   * @api private\n   */\n\n  function Route(path, options) {\n    options = options || {};\n    this.path = (path === '*') ? '(.*)' : path;\n    this.method = 'GET';\n    this.regexp = pathtoRegexp(this.path,\n      this.keys = [],\n      options);\n  }\n\n  /**\n   * Expose `Route`.\n   */\n\n  page.Route = Route;\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn) {\n    var self = this;\n    return function(ctx, next) {\n      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n      next();\n    };\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {string} path\n   * @param {Object} params\n   * @return {boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params) {\n    var keys = this.keys,\n      qsIndex = path.indexOf('?'),\n      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n      m = this.regexp.exec(decodeURIComponent(pathname));\n\n    if (!m) return false;\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n      var val = decodeURLEncodedURIComponent(m[i]);\n      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {\n        params[key.name] = val;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * Handle \"populate\" events.\n   */\n\n  var onpopstate = (function () {\n    var loaded = false;\n    if ('undefined' === typeof window) {\n      return;\n    }\n    if (document.readyState === 'complete') {\n      loaded = true;\n    } else {\n      window.addEventListener('load', function() {\n        setTimeout(function() {\n          loaded = true;\n        }, 0);\n      });\n    }\n    return function onpopstate(e) {\n      if (!loaded) return;\n      if (e.state) {\n        var path = e.state.path;\n        page.replace(path, e.state);\n      } else {\n        page.show(location.pathname + location.hash, undefined, undefined, false);\n      }\n    };\n  })();\n  /**\n   * Handle \"click\" events.\n   */\n\n  function onclick(e) {\n\n    if (1 !== which(e)) return;\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n\n\n    // ensure link\n    // use shadow dom when available\n    var el = e.path ? e.path[0] : e.target;\n    while (el && 'A' !== el.nodeName) el = el.parentNode;\n    if (!el || 'A' !== el.nodeName) return;\n\n\n\n    // Ignore if tag has\n    // 1. \"download\" attribute\n    // 2. rel=\"external\" attribute\n    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\n    // ensure non-hash for the same path\n    var link = el.getAttribute('href');\n    if (!hashbang && el.pathname === location.pathname && (el.hash || '#' === link)) return;\n\n\n\n    // Check for mailto: in the href\n    if (link && link.indexOf('mailto:') > -1) return;\n\n    // check target\n    if (el.target) return;\n\n    // x-origin\n    if (!sameOrigin(el.href)) return;\n\n\n\n    // rebuild path\n    var path = el.pathname + el.search + (el.hash || '');\n\n    // strip leading \"/[drive letter]:\" on NW.js on Windows\n    if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n      path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n    }\n\n    // same page\n    var orig = path;\n\n    if (path.indexOf(base) === 0) {\n      path = path.substr(base.length);\n    }\n\n    if (hashbang) path = path.replace('#!', '');\n\n    if (base && orig === path) return;\n\n    e.preventDefault();\n    page.show(orig);\n  }\n\n  /**\n   * Event button.\n   */\n\n  function which(e) {\n    e = e || window.event;\n    return null === e.which ? e.button : e.which;\n  }\n\n  /**\n   * Check if `href` is the same origin.\n   */\n\n  function sameOrigin(href) {\n    var origin = location.protocol + '//' + location.hostname;\n    if (location.port) origin += ':' + location.port;\n    return (href && (0 === href.indexOf(origin)));\n  }\n\n  page.sameOrigin = sameOrigin;\n\n\n\n// WEBPACK FOOTER //\n// ./~/page/index.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/~/node-libs-browser/~/process/browser.js","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {String} str\n * @return {Array}\n */\nfunction parse (str) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var suffix = res[6]\n    var asterisk = res[7]\n\n    var repeat = suffix === '+' || suffix === '*'\n    var optional = suffix === '?' || suffix === '*'\n    var delimiter = prefix || '/'\n    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?')\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: escapeGroup(pattern)\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {String}   str\n * @return {Function}\n */\nfunction compile (str) {\n  return tokensToFunction(parse(str))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^' + tokens[i].pattern + '$')\n    }\n  }\n\n  return function (obj) {\n    var path = ''\n    var data = obj || {}\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received \"' + value + '\"')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encodeURIComponent(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = encodeURIComponent(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {String} str\n * @return {String}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {String} group\n * @return {String}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {RegExp} re\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {String}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {RegExp} path\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {Array}  path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {String} path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  var tokens = parse(path)\n  var re = tokensToRegExp(tokens, options)\n\n  // Attach keys back to the regexp.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] !== 'string') {\n      keys.push(tokens[i])\n    }\n  }\n\n  return attachKeys(re, keys)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {Array}  tokens\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction tokensToRegExp (tokens, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n  var lastToken = tokens[tokens.length - 1]\n  var endsWithSlash = typeof lastToken === 'string' && /\\/$/.test(lastToken)\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.pattern\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (prefix) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\\\/(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithSlash ? '' : '(?=\\\\/|$)'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(String|RegExp|Array)} path\n * @param  {Array}                 [keys]\n * @param  {Object}                [options]\n * @return {RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  keys = keys || []\n\n  if (!isarray(keys)) {\n    options = keys\n    keys = []\n  } else if (!options) {\n    options = {}\n  }\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys, options)\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(path, keys, options)\n  }\n\n  return stringToRegexp(path, keys, options)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/page/~/path-to-regexp/index.js","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/page/~/path-to-regexp/~/isarray/index.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the Configuration factory.\n *\n * To use the Configuration in a widget, request the {@link widget_services#axConfiguration axConfiguration}\n * injection. In compatibility mode with LaxarJS v1.x, it is also available under `laxar.configuration`.\n *\n * @module configuration\n */\nimport assert from '../utilities/assert';\nimport { path } from '../utilities/object';\n\nexport function create( source, defaults ) {\n\n   /**\n    * Provides access to the configuration that was passed during application bootstrapping.\n    *\n    * A *Configuration* instance provides convenient readonly access to the underlying LaxarJS\n    * application bootstrapping configuration. The configuration values are passed to\n    * {@link laxar#bootstrap()} on startup (before LaxarJS v2.x, these configuration values were read from\n    * `window.laxar`). When using the LaxarJS application template, the configuration values are set in the\n    * file `application/application.js` under your project's root directory.\n    *\n    * @name Configuration\n    * @constructor\n    */\n   return { get, ensure };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Returns the configured value for the specified attribute path or `undefined` in case it wasn't\n    * configured. If a default value was passed as second argument this is returned instead of `undefined`.\n    *\n    * Services should use this to get configuration values for which there are universal fallback behaviors.\n    *\n    * Examples:\n    * ```js\n    * // ... inject `axConfiguration` as parameter `config` ...\n    * config.get( 'logging.threshold' ); // -> 'INFO'\n    * config.get( 'iDontExist' ); // -> undefined\n    * config.get( 'iDontExist', 42 ); // -> 42\n    * ```\n    *\n    * @param {String} key\n    *    a  path (using `.` as separator) to the property in the configuration object\n    * @param {*} [optionalDefault]\n    *    the value to return if no value was set for `key`\n    *\n    * @return {*}\n    *    either the configured value, `undefined` or `optionalDefault`\n    *\n    * @memberof Configuration\n    */\n   function get( key, optionalDefault ) {\n      const value = path( source, key );\n      return ( value !== undefined ) ? value : path( defaults, key, optionalDefault );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Retrieves a configuration value by key, failing if it is `undefined` or `null`.\n    *\n    * Services should use this to get configuration values for which no universal default or fallback exists.\n    *\n    * Examples:\n    * ```js\n    * // ... inject `axConfiguration` as parameter `config` ...\n    * config.ensure( 'logging.threshold' ); // -> 'INFO'\n    * config.ensure( 'iDontExist' ); // -> throws\n    * ```\n    *\n    * @param {String} key\n    *    a  path (using `.` as separator) to the property in the configuration object\n    *\n    * @return {*}\n    *    the configured value (if `undefined` or `null`, an exception is thrown instead)\n    *\n    * @memberof Configuration\n    */\n   function ensure( key ) {\n      const value = get( key );\n      assert( value ).isNotNull( `Configuration is missing mandatory entry: ${key}` );\n      return value;\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/configuration.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the Browser factory.\n *\n * Provides abstractions for browser APIs used internally by LaxarJS, which might need a different\n * implementation in a server-side environment, or for testing.\n * This service is internal to LaxarJS and not available to widgets and activities.\n *\n * @module browser\n */\n\n/**\n * Create a browser abstraction environment.\n *\n * @return {Browser}\n *    a fresh browser instance\n *\n * @private\n */\nexport function create() {\n\n   // for the MSIE `resolve`-workaround, cache the temporary HTML document\n   let resolveDoc;\n   let resolveDocBase;\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * A brower mostly abstracts over the location-related DOM window APIs, and provides a console wrapper.\n    * Since it is internal to LaxarJS, only relevant APIs are included.\n    *\n    * @name Browser\n    * @constructor\n    */\n   return {\n      /**\n      * Calculates an absolute URL from a (relative) URL, and an optional base URL.\n      *\n      * If no base URL is given, the `document.baseURI` is used instead. The given base URL may also be\n      * relative, in which case it is resolved against the `document.baseURI` before resolving the first URL.\n      *\n      * For browser environments that do not support the `new URL( url, baseUrl )` constructor for resolving\n      * URLs or that do not support `document.baseURI`, fallback mechanisms are used.\n      *\n      * @param {String} url\n      *    the URL to resolve\n      * @param {String} baseUrl\n      *    the base to resolve from\n      *\n      * @return {String}\n      *    an absolute URL based on the given URL\n      *\n      * @type {Function}\n      * @memberof Browser\n      */\n      resolve: selectResolver(),\n\n      /**\n       * Provides easily mocked access to `window.location`\n       *\n       * @return {Location}\n       *    the current (window's) DOM location\n       *\n       * @type {Function}\n       * @memberof Browser\n       */\n      location: () => window.location,\n\n      /**\n       * Provides easily mocked access to `window.fetch` or a suitable polyfill:\n       *\n       * @param {String|Request} input\n       *    the URL to fetch or the request to perform\n       * @param {Object} [init]\n       *    additional options, described here in more detail:\n       *    https://developer.mozilla.org/en-US/docs/Web/API/Globalfetch/fetch#Parameters\n       *\n       * @return {Promise<Response>}\n       *    the resulting promise\n       *\n       * @type {Function}\n       * @memberof Browser\n       */\n      fetch: ( input, init ) => window.fetch( input, init ),\n\n      /**\n       * Provides easily mocked access to `window.console`:\n       *\n       * @return {Console}\n       *    the browser console promise\n       *\n       * @type {Function}\n       * @memberof Browser\n       */\n      console: () => window.console\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   // perform the exception-based feature-detect only once (for performance, and to be nice to debugger users)\n   function selectResolver() {\n      try {\n         const { href } = window.location;\n         return ( new URL( '', href ).href === href ) ? resolveUsingUrl : resolveUsingLink;\n      }\n      catch( e ) {\n         return resolveUsingLink;\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   // Resolve using the DOM URL API (Chrome, Firefox, Safari, MS Edge)\n   function resolveUsingUrl( url, baseUrl ) {\n      const absoluteBaseUrl = baseUrl ? abs( baseUrl ) : ( document.baseURI || abs( '.' ) );\n      return new URL( url, absoluteBaseUrl ).href;\n\n      function abs( url ) {\n         return new URL( url, document.baseURI || resolveUsingLink( '.' ) );\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   // Resolve using the a-tag fallback (MSIE)\n   function resolveUsingLink( url, baseUrl ) {\n      const absoluteBaseUrl = abs( baseUrl );\n      if( !resolveDoc ) {\n         resolveDoc = document.implementation.createHTMLDocument( '' );\n         resolveDocBase = resolveDoc.createElement( 'base' );\n         resolveDoc.head.appendChild( resolveDocBase );\n      }\n      resolveDocBase.href = absoluteBaseUrl;\n      return abs( url, resolveDoc );\n\n      function abs( url, baseDocument = document ) {\n         const a = baseDocument.createElement( 'a' );\n         // MSIE does not process empty URLs correctly (http://stackoverflow.com/a/7966835)\n         a.href = url || '#';\n         return url ? a.href : a.href.slice( 0, -1 );\n      }\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/browser.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the Logger factory.\n *\n * To use the Log service in a widget, request the {@link widget_services#axLog axLog} injection.\n *\n * @module log\n */\nimport assert from '../utilities/assert';\nimport { forEach } from '../utilities/object';\n\n/**\n * Log levels that are available by default, sorted by increasing severity:\n *\n * - TRACE (level 100)\n * - DEBUG (level 200)\n * - INFO (level 300)\n * - WARN (level 400)\n * - ERROR (level 500)\n * - FATAL (level 600)\n *\n * @type {Object}\n * @name levels\n */\nexport const levels = {\n   TRACE: 100,\n   DEBUG: 200,\n   INFO: 300,\n   WARN: 400,\n   ERROR: 500,\n   FATAL: 600\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Pass this as an additional replacement parameter to a log-method, in order to blackbox your logging call.\n * Blackboxed callers are ignored when logging the source information (file, line).\n *\n * @type {Object}\n * @name BLACKBOX\n */\nexport const BLACKBOX = {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function create( configuration, optionalBrowser ) {\n   const startChannels = optionalBrowser ? [ createConsoleChannel( optionalBrowser ) ] : [];\n   return new Logger( configuration, startChannels );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * A flexible logger.\n *\n * It is recommended to prefer this logger over `console.log` and friends, at least for any log messages that\n * might make their way into production code. For once, this logger is safe to use across browsers and allows\n * to attach additional channels for routing messages to (i.e. to send them to a server process for\n * persistence). If a browser console is available, messages will be logged to that console using the builtin\n * console channel.\n * For testing, a silent mock for this logger is used, making it simple to test the logging behavior of\n * widgets and activities, while avoiding noisy log messages in the test runner output.\n *\n * All messages produced\n *\n * @constructor\n * @private\n */\nfunction Logger( configuration, channels = [] ) {\n   this.levels = { ...levels, ...configuration.get( 'logging.levels' ) };\n\n   this.queueSize_ = 100;\n   this.channels_ = channels;\n   this.counter_ = 0;\n   this.messageQueue_ = [];\n   this.threshold_ = 0;\n   this.tags_ = {};\n\n   this.levelToName_ = ( levels => {\n      const result = {};\n      forEach( levels, ( level, levelName ) => {\n         this[ levelName.toLowerCase() ] = ( ...args ) => {\n            this.log( level, ...args, BLACKBOX );\n         };\n         result[ level ] = levelName;\n      } );\n      return result;\n   } )( this.levels );\n\n   this.setLogThreshold( configuration.ensure( 'logging.threshold' ) );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message. A message may contain placeholders in the form `[#]` where `#` resembles the index\n * within the list of `replacements`. `replacements` are incrementally counted starting at `0`. If the\n * log level is below the configured log threshold, the message is simply discarded.\n *\n * It is recommended not to use this method directly, but instead one of the short cut methods for the\n * according log level.\n *\n * @param {Number} level\n *    the level for this message\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.log = function( level, message, ...replacements ) {\n   if( level < this.threshold_ ) {\n      return;\n   }\n\n   let blackboxDepth = 0;\n   while( replacements[ replacements.length - 1 ] === BLACKBOX ) {\n      ++blackboxDepth;\n      replacements.pop();\n   }\n\n   const messageObject = {\n      id: this.counter_++,\n      level: this.levelToName_[ level ],\n      text: message,\n      replacements,\n      time: new Date(),\n      tags: this.gatherTags(),\n      sourceInfo: gatherSourceInformation( blackboxDepth + 1 ) // add 1 depth to exclude this function\n   };\n\n   this.channels_.forEach( channel => {\n      channel( messageObject );\n   } );\n\n   if( this.messageQueue_.length === this.queueSize_ ) {\n      this.messageQueue_.shift();\n   }\n   this.messageQueue_.push( messageObject );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message in log level `TRACE`. See {@link Logger#log} for further information.\n *\n * *Important note*: This method is only available, if no custom log levels were defined via\n * configuration or custom log levels include this method as well.\n *\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.trace = function() {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message in log level `DEBUG`. See {@link Logger#log} for further information.\n *\n * *Important note*: This method is only available, if no custom log levels were defined via\n * configuration or custom log levels include this method as well.\n *\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.debug = function() {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message in log level `INFO`. See {@link Logger#log} for further information.\n *\n * *Important note*: This method is only available, if no custom log levels were defined via\n * configuration or custom log levels include this method as well.\n *\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.info = function() {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message in log level `WARN`. See {@link Logger#log} for further information.\n *\n * *Important note*: This method is only available, if no custom log levels were defined via\n * configuration or custom log levels include this method as well.\n *\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.warn = function() {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message in log level `ERROR`. See {@link Logger#log} for further information.\n *\n * *Important note*: This method is only available, if no custom log levels were defined via\n * configuration or custom log levels include this method as well.\n *\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.error = function() {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Logs a message in log level `FATAL`. See {@link Logger#log} for further information.\n *\n * *Important note*: This method is only available, if no custom log levels were defined via\n * configuration or custom log levels include this method as well.\n *\n * @param {String} message\n *    the message to log\n * @param {...*} replacements\n *    objects that should replace placeholders within the message\n */\nLogger.prototype.fatal = function() {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Adds a new channel to forward log messages to. A channel is called synchronously for every log message\n * and can do whatever necessary to handle the message according to its task. Note that blocking or\n * performance critical actions within a channel should always take place asynchronously to prevent from\n * blocking the application. Ideally a web worker is used for heavier background tasks.\n *\n * Each message is an object having the following properties:\n * - `id`: the unique, ascending id of the log message\n * - `level`: the log level of the message in string representation\n * - `text`: the actual message that was logged\n * - `replacements`: the raw list of replacements passed along the message\n * - `time`: JavaScript Date instance when the message was logged\n * - `tags`: A map of all log tags currently set for the logger\n * - `sourceInfo`: if supported, a map containing `file`, `line` and `char` where the logging took place\n *\n * @param {Function} channel\n *    the log channel to add\n */\nLogger.prototype.addLogChannel = function( channel ) {\n   this.channels_.push( channel );\n   this.messageQueue_.forEach( entry => {\n      channel( entry );\n   } );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Removes a log channel and thus stops sending further messages to it.\n *\n * @param {Function} channel\n *    the log channel to remove\n */\nLogger.prototype.removeLogChannel = function( channel ) {\n   const channelIndex = this.channels_.indexOf( channel );\n   if( channelIndex > -1 ) {\n      this.channels_.splice( channelIndex, 1 );\n   }\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Adds a value for a log tag. If a tag is already known, the value is appended to the existing one using a\n * `;` as separator. Note that no formatting of the value takes place and a non-string value will just have\n * its appropriate `toString` method called.\n *\n * Log tags can be used to mark a set of log messages with a value giving further information on the\n * current logging context. For example laxar sets a tag `'INST'` with a unique-like identifier for the\n * current browser client. If then for example log messages are persisted on a server, messages belonging\n * to the same client can be accumulated.\n *\n * @param {String} tag\n *    the id of the tag to add a value for\n * @param {String} value\n *    the value to add\n */\nLogger.prototype.addTag = function( tag, value ) {\n   assert( tag ).hasType( String ).isNotNull();\n\n   if( !this.tags_[ tag ] ) {\n      this.tags_[ tag ] = [ value ];\n   }\n   else {\n      this.tags_[ tag ].push( value );\n   }\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Sets a value for a log tag. If a tag is already known, the value is overwritten by the given one. Note\n * that no formatting of the value takes place and a non-string value will just have its appropriate\n * `toString` method called. For further information on log tags, see {@link Logger#addTag}.\n *\n * @param {String} tag\n *    the id of the tag to set a value for\n * @param {String} value\n *    the value to set\n */\nLogger.prototype.setTag = function( tag, value ) {\n   assert( tag ).hasType( String ).isNotNull();\n\n   this.tags_[ tag ] = [ value ];\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Removes a log tag. For further information on log tags, see {@link Logger#addTag}.\n *\n * @param {String} tag\n *    the id of the tag to set a value for\n */\nLogger.prototype.removeTag = function( tag ) {\n   assert( tag ).hasType( String ).isNotNull();\n\n   delete this.tags_[ tag ];\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns a map of all tags. If there are multiple values for the same tag, their values are concatenated\n * using a `;` as separator. For further information on log tags, see {@link Logger#addTag}.\n *\n * @return {Object}\n *    a mapping from tag to its value(s)\n */\nLogger.prototype.gatherTags = function() {\n   const tags = {};\n   forEach( this.tags_, ( values, tag ) => {\n      tags[ tag ] = values.join( ';' );\n   } );\n   return tags;\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Sets the threshold for log messages. Log messages with a lower level will be discarded upon logging.\n *\n * @param {String|Number} threshold\n *    the numeric or the string value of the log level to use as threshold\n */\nLogger.prototype.setLogThreshold = function( threshold ) {\n   if( typeof threshold === 'string' ) {\n      assert.state( threshold.toUpperCase() in this.levels, `Unsupported log threshold \"${threshold}\".` );\n      this.threshold_ = this.levels[ threshold.toUpperCase() ];\n   }\n   else {\n      assert( threshold ).hasType( Number );\n      this.threshold_ = threshold;\n   }\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst EMPTY_CALL_INFORMATION = { file: '?', line: -1, char: -1 };\n\nfunction gatherSourceInformation( blackboxDepth ) {\n   let e = new Error();\n\n   if( !e.stack ) {\n      try {\n         // IE >= 10 only generates a stack if the error object is really thrown\n         throw new Error();\n      }\n      catch( err ) {\n         e = err;\n      }\n      if( !e.stack ) {\n         return EMPTY_CALL_INFORMATION;\n      }\n   }\n\n   const rows = e.stack.split( /[\\n]/ );\n   let interpret;\n   if( rows[ 0 ] === 'Error' ) {\n      rows.shift();\n      interpret = chromeStackInterpreter;\n   }\n   else if( rows[ 0 ].indexOf( '@' ) !== -1 ) {\n      interpret = firefoxStackInterpreter;\n   }\n   else {\n      return EMPTY_CALL_INFORMATION;\n   }\n\n   const row = rows[ blackboxDepth + 1 ]; // add 1 depth to exclude this function\n   return row ? interpret( row ) : EMPTY_CALL_INFORMATION;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst CHROME_AND_IE_STACK_MATCHER = /\\(?([^\\( ]+):(\\d+):(\\d+)\\)?$/;\n\nfunction chromeStackInterpreter( row ) {\n   const match = CHROME_AND_IE_STACK_MATCHER.exec( row );\n   return {\n      file: match ? match[ 1 ] : '?',\n      line: match ? match[ 2 ] : -1,\n      char: match ? match[ 3 ] : -1\n   };\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst FIREFOX_STACK_MATCHER = /@(.+):(\\d+)$/;\n\nfunction firefoxStackInterpreter( row ) {\n   const match = FIREFOX_STACK_MATCHER.exec( row );\n   return {\n      file: match ? match[ 1 ] : '?',\n      line: match ? match[ 2 ] : -1,\n      char: -1\n   };\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function createConsoleChannel( browser ) {\n\n   return function log( messageObject ) {\n      const browserConsole = browser.console();\n      if( !browserConsole ) { return; }\n\n      const { level, text, replacements, sourceInfo: { file, line } } = messageObject;\n\n      let logMethod = level.toLowerCase();\n      if( !( logMethod in browserConsole ) || logMethod === 'trace' ) {\n         // In console objects trace doesn't define a valid log level but is used to print stack traces. We\n         // thus need to change it something different.\n         logMethod = 'log';\n      }\n\n      if( !( logMethod in browserConsole ) ) {\n         return;\n      }\n\n      const callArgs = [ `${level}: ` ]\n         .concat( mergeTextAndReplacements( text, replacements ) )\n         .concat( [ `(@ ${file}:${line})` ] );\n\n      browserConsole[ logMethod ]( ...callArgs );\n   };\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction mergeTextAndReplacements( text, replacements ) {\n   const parts = [];\n   let pos = 0;\n   let buffer = '';\n\n   while( pos < text.length ) {\n      const character = text.charAt( pos );\n\n      switch( character ) {\n         case '\\\\': {\n            ++pos;\n            if( pos === text.length ) {\n               throw new Error( `Unterminated string: \"${text}\"` );\n            }\n\n            buffer += text.charAt( pos );\n            break;\n         }\n         case '[': {\n            parts.push( buffer );\n            buffer = '';\n\n            const end = text.indexOf( ']', pos );\n            if( end === -1 ) {\n               throw new Error( `Unterminated replacement at character ${pos}: \"${text}\"` );\n            }\n\n            const replacementIndex = parseInt( text.substring( pos + 1, end ), 10 );\n\n            parts.push( replacements[ replacementIndex ] );\n            pos = end;\n\n            break;\n         }\n         default: {\n            buffer += character;\n            break;\n         }\n      }\n\n      ++pos;\n   }\n\n   if( buffer.length > 0 ) {\n      parts.push( buffer );\n   }\n\n   return parts;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/log.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the EventBus factory.\n *\n * To use the EventBus in a widget, request the {@link widget_services#axEventBus axEventBus} injection, or\n * use the `eventBus` property on the {@link widget_services#axContext axContext} injection.\n * In some cases, it may be useful to inject the global EventBus instance backing all widget instances of the\n * same bootstrapping context, by requesting the {@link widget_services#axGlobalEventBus axGlobalEventBus}\n * injection.\n *\n * @module event_bus\n */\nimport assert from '../utilities/assert';\nimport * as object from '../utilities/object';\n\nconst WILDCARD = '*';\nconst SUBSCRIBER_FIELD = '.';\n\nconst TOPIC_SEPARATOR = '.';\nconst SUB_TOPIC_SEPARATOR = '-';\nconst REQUEST_MATCHER = /^([^.])([^.]*)Request(\\..+)?$/;\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param {Object} configuration\n *    configuration for the event bus instance.\n *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.\n * @param {Object} log\n *    a logger instance for error reporting\n * @param {Function} nextTick\n *    a next tick function like `process.nextTick`, `setImmediate` or AngularJS' `$timeout`\n * @param {Function} timeoutFunction\n *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`\n * @param {Function} [errorHandler]\n *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.\n *\n * @constructor\n * @private\n */\nfunction EventBus(\n   configuration,\n   log,\n   nextTick,\n   timeoutFunction,\n   errorHandler = createLogErrorHandler( log )\n) {\n   this.nextTick_ = f => nextTick( f );\n   this.timeoutFunction_ = ( f, ms ) => timeoutFunction( f, ms );\n   this.timeoutMs_ = configuration.ensure( 'eventBusTimeoutMs' );\n   this.errorHandler_ = errorHandler;\n\n   this.cycleCounter_ = 0;\n   this.eventQueue_ = [];\n   this.subscriberTree_ = {};\n\n   this.waitingPromiseResolves_ = [];\n   this.currentCycle_ = -1;\n   this.inspectors_ = [];\n   this.log_ = log;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Adds an inspector, that gets notified when certain actions within the event bus take place. Currently\n * these actions may occur:\n *\n * - `subscribe`: a new subscriber registered for an event\n * - `publish`: an event is published but not yet delivered\n * - `deliver`: an event is actually delivered to a subscriber\n *\n * An inspector receives a map with the following properties:\n *\n * - `action`: one of the actions from above\n * - `source`: the origin of the `action`\n * - `target`: the name of the event subscriber (`deliver` action only)\n * - `event`: the full name of the event or the subscribed event (`subscribe` action only)\n * - `eventObject`: the published event item (`publish` action only)\n * - `subscribedTo`: the event, possibly with omissions, the subscriber subscribed to (`deliver` action only)\n * - `cycleId`: the id of the event cycle\n *\n * The function returned by this method can be called to remove the inspector again and prevent it from\n * being called for future event bus actions.\n *\n * @param {Function} inspector\n *    the inspector function to add\n *\n * @return {Function}\n *    a function to remove the inspector\n */\nEventBus.prototype.addInspector = function( inspector ) {\n   assert( inspector ).hasType( Function ).isNotNull();\n\n   this.inspectors_.push( inspector );\n   return function() {\n      const index = this.inspectors_.indexOf( inspector );\n      if( index !== -1 ) {\n         this.inspectors_.splice( index, 1 );\n      }\n   }.bind( this );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Subscribes to an event by name. An event name consists of so called *topics*, where each topic is\n * separated from another by dots (`.`). If a topic is omitted, this is treated as a wildcard. Note that\n * two dots in the middle or one dot at the beginning of an event name must remain, whereas a dot at the\n * end may be omitted. As such every event name has an intrinsic wildcard at its end. For example these are\n * all valid event names:\n *\n * - `some.event`: matches `some.event`, `some.event.again`\n * - `.event`: matches `some.event`, `any.event`, `any.event.again`\n * - `some..event`: matches `some.fancy.event`, `some.special.event`\n *\n * Additionally *subtopics* are supported. Subtopics are fragments of a topic, separated from another by\n * simple dashes (`-`). Here only suffixes of subtopics may be omitted when subscribing. Thus subscribing\n * to `some.event` would match an event published with name `some.event-again` or even\n * `some.event-another.again`.\n *\n * **The subscriber function**\n *\n * When an event is delivered, the subscriber function receives two arguments:\n * The first one is the event object as it was published. If `optionalOptions.clone` yields `true` this is a\n * simple deep copy of the object (note that only properties passing a JSON-(de)serialization remain). If\n * `false` the object is frozen using `Object.freeze` recursively.\n *\n * The second one is a meta object with these properties:\n *\n * - `name`: The name of the event as it actually was published (i.e. without wildcards).\n * - `cycleId`: The id of the cycle the event was published (and delivered) in\n * - `sender`: The id of the event sender, may be `null`.\n * - `initiator`: The id of the initiator of the cycle. Currently not implemented, thus always `null`.\n * - `options`: The options that were passed to `publish` or `publishAndGatherReplies` respectively.\n *\n * @param {String} eventName\n *    the name of the event to subscribe to\n * @param {Function} subscriber\n *    a function to call whenever an event matching `eventName` is published\n * @param {Object} [optionalOptions]\n *    additional options for the subscribe action\n * @param {String} [optionalOptions.subscriber=null]\n *    the id of the subscriber. Default is `null`\n * @param {Boolean} [optionalOptions.clone=true]\n *    if `false` the event will be send frozen to the subscriber, otherwise it will receive a deep copy.\n *    Default is `true`\n *\n * @return {Function}\n *    a function that when called unsubscribes from this subscription again\n */\nEventBus.prototype.subscribe = function( eventName, subscriber, optionalOptions ) {\n   assert( eventName ).hasType( String ).isNotNull();\n   assert( subscriber ).hasType( Function ).isNotNull();\n\n   const options = object.options( optionalOptions, {\n      subscriber: null,\n      clone: true\n   } );\n   const subscriberItem = {\n      name: eventName,\n      subscriber,\n      subscriberName: options.subscriber,\n      subscriptionWeight: calculateSubscriptionWeight( eventName ),\n      options\n   };\n\n   const eventNameParts = eventName.split( TOPIC_SEPARATOR );\n   const node = eventNameParts.reduce( ( node, eventNamePart ) => {\n      const bucketName = eventNamePart || WILDCARD;\n      if( !( bucketName in node ) ) {\n         node[ bucketName ] = {};\n      }\n      return node[ bucketName ];\n   }, this.subscriberTree_ );\n\n   if( !( SUBSCRIBER_FIELD in node ) ) {\n      node[ SUBSCRIBER_FIELD ] = [];\n   }\n   node[ SUBSCRIBER_FIELD ].push( subscriberItem );\n\n   notifyInspectors( this, {\n      action: 'subscribe',\n      source: options.subscriber,\n      target: '-',\n      event: eventName,\n      cycleId: this.currentCycle_\n   } );\n\n   return () => {\n      unsubscribeRecursively( this, this.subscriberTree_, eventNameParts, subscriber );\n   };\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Asynchronously publishes an event on the event bus. The returned promise will be enqueued as soon as this\n * event is delivered and, if during delivery a new event was enqueued, resolved after that new event was\n * delivered. If no new event is published during delivery of this event, the promise is instantly resolved.\n * To make this a bit clearer, lets assume we publish and thus enqueue an event at time `t`. It then will\n * be delivered at time `t+1`. At that precise moment the promise is enqueued to be resolved soon. We then\n * distinguish between two cases:\n *\n * - At time `t+1` no subscriber publishes (i.e. enqueues) an event: Thus there is no event in the same\n *   cycle and the promise is also resolved at time `t+1`.\n * - At least one subscriber publishes an event at time `t+1`: The promise is then scheduled to be resolved\n *   as soon as this event is delivered at time `t+2`.\n *\n * The implication of this is the following:\n *\n * We have two collaborators, A and B. A listens to event b and B listens to event a.\n * Whenever A publishes a and B than instantly (i.e. in the same event cycle of the JavaScript runtime\n * where its subscriber function was called) *responds* by publishing b, b arrives at the subscriber\n * function of A, before the promise of A's publish action is resolved.\n * It is hence possible to observe possible effects of an event sent by oneself, under the conditions\n * mentioned above. Practically this is used internally for the implementation of\n * {@link #EventBus.publishAndGatherReplies()}.\n *\n * @param {String} eventName\n *    the name of the event to publish\n * @param {Object} [optionalEvent]\n *    the event to publish\n * @param {Object} [optionalOptions]\n *    additional options for the publish action\n * @param {String} [optionalOptions.sender=null]\n *    the id of the event sender. Default is `null`\n * @param {Boolean} [optionalOptions.deliverToSender=true]\n *    if `false` the event will not be send to subscribers whose subscriber name matches\n *    `optionalOptions.sender`, else all subscribers will receive the event. Default is `true`\n *\n * @return {Promise}\n  *   the delivery promise\n */\nEventBus.prototype.publish = function( eventName, optionalEvent = {}, optionalOptions = {} ) {\n   assert( eventName ).hasType( String ).isNotNull();\n\n   const event = JSON.parse( JSON.stringify( optionalEvent ) );\n   const options = { deliverToSender: true, sender: null, ...optionalOptions };\n\n   return new Promise( resolve => {\n      const eventItem = {\n         meta: {\n            name: eventName,\n            cycleId: this.currentCycle_ > -1 ? this.currentCycle_ : this.cycleCounter_++,\n            sender: options.sender,\n            initiator: null,\n            options\n         },\n         event,\n         resolvePublish: resolve\n      };\n      enqueueEvent( this, eventItem );\n\n      notifyInspectors( this, {\n         action: 'publish',\n         source: options.sender,\n         target: '-',\n         event: eventName,\n         eventObject: event,\n         cycleId: eventItem.meta.cycleId\n      } );\n   } );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Publishes an event that follows the *request-will-did pattern* and awaits all replies. This pattern has\n * evolved over time and is of great use when handling the asynchronous nature of event bus events.\n *\n * Certain rules need to be fulfilled: First the initiator needs to call this method with an event whose\n * name has the suffix `Request`, e.g. `takeActionRequest`. All collaborators that want to react to this\n * event then either do so in the same event cycle by sending a `didTakeAction` event or announce that they\n * will do something asynchronously by publishing a `willTakeAction` event. In the latter case they need to\n * broadcast the fulfillment of their action some time later by sending a `didTakeAction` event. Note that for\n * both events the same sender name needs to be given. Otherwise they cannot be mapped and the event bus\n * doesn't know if all asynchronous replies were already received.\n *\n * Additionally a timer is started using either the globally configured `pendingDidTimeout` ms value or the\n * value provided as option to this method. If that timer expires before all `did*` events to all given\n * `will*` events were received, the error handler is called to handle the incident and the promise is\n * rejected with all responses received up to now.\n *\n * @param {String} eventName\n *    the name of the event to publish\n * @param {Object} [optionalEvent]\n *    the event to publish\n * @param {Object} [optionalOptions]\n *    additional options for the publish action\n * @param {String} [optionalOptions.sender=null]\n *    the id of the event sender. Default is `null`\n * @param {Number} [optionalOptions.pendingDidTimeout]\n *    the timeout in milliseconds for pending did* events. Default is the timeout option used when the\n *    event bus instance was created\n *\n * @return {Promise}\n *   the delivery promise. It receives a list of all collected `did*` events and according meta information\n */\nEventBus.prototype.publishAndGatherReplies = function( eventName, optionalEvent, optionalOptions ) {\n   assert( eventName ).hasType( String ).isNotNull();\n\n   const matches = REQUEST_MATCHER.exec( eventName );\n   assert.state( !!matches, `Expected eventName to end with \"Request\" but got ${eventName}` );\n\n   const options = { pendingDidTimeout: this.timeoutMs_, ...optionalOptions };\n\n   let eventNameSuffix = matches[ 1 ].toUpperCase() + matches[ 2 ];\n   if( matches[ 3 ] ) {\n      eventNameSuffix += matches[ 3 ];\n   }\n   const deferred = {};\n   deferred.promise = new Promise( ( resolve, reject ) => {\n      deferred.resolve = resolve;\n      deferred.reject = reject;\n   } );\n   const willWaitingForDid = [];\n   const givenDidResponses = [];\n   let cycleFinished = false;\n\n   const unsubscribeWillCollector = this.subscribe( `will${eventNameSuffix}`, ( event, meta ) => {\n      assert( meta.sender ).hasType( String )\n         .isNotNull( 'A response with will to a request-event must contain a sender.' );\n\n      willWaitingForDid.push( meta.sender );\n   }, { subscriber: options.sender } );\n\n   const unsubscribeDidCollector = this.subscribe( `did${eventNameSuffix}`, ( event, meta ) => {\n      givenDidResponses.push( { event, meta } );\n      let senderIndex;\n      do {\n         senderIndex = willWaitingForDid.indexOf( meta.sender );\n         if( senderIndex !== -1 ) {\n            willWaitingForDid.splice( senderIndex, 1 );\n         }\n      } while( senderIndex !== -1 );\n\n      if( willWaitingForDid.length === 0 && cycleFinished ) {\n         finish();\n      }\n   }, { subscriber: options.sender } );\n\n\n   const timeoutRef = this.timeoutFunction_( () => {\n      if( willWaitingForDid.length > 0 ) {\n         const message = `Timeout while waiting for pending did${eventNameSuffix} on ${eventName}.`;\n         this.errorHandler_( message, {\n            'Sender': options.sender,\n            'After ms timeout': options.pendingDidTimeout,\n            'Responses missing from': willWaitingForDid.join( ', ' )\n         } );\n         finish( true );\n      }\n   }, options.pendingDidTimeout );\n\n   this.publish( eventName, optionalEvent, options )\n      .then( () => {\n         unsubscribeWillCollector();\n         if( willWaitingForDid.length === 0 ) {\n            // either there was no will or all did responses were already given in the same cycle as the will\n            finish();\n            return;\n         }\n         cycleFinished = true;\n      } );\n\n   function finish( wasCanceled ) {\n      clearTimeout( timeoutRef );\n      unsubscribeDidCollector();\n      ( wasCanceled ? deferred.reject : deferred.resolve )( givenDidResponses );\n   }\n\n   return deferred.promise;\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction enqueueEvent( self, eventItem ) {\n   if( self.eventQueue_.length === 0 ) {\n      self.nextTick_( () => {\n         const queuedEvents = self.eventQueue_;\n\n         self.eventQueue_ = [];\n\n         processWaitingPublishPromises( self, processQueue( self, queuedEvents ) );\n      } );\n   }\n   self.eventQueue_.push( eventItem );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction processQueue( self, queuedEvents ) {\n   return queuedEvents.map( eventItem => {\n      const meta = eventItem.meta;\n      self.currentCycle_ = meta.cycleId;\n\n      const subscribers = findSubscribers( self, meta.name );\n      if( subscribers.length === 0 ) {\n         self.currentCycle_ = -1;\n         return eventItem.resolvePublish;\n      }\n\n      let serializedEvent = null;\n      if( subscribers.length > 1 ) {\n         serializedEvent = JSON.stringify( eventItem.event );\n      }\n\n      const senderName = meta.sender;\n      const options = meta.options;\n\n      subscribers.forEach( subscriberItem => {\n         const subscriberName = subscriberItem.subscriberName;\n         if( !options.deliverToSender && senderName && senderName === subscriberName ) {\n            return;\n         }\n\n         try {\n            let event;\n            if( subscriberItem.options.clone ) {\n               event = serializedEvent ? JSON.parse( serializedEvent ) : eventItem.event;\n            }\n            else {\n               event = eventItem.event;\n            }\n            subscriberItem.subscriber( event, meta );\n         }\n         catch( e ) {\n            const message = `error while calling subscriber \"${subscriberName}\"` +\n               ` for event ${meta.name}` +\n               ` published by \"${senderName}\" (subscribed to: ${subscriberItem.name})`;\n            self.errorHandler_( message, {\n               'Exception': e,\n               'Published event': eventItem.event,\n               'Event meta information': meta,\n               'Caused by Subscriber': subscriberItem\n            } );\n         }\n\n         notifyInspectors( self, {\n            action: 'deliver',\n            source: senderName,\n            target: subscriberName,\n            event: meta.name,\n            eventObject: eventItem.event,\n            subscribedTo: subscriberItem.name,\n            cycleId: meta.cycleId\n         } );\n      } );\n\n      self.currentCycle_ = -1;\n\n      return eventItem.resolvePublish;\n   } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction processWaitingPublishPromises( self, newPromiseResolves ) {\n   const waitingResolves = self.waitingPromiseResolves_;\n   self.waitingPromiseResolves_ = newPromiseResolves;\n\n   waitingResolves.forEach( resolve => resolve() );\n\n   if( self.eventQueue_.length === 0 ) {\n      // nothing was queued by any subscriber. The publishers can instantly be notified of delivery.\n      newPromiseResolves.forEach( resolve => resolve() );\n      self.waitingPromiseResolves_ = [];\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction unsubscribeRecursively( self, node, parts, subscriber ) {\n   if( parts.length === 0 && Array.isArray( node[ SUBSCRIBER_FIELD ] ) ) {\n      const subscribers = node[ SUBSCRIBER_FIELD ];\n      for( let i = subscribers.length - 1; i >= 0; --i ) {\n         if( subscribers[ i ].subscriber === subscriber ) {\n            notifyInspectors( self, {\n               action: 'unsubscribe',\n               source: subscribers[ i ].subscriberName,\n               target: '-',\n               event: subscribers[ i ].name,\n               cycleId: self.currentCycle_\n            } );\n            subscribers.splice( i, 1 );\n         }\n      }\n   }\n\n   const [ part, ...rest ] = parts;\n   const searchPart = part || WILDCARD;\n   if( searchPart in node ) {\n      unsubscribeRecursively( self, node[ searchPart ], rest, subscriber );\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction findSubscribers( self, eventName ) {\n   const subscribers = [];\n   const parts = eventName.split( TOPIC_SEPARATOR );\n   const node = self.subscriberTree_;\n\n   findSubscribersRecursively( node, parts, subscribers );\n   subscribers.sort( ( a, b ) => {\n      const aWeight = a.subscriptionWeight;\n      const bWeight = b.subscriptionWeight;\n      if( aWeight[ 0 ] === bWeight[ 0 ] ) {\n         return bWeight[ 1 ] - aWeight[ 1 ];\n      }\n\n      return bWeight[ 0 ] - aWeight[ 0 ];\n   } );\n\n   return subscribers;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction findSubscribersRecursively( node, parts, subscribers ) {\n   if( Array.isArray( node[ SUBSCRIBER_FIELD ] ) ) {\n      subscribers.push( ...node[ SUBSCRIBER_FIELD ] );\n   }\n\n   if( parts.length === 0 ) {\n      return;\n   }\n\n   const [ part, ...remainder ] = parts;\n   if( part.indexOf( SUB_TOPIC_SEPARATOR ) !== -1 ) {\n      let index = part.length;\n      let currentPart = part;\n      do {\n         currentPart = currentPart.substring( 0, index );\n         if( currentPart in node ) {\n            findSubscribersRecursively( node[ currentPart ], remainder, subscribers );\n         }\n         index = currentPart.lastIndexOf( SUB_TOPIC_SEPARATOR );\n      }\n      while( index !== -1 );\n   }\n   else if( part in node ) {\n      findSubscribersRecursively( node[ part ], remainder, subscribers );\n   }\n\n   if( WILDCARD in node ) {\n      findSubscribersRecursively( node[ WILDCARD ], remainder, subscribers );\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction calculateSubscriptionWeight( eventName ) {\n   const parts = eventName.split( TOPIC_SEPARATOR );\n   const weight = [ 0, 0 ];\n   parts.forEach( part => {\n      if( part.length > 0 ) {\n         weight[ 0 ]++;\n         weight[ 1 ] += part.split( SUB_TOPIC_SEPARATOR ).length - 1;\n      }\n   } );\n   return weight;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction notifyInspectors( self, infoObject ) {\n   self.inspectors_.forEach( inspector => {\n      inspector( infoObject );\n   } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction createLogErrorHandler( log ) {\n   return ( message, optionalErrorInformation ) => {\n      const sensitiveData = [ 'Published event' ];\n\n      log.error( `EventBus: ${message}` );\n\n      if( optionalErrorInformation ) {\n         object.forEach( optionalErrorInformation, ( info, title ) => {\n            let formatString = '   - [0]: [1:%o]';\n            if( sensitiveData.indexOf( title ) !== -1 ) {\n               formatString = '   - [0]: [1:%o:anonymize]';\n            }\n\n            log.error( formatString, title, info );\n\n            if( info instanceof Error && info.stack ) {\n               log.error( `   - Stacktrace: ${info.stack}` );\n            }\n         } );\n      }\n   };\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates and returns a new event bus instance using the given configuration.\n *\n * @param {Object} configuration\n *    configuration for the event bus instance.\n *    The key `eventBusTimeoutMs` is used to determine the will/did timeout.\n * @param {Object} log\n *    a logger to use for error reporting\n * @param {Function} nextTick\n *    a next tick function like `process.nextTick` or AngularJS' `$timeout`\n * @param {Function} timeoutFunction\n *    a timeout function like `window.setTimeout` or AngularJS' `$timeout`\n * @param {Function} [errorHandler]\n *    a custom handler for thrown exceptions. By default exceptions are logged using the global logger.\n *\n * @return {EventBus}\n *    an event bus instance\n *\n * @private\n */\nexport function create( configuration, log, nextTick, timeoutFunction, errorHandler ) {\n   assert( configuration.ensure ).hasType( Function ).isNotNull();\n   assert( log.error ).hasType( Function ).isNotNull();\n   assert( nextTick ).hasType( Function ).isNotNull();\n   assert( timeoutFunction ).hasType( Function ).isNotNull();\n   assert( errorHandler ).hasType( Function );\n\n   return new EventBus( configuration, log, nextTick, timeoutFunction, errorHandler );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/event_bus.js","/**\n* Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport assert from '../utilities/assert';\nimport { deepClone } from '../utilities/object';\n\nconst NOT_FOUND = { content: null };\n\nexport function create( artifacts, browser, configuration, log ) {\n\n   const baseHref = configuration.get( 'baseHref' );\n\n   const resolve = baseHref ?\n      ( _ => browser.resolve( _, baseHref ) ) :\n      ( _ => _ );\n\n   const [ themeRef, themeName ] = ( themeRef => {\n      const themeIndex = artifacts.aliases.themes[ themeRef ];\n      const theme = artifacts.themes[ themeIndex ];\n      if( !theme ) {\n         log.error( `The configured theme ${themeRef} is not available.` );\n         return [ 'default', 'default.theme' ];\n      }\n      return [ themeRef, theme.descriptor.name ];\n   } )( configuration.ensure( 'theme' ) );\n\n   return {\n      forFlow: makeProvider( 'flows', [ 'descriptor' ], [ 'definition' ] ),\n      forTheme: makeProvider( 'themes', [ 'descriptor', 'assets' ] ).bind( null, themeRef ),\n      forPage: makeProvider( 'pages', [ 'descriptor' ], [ 'definition' ] ),\n      forLayout: makeProvider( 'layouts', [ 'descriptor', 'assets' ] ),\n      forWidget: makeProvider( 'widgets', [ 'descriptor', 'assets', 'module' ] ),\n      forControl: makeProvider( 'controls', [ 'descriptor', 'assets', 'module' ] )\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function makeProvider( bucket, keys = [], cloneKeys = [] ) {\n      return ref => {\n         const api = {};\n         const index = artifacts.aliases[ bucket ][ ref ];\n         const artifactPromise = index === undefined ?\n            Promise.reject( new Error( `Artifact ${ref} not found in ${bucket}` ) ) :\n            Promise.resolve( artifacts[ bucket ][ index ] );\n\n         [ 'definition', 'module', 'descriptor' ].forEach( key => {\n            if( cloneKeys.includes( key ) ) {\n               api[ key ] = () => artifactPromise.then( _ => deepClone( _[ key ] ) );\n            }\n            else if( keys.includes( key ) ) {\n               api[ key ] = () => artifactPromise.then( _ => _[ key ] );\n            }\n         } );\n\n         if( keys.includes( 'assets' ) ) {\n            const lookup = name => {\n               assert( name ).hasType( String ).isNotNull();\n               return ({ assets = {} }) => {\n                  return assets[ name ] || NOT_FOUND;\n               };\n            };\n\n            const lookupForTheme = name => {\n               assert( name ).hasType( String ).isNotNull();\n               return ({ assets = {} }) => {\n                  const themedAssets = assets[ themeName ];\n                  if( themedAssets && themedAssets[ name ] ) {\n                     return themedAssets[ name ];\n                  }\n                  const defaultAssets = assets[ 'default.theme' ];\n                  if( defaultAssets && defaultAssets[ name ] ) {\n                     return defaultAssets[ name ];\n                  }\n                  return NOT_FOUND;\n               };\n            };\n\n            const provide = ({ url, content }) => {\n               if( content == null && url ) {\n                  return browser.fetch( resolve( url ) ).then( _ => _.text() );\n               }\n               return content || null;\n            };\n\n            const provideUrl = ({ url }) => url ? resolve( url ) : null;\n\n            api.asset = name => artifactPromise\n               .then( lookup( name ) )\n               .then( provide );\n\n            api.assetUrl = name => artifactPromise\n               .then( lookup( name ) )\n               .then( provideUrl );\n\n            api.assetForTheme = name => artifactPromise\n               .then( lookupForTheme( name ) )\n               .then( provide );\n\n            api.assetUrlForTheme = name => artifactPromise\n               .then( lookupForTheme( name ) )\n               .then( provideUrl );\n         }\n\n         return api;\n      };\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/artifact_provider.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * The control loader helps to load control assets and implementations.\n *\n * @module control_loader\n */\nimport { format } from '../utilities/string';\n\nexport function create( artifactProvider, cssLoader ) {\n\n   const notDeclaredMessage =\n      'Tried to load control reference [0] without declaration in widget.json.\\nDetails: [1]';\n   const errorInfoLink =\n      'https://github.com/LaxarJS/laxar/blob/master/docs/manuals/providing_controls.md#compatibility';\n\n   const aliases = {};\n   const modules = {};\n\n   /**\n    * @constructor\n    * @name ControlLoader\n    */\n   return {\n      load,\n      provide\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Provides the implementation module of the given control, for manual instantiation by a widget.\n    *\n    * Because the method must return synchronously, it may only be called for controls that have been\n    * loaded before (using {@link #load()})!\n    * For controls that are correctly listed in the `controls` section of the `widget.json`, this is ensured\n    * by the widget loader.\n    *\n    * @param {String} controlRef\n    *   a valid control reference as used in the `widget.json`\n    *\n    * @return {*}\n    *   the module for the requested control reference\n    *\n    * @memberof ControlLoader\n    */\n   function provide( controlRef ) {\n      const module = modules[ aliases[ controlRef ] ];\n      if( !module ) {\n         const message = format( `axControls: ${notDeclaredMessage}`, [ controlRef, errorInfoLink ] );\n         throw new Error( message );\n      }\n      return module;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Fetches the descriptor for a given control reference, and saves it as a side-effect.\n    * This is part of the internal API used by the widget loader.\n    *\n    * This process must be completed before the descriptor or the module for a control can be provided.\n    * For this reason, `load` is called by the widget-loader, using information from the `widget.json` file.\n    *\n    * @param {String} controlRef\n    *   a valid control reference as used in the `widget.json`\n    *\n    * @return {Promise}\n    *   a promise for the (fetched or synthesized) control descriptor\n    *\n    * @memberof ControlLoader\n    */\n   function load( controlRef ) {\n      const { assetUrlForTheme, descriptor, module } = artifactProvider.forControl( controlRef );\n      return Promise.all( [ descriptor(), module() ] )\n         .then( ([ descriptor, module ]) => {\n            const { name } = descriptor;\n            aliases[ controlRef ] = name;\n            modules[ name ] = module;\n            return assetUrlForTheme( descriptor.styleSource || `css/${name}.css` )\n               .then( url => {\n                  if( url ) {\n                     cssLoader.load( url );\n                  }\n               } )\n               .then( () => descriptor );\n         } );\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/control_loader.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\nexport function create() {\n   const mergedCssFileLoaded = Array.from( document.getElementsByTagName( 'link' ) )\n      .some( link => link.hasAttribute( 'data-ax-merged-css' ) );\n\n   if( mergedCssFileLoaded ) {\n      return { load() {} };\n   }\n\n   const loadedFiles = [];\n   return {\n      /**\n       * If not already loaded, loads the given file into the current page by appending a `link` element to\n       * the document's `head` element.\n       *\n       * @param {String} url\n       *    the url of the css file to load. If `null`, loading is skipped\n       */\n      load( url ) {\n         if( !loadedFiles.includes( url ) ) {\n            const element = document.createElement( 'link' );\n            element.type = 'text/css';\n            element.id = `cssLoaderStyleSheet${loadedFiles.length}`;\n            element.rel = 'stylesheet';\n            element.href = url;\n            document.getElementsByTagName( 'head' )[ 0 ].appendChild( element );\n\n            loadedFiles.push( url );\n         }\n      }\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/css_loader.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\nexport function create( artifactProvider, cssLoader ) {\n   return {\n      load( layoutRef ) {\n         const { descriptor, assetForTheme, assetUrlForTheme } = artifactProvider.forLayout( layoutRef );\n         return descriptor()\n            .then( ({ name, templateSource, styleSource }) => Promise.all( [\n               assetForTheme( templateSource || `${name}.html` ),\n               assetUrlForTheme( styleSource || `css/${name}.css` ),\n               Promise.resolve( name )\n            ] ) )\n            .then( ([ html, cssUrl, name ]) => {\n               if( cssUrl ) {\n                  cssLoader.load( cssUrl );\n               }\n               return { name, className: `${name}-layout`, html };\n            } );\n      }\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/layout_loader.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport assert from '../utilities/assert';\nimport * as object from '../utilities/object';\nimport * as string from '../utilities/string';\nimport { create as createJsonValidator } from '../utilities/json_validator';\nimport * as featuresProvider from './features_provider';\nimport pageSchema from 'json!../../static/schemas/page.json';\nimport { FLAT, COMPACT } from '../tooling/pages';\n\nconst SEGMENTS_MATCHER = /[_/-]./g;\n\nconst ID_SEPARATOR = '-';\nconst ID_SEPARATOR_MATCHER = /\\-/g;\nconst SUBTOPIC_SEPARATOR = '+';\n\nconst COMPOSITION_EXPRESSION_MATCHER = /^(!?)\\$\\{([^}]+)\\}$/;\nconst COMPOSITION_TOPIC_PREFIX = 'topic:';\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction PageLoader( artifactProvider, pageCollector ) {\n   this.artifactProvider_ = artifactProvider;\n   this.pageToolingCollector_ = pageCollector;\n   this.idCounter_ = 0;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Loads a page specification and resolves all extension and compositions. The result is a page were all\n * referenced page fragments are merged in to one JavaScript object. As loading of all relevant files is\n * already asynchronous, this method is also asynchronous and thus returns a promise that is either\n * resolved with the constructed page or rejected with a JavaScript `Error` instance.\n *\n * @param {String} pageRef\n *    the page to load. Usually a path relative to the base url, with the `.json` suffix omitted\n *\n * @return {Promise}\n *    the result promise\n *\n * @private\n */\nPageLoader.prototype.load = function( pageRef ) {\n   return loadPageRecursively( this, pageRef, [] );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction loadPageRecursively( self, pageRef, extensionChain ) {\n   let page;\n\n   if( extensionChain.includes( pageRef ) ) {\n      throwError(\n         { name: pageRef },\n         `Cycle in page extension detected: ${extensionChain.concat( [ pageRef ] ).join( ' -> ' )}`\n      );\n   }\n\n   const { definition, descriptor } = self.artifactProvider_.forPage( pageRef );\n\n   return Promise.all( [ definition(), descriptor() ] )\n      .then( ([ foundPage, descriptor ]) => {\n         validatePage( foundPage, pageRef );\n\n         page = foundPage;\n         page.name = descriptor.name;\n\n         if( !page.areas ) {\n            page.areas = {};\n         }\n      } )\n      .then( () => processExtends( self, page, extensionChain ) )\n      .then( () => {\n         generateMissingIds( self, page );\n         // we need to check ids before and after expanding compositions\n         checkForDuplicateIds( self, page );\n         return processCompositions( self, page, pageRef );\n      } )\n      .then( () => {\n         checkForDuplicateIds( self, page );\n         removeDisabledWidgets( self, page );\n      } )\n      .then( () => {\n         self.pageToolingCollector_.collectPageDefinition( pageRef, page, FLAT );\n         return page;\n      } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//\n// Processing inheritance (i.e. the `extends` keyword)\n//\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction processExtends( self, page, extensionChain ) {\n   if( has( page, 'extends' ) ) {\n      return loadPageRecursively( self, page[ 'extends' ], extensionChain.concat( [ page.name ] ) )\n         .then( basePage => {\n            mergePageWithBasePage( page, basePage );\n         } );\n   }\n   return Promise.resolve();\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction mergePageWithBasePage( page, basePage ) {\n   const extendingAreas = page.areas;\n   const mergedPageAreas = object.deepClone( basePage.areas );\n   if( has( basePage, 'layout' ) ) {\n      if( has( page, 'layout' ) ) {\n         throwError( page, string.format( 'Page overwrites layout set by base page \"[name]', basePage ) );\n      }\n      page.layout = basePage.layout;\n   }\n\n   object.forEach( extendingAreas, ( widgets, areaName ) => {\n      if( !( areaName in mergedPageAreas ) ) {\n         mergedPageAreas[ areaName ] = widgets;\n         return;\n      }\n\n      mergeWidgetLists( mergedPageAreas[ areaName ], widgets, page );\n   } );\n\n   page.areas = mergedPageAreas;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//\n// Processing compositions\n//\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction processCompositions( self, topPage, topPageRef ) {\n\n   return processNestedCompositions( topPage, null, [] );\n\n   function processNestedCompositions( page, instanceId, compositionChain ) {\n\n      let promise = Promise.resolve();\n\n      object.forEach( page.areas, widgets => {\n         widgets.slice().reverse().forEach( widgetSpec => {\n            if( widgetSpec.enabled === false ) {\n               return;\n            }\n            ensureWidgetSpecHasId( self, widgetSpec );\n\n            if( !has( widgetSpec, 'composition' ) ) {\n               return;\n            }\n            const compositionRef = widgetSpec.composition;\n            if( compositionChain.includes( compositionRef ) ) {\n               const chainString = compositionChain.concat( [ compositionRef ] ).join( ' -> ' );\n               const message = `Cycle in compositions detected: ${chainString}`;\n               throwError( topPage, message );\n            }\n\n            // Compositions must be loaded sequentially, because replacing the widgets in the page needs to\n            // take place in order. Otherwise the order of widgets could be messed up.\n            promise = promise\n               .then( () => self.artifactProvider_.forPage( compositionRef ).definition() )\n               .then( composition => prefixCompositionIds( composition, widgetSpec ) )\n               .then( composition =>\n                  processCompositionExpressions( composition, widgetSpec, message => {\n                     throwError(\n                        { name: page.name },\n                        `Error loading composition \"${compositionRef}\" (id: \"${widgetSpec.id}\"). ${message}`\n                     );\n                  } )\n               )\n               .then( composition => {\n                  const chain = compositionChain.concat( compositionRef );\n                  return processNestedCompositions( composition, widgetSpec.id, chain )\n                     .then( () => {\n                        self.pageToolingCollector_.collectCompositionDefinition(\n                           topPageRef,\n                           widgetSpec.id,\n                           composition,\n                           FLAT\n                        );\n                        return composition;\n                     } );\n               } )\n               .then( composition => {\n                  mergeCompositionAreasWithPageAreas( composition, page, widgets, widgetSpec );\n               } );\n         } );\n      } );\n\n      // now that all IDs have been created, we can store a copy of the page prior to composition expansion\n      if( page === topPage ) {\n         self.pageToolingCollector_.collectPageDefinition( topPageRef, page, COMPACT );\n      }\n      else {\n         self.pageToolingCollector_.collectCompositionDefinition( topPageRef, instanceId, page, COMPACT );\n      }\n\n      return promise;\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction mergeCompositionAreasWithPageAreas( composition, page, widgets, compositionSpec ) {\n   object.forEach( composition.areas, ( compositionAreaWidgets, areaName ) => {\n      if( areaName === '.' ) {\n         insertAfterEntry( widgets, compositionSpec, compositionAreaWidgets );\n         return;\n      }\n\n      if( !( areaName in page.areas ) ) {\n         page.areas[ areaName ] = compositionAreaWidgets;\n         return;\n      }\n\n      mergeWidgetLists( page.areas[ areaName ], compositionAreaWidgets, page );\n   } );\n\n   removeEntry( widgets, compositionSpec );\n\n   function insertAfterEntry( arr, entry, replacements ) {\n      const index = arr.indexOf( entry );\n      arr.splice( index, 0, ...replacements );\n   }\n\n   function removeEntry( arr, entry ) {\n      const index = arr.indexOf( entry );\n      arr.splice( index, 1 );\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction prefixCompositionIds( composition, widgetSpec ) {\n   const prefixedAreas = {};\n   object.forEach( composition.areas, ( widgets, areaName ) => {\n      widgets.forEach( widget => {\n         if( has( widget, 'id' ) ) {\n            widget.id = widgetSpec.id + ID_SEPARATOR + widget.id;\n         }\n      } );\n\n      if( areaName.indexOf( '.' ) > 0 ) {\n         // All areas prefixed with a local widget id need to be prefixed as well\n         prefixedAreas[ widgetSpec.id + ID_SEPARATOR + areaName ] = widgets;\n         return;\n      }\n\n      prefixedAreas[ areaName ] = widgets;\n   } );\n   composition.areas = prefixedAreas;\n   return composition;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction processCompositionExpressions( composition, widgetSpec, throwPageError ) {\n   const expressionData = {};\n\n   // feature definitions in compositions may contain generated topics for default resource names or action\n   // topics. As such these are generated before instantiating the composition's features.\n   composition.features = iterateOverExpressions( composition.features || {}, replaceExpression );\n   expressionData.features = featuresProvider.featuresForWidget( composition, widgetSpec, throwPageError );\n\n   if( typeof composition.mergedFeatures === 'object' ) {\n      const mergedFeatures = iterateOverExpressions( composition.mergedFeatures, replaceExpression );\n\n      Object.keys( mergedFeatures ).forEach( featurePath => {\n         const currentValue = object.path( expressionData.features, featurePath, [] );\n         const values = mergedFeatures[ featurePath ];\n         object.setPath( expressionData.features, featurePath, values.concat( currentValue ) );\n      } );\n   }\n\n   composition.areas = iterateOverExpressions( composition.areas, replaceExpression );\n\n   function replaceExpression( subject ) {\n      const matches = subject.match( COMPOSITION_EXPRESSION_MATCHER );\n      if( !matches ) {\n         return subject;\n      }\n\n      const possibleNegation = matches[ 1 ];\n      const expression = matches[ 2 ];\n      let result;\n      if( expression.indexOf( COMPOSITION_TOPIC_PREFIX ) === 0 ) {\n         result = topicFromId( widgetSpec.id ) +\n            SUBTOPIC_SEPARATOR + expression.substr( COMPOSITION_TOPIC_PREFIX.length );\n      }\n      else {\n         result = object.path( expressionData, expression );\n      }\n\n      return typeof result === 'string' && possibleNegation ? possibleNegation + result : result;\n   }\n\n   return composition;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction iterateOverExpressions( obj, replacer ) {\n   if( obj === null ) {\n      return obj;\n   }\n\n   if( Array.isArray( obj ) ) {\n      return obj\n         .map( value => {\n            if( typeof value === 'object' ) {\n               return iterateOverExpressions( value, replacer );\n            }\n\n            return typeof value === 'string' ? replacer( value ) : value;\n         } )\n         .filter( _ => _ !== undefined );\n   }\n\n   const result = {};\n   object.forEach( obj, ( value, key ) => {\n      const replacedKey = replacer( key );\n      if( typeof value === 'object' ) {\n         result[ replacedKey ] = iterateOverExpressions( value, replacer );\n         return;\n      }\n\n      const replacedValue = typeof value === 'string' ? replacer( value ) : value;\n      if( typeof replacedValue !== 'undefined' ) {\n         result[ replacedKey ] = replacedValue;\n      }\n   } );\n\n   return result;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//\n// Additional Tasks\n//\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction removeDisabledWidgets( self, page ) {\n   object.forEach( page.areas, ( widgetList, index ) => {\n      page.areas[ index ] = widgetList.filter( widgetSpec => widgetSpec.enabled !== false );\n   } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction checkForDuplicateIds( self, page ) {\n   const idCount = {};\n\n   object.forEach( page.areas, widgetList => {\n      object.forEach( widgetList, widgetSpec => {\n         idCount[ widgetSpec.id ] = idCount[ widgetSpec.id ] ? idCount[ widgetSpec.id ] + 1 : 1;\n      } );\n   } );\n\n   const duplicates = Object.keys( idCount ).filter( widgetId => idCount[ widgetId ] > 1 );\n\n   if( duplicates.length ) {\n      throwError( page, `Duplicate widget/composition ID(s): ${duplicates.join( ', ' )}` );\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction generateDefaultWidgetSpecName( widgetSpec ) {\n   return artifactName().replace( SEGMENTS_MATCHER, dashToCamelcase );\n\n   function artifactName() {\n      if( widgetSpec.hasOwnProperty( 'widget' ) ) {\n         return widgetSpec.widget.split( '/' ).pop();\n      }\n      if( widgetSpec.hasOwnProperty( 'composition' ) ) {\n         return widgetSpec.composition;\n      }\n      if( widgetSpec.hasOwnProperty( 'layout' ) ) {\n         return widgetSpec.layout;\n      }\n      // Assume that non-standard items do not require a specific name.\n      return '';\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction ensureWidgetSpecHasId( self, widgetSpec ) {\n   if( widgetSpec.hasOwnProperty( 'id' ) ) {\n      return;\n   }\n   widgetSpec.id = nextId( self, generateDefaultWidgetSpecName( widgetSpec ) );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction generateMissingIds( self, page ) {\n   object.forEach( page.areas, widgetList => {\n      object.forEach( widgetList, widgetSpec => {\n         ensureWidgetSpecHasId( self, widgetSpec );\n      } );\n   } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction validatePage( foundPage, pageName ) {\n   const errors = createJsonValidator( pageSchema ).validate( foundPage );\n   if( errors.length ) {\n      const errorString = errors\n         .reduce( ( errorString, errorItem ) => `${errorString}\\n - ${errorItem.message}`, '' );\n\n      throwError( { name: pageName }, `Schema validation failed: ${errorString}` );\n   }\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//\n// Common functionality and utility functions\n//\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction mergeWidgetLists( targetList, sourceList, page ) {\n   sourceList.forEach( widgetConfiguration => {\n      if( widgetConfiguration.insertBeforeId ) {\n         for( let i = 0, length = targetList.length; i < length; ++i ) {\n            if( targetList[ i ].id === widgetConfiguration.insertBeforeId ) {\n               targetList.splice( i, 0, widgetConfiguration );\n               return;\n            }\n         }\n\n         throwError( page,\n            string.format(\n               'No id found that matches insertBeforeId value \"[insertBeforeId]\"',\n               widgetConfiguration\n            )\n         );\n      }\n\n      targetList.push( widgetConfiguration );\n   } );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction has( object, what ) {\n   return typeof object[ what ] === 'string' && object[ what ].length;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction nextId( self, prefix ) {\n   return `${prefix}${ID_SEPARATOR}id${self.idCounter_++}`;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction dashToCamelcase( segmentStart ) {\n   return segmentStart.charAt( 1 ).toUpperCase();\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction topicFromId( id ) {\n   return id.replace( ID_SEPARATOR_MATCHER, SUBTOPIC_SEPARATOR ).replace( SEGMENTS_MATCHER, dashToCamelcase );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction throwError( page, message ) {\n   const text = string.format( 'Error loading page \"[name]\": [0]', [ message ], page );\n   throw new Error( text );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates and returns a new page loader instance.\n *\n * @param {ArtifactProvider} artifactProvider\n *    an ArtifactProvider to load application assets\n * @param {PagesCollector} pagesCollector\n *    a tooling collector to consume page and composition information\n *\n * @return {PageLoader}\n *    a page loader instance\n *\n * @private\n */\nexport function create( artifactProvider, pagesCollector ) {\n   assert( artifactProvider ).isNotNull();\n   assert( pagesCollector ).isNotNull();\n\n   return new PageLoader( artifactProvider, pagesCollector );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/page_loader.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * A wrapper around `jjv` and `jjve` for JSON validation.\n * Enhances error messages and adds some other optional convenience.\n *\n * @module json_validator\n * @private\n */\n\nimport jjv from 'jjv';\nimport jjve from 'jjve';\n\nexport const JSON_SCHEMA_V4_URI = 'http://json-schema.org/draft-04/schema#';\n\n/**\n * Creates and returns a new JSON validator for schema draft version 4.\n * Version detection for v4 takes place by checking if the `$schema` property of the root schema equals the\n * uri `http://json-schema.org/draft-04/schema#`.\n * Missing or other values for `$schema` will lead to an error.\n *\n * It returns an object with `validate` function, accepting the object to validate against the `jsonSchema`,\n * and it returns an array containing all errors found.\n * If the array is empty, no errors were found.\n * If `optionalOptions.useDefault` was set to `true`, calling `valdate` will modify the argument object by\n * adding missing default values.\n *\n * @param {Object} jsonSchema\n *    the JSON schema to use when validating\n * @param {Object} [optionalOptions]\n *    an optional set of options\n * @param {Boolean} [optionalOptions.prohibitAdditionalProperties=false]\n *    sets additionalProperties to false if not defined otherwise for the according object schema\n * @param {Boolean} [optionalOptions.checkRequired=true]\n *    (jjv option) if `true` it reports missing required properties, otherwise it allows missing\n *    required properties. Default is `true`\n * @param {Boolean} [optionalOptions.useDefault=false]\n *    (jjv option) If true it modifies the validated object to have the default values for missing\n *    non-required fields. Default is `false`\n * @param {Boolean} [optionalOptions.useCoerce=false]\n *    (jjv option) if `true` it enables type coercion where defined. Default is `false`\n * @param {Boolean} [optionalOptions.removeAdditional=false]\n *    (jjv option) if `true` it removes all attributes of an object which are not matched by the\n *    schema's specification. Default is `false`\n *\n * @return {Object}\n *    a new instance of JsonValidator\n */\nexport function create( jsonSchema, optionalOptions = {} ) {\n\n   const env = jjv();\n   const options = {\n      prohibitAdditionalProperties: false,\n      ...optionalOptions\n   };\n   Object.assign( env.defaultOptions, options );\n\n   if( !( '$schema' in jsonSchema ) ) {\n      throw new Error( 'Missing schema version. Use the $schema property to define it.' );\n   }\n\n   if( jsonSchema.$schema !== JSON_SCHEMA_V4_URI ) {\n      throw new Error(\n         `Unsupported schema version \"${jsonSchema.$schema}\". Only V4 is supported: \"${JSON_SCHEMA_V4_URI}\".`\n      );\n   }\n\n   if( options.prohibitAdditionalProperties ) {\n      prohibitAdditionalProperties( jsonSchema );\n   }\n\n   const origValidate = env.validate;\n\n   env.validate = object => {\n      const result = origValidate.call( env, jsonSchema, object );\n      return !result ? [] : jjve( env )( jsonSchema, object, result )\n         .map( err => ({ ...err, message: `${err.message}. Path: \"${err.path}\".` }) );\n   };\n\n   return env;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction prohibitAdditionalProperties( schema ) {\n   if( ( 'properties' in schema || 'patternProperties' in schema ) &&\n   !( 'additionalProperties' in schema ) ) {\n      schema.additionalProperties = false;\n   }\n\n   if( 'properties' in schema ) {\n      Object.keys( schema.properties ).forEach( name => {\n         prohibitAdditionalProperties( schema.properties[ name ] );\n      } );\n   }\n\n   if( 'additionalProperties' in schema && typeof schema.additionalProperties === 'object' ) {\n      prohibitAdditionalProperties( schema.additionalProperties );\n   }\n\n   if( 'patternProperties' in schema ) {\n      Object.keys( schema.patternProperties ).forEach( pattern => {\n         prohibitAdditionalProperties( schema.patternProperties[ pattern ] );\n      } );\n   }\n\n   if( 'items' in schema ) {\n      prohibitAdditionalProperties( schema.items );\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/utilities/json_validator.js","module.exports = require('./lib/jjv.js');\n\n\n\n// WEBPACK FOOTER //\n// ./~/jjv/index.js","/* jshint proto: true */\n\n/**\n * jjv.js -- A javascript library to validate json input through a json-schema.\n *\n * Copyright (c) 2013 Alex Cornejo.\n *\n * Redistributable under a MIT-style open source license.\n */\n\n(function () {\n  var clone = function (obj) {\n      // Handle the 3 simple types (string, number, function), and null or undefined\n      if (obj === null || typeof obj !== 'object') return obj;\n      var copy;\n\n      // Handle Date\n      if (obj instanceof Date) {\n          copy = new Date();\n          copy.setTime(obj.getTime());\n          return copy;\n      }\n\n      // handle RegExp\n      if (obj instanceof RegExp) {\n        copy = new RegExp(obj);\n        return copy;\n      }\n\n      // Handle Array\n      if (obj instanceof Array) {\n          copy = [];\n          for (var i = 0, len = obj.length; i < len; i++)\n              copy[i] = clone(obj[i]);\n          return copy;\n      }\n\n      // Handle Object\n      if (obj instanceof Object) {\n          copy = {};\n//           copy = Object.create(Object.getPrototypeOf(obj));\n          for (var attr in obj) {\n              if (obj.hasOwnProperty(attr))\n                copy[attr] = clone(obj[attr]);\n          }\n          return copy;\n      }\n\n      throw new Error(\"Unable to clone object!\");\n  };\n\n  var clone_stack = function (stack) {\n    var new_stack = [ clone(stack[0]) ], key = new_stack[0].key, obj = new_stack[0].object;\n    for (var i = 1, len = stack.length; i< len; i++) {\n      obj = obj[key];\n      key = stack[i].key;\n      new_stack.push({ object: obj, key: key });\n    }\n    return new_stack;\n  };\n\n  var copy_stack = function (new_stack, old_stack) {\n    var stack_last = new_stack.length-1, key = new_stack[stack_last].key;\n    old_stack[stack_last].object[key] = new_stack[stack_last].object[key];\n  };\n\n  var handled = {\n    'type': true,\n    'not': true,\n    'anyOf': true,\n    'allOf': true,\n    'oneOf': true,\n    '$ref': true,\n    '$schema': true,\n    'id': true,\n    'exclusiveMaximum': true,\n    'exclusiveMininum': true,\n    'properties': true,\n    'patternProperties': true,\n    'additionalProperties': true,\n    'items': true,\n    'additionalItems': true,\n    'required': true,\n    'default': true,\n    'title': true,\n    'description': true,\n    'definitions': true,\n    'dependencies': true\n  };\n\n  var fieldType = {\n    'null': function (x) {\n      return x === null;\n    },\n    'string': function (x) {\n      return typeof x === 'string';\n    },\n    'boolean': function (x) {\n      return typeof x === 'boolean';\n    },\n    'number': function (x) {\n      // Use x === x instead of !isNaN(x) for speed\n      return typeof x === 'number' && x === x;\n    },\n    'integer': function (x) {\n      return typeof x === 'number' && x%1 === 0;\n    },\n    'object': function (x) {\n      return x && typeof x === 'object' && !Array.isArray(x);\n    },\n    'array': function (x) {\n      return Array.isArray(x);\n    },\n    'date': function (x) {\n      return x instanceof Date;\n    }\n  };\n\n  // missing: uri, date-time, ipv4, ipv6\n  var fieldFormat = {\n    'alpha': function (v) {\n      return (/^[a-zA-Z]+$/).test(v);\n    },\n    'alphanumeric': function (v) {\n      return (/^[a-zA-Z0-9]+$/).test(v);\n    },\n    'identifier': function (v) {\n      return (/^[-_a-zA-Z0-9]+$/).test(v);\n    },\n    'hexadecimal': function (v) {\n      return (/^[a-fA-F0-9]+$/).test(v);\n    },\n    'numeric': function (v) {\n      return (/^[0-9]+$/).test(v);\n    },\n    'date-time': function (v) {\n      return !isNaN(Date.parse(v)) && v.indexOf('/') === -1;\n    },\n    'uppercase': function (v) {\n      return v === v.toUpperCase();\n    },\n    'lowercase': function (v) {\n      return v === v.toLowerCase();\n    },\n    'hostname': function (v) {\n      return v.length < 256 && (/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$/).test(v);\n    },\n    'uri': function (v) {\n      return (/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/).test(v);\n    },\n    'email': function (v) { // email, ipv4 and ipv6 adapted from node-validator\n      return (/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/).test(v);\n    },\n    'ipv4': function (v) {\n      if ((/^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$/).test(v)) {\n        var parts = v.split('.').sort();\n        if (parts[3] <= 255)\n          return true;\n      }\n      return false;\n    },\n    'ipv6': function(v) {\n      return (/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/).test(v);\n     /*  return (/^::|^::1|^([a-fA-F0-9]{1,4}::?){1,7}([a-fA-F0-9]{1,4})$/).test(v); */\n    }\n  };\n\n  var fieldValidate = {\n    'readOnly': function (v, p) {\n      return false;\n    },\n    // ****** numeric validation ********\n    'minimum': function (v, p, schema) {\n      return !(v < p || schema.exclusiveMinimum && v <= p);\n    },\n    'maximum': function (v, p, schema) {\n      return !(v > p || schema.exclusiveMaximum && v >= p);\n    },\n    'multipleOf': function (v, p) {\n      return (v/p)%1 === 0 || typeof v !== 'number';\n    },\n    // ****** string validation ******\n    'pattern': function (v, p) {\n      if (typeof v !== 'string')\n        return true;\n      var pattern, modifiers;\n      if (typeof p === 'string')\n        pattern=p;\n      else {\n        pattern=p[0];\n        modifiers=p[1];\n      }\n      var regex = new RegExp(pattern, modifiers);\n      return regex.test(v);\n    },\n    'minLength': function (v, p) {\n      return v.length >= p || typeof v !== 'string';\n    },\n    'maxLength': function (v, p) {\n      return v.length <= p || typeof v !== 'string';\n    },\n    // ***** array validation *****\n    'minItems': function (v, p) {\n      return v.length >= p || !Array.isArray(v);\n    },\n    'maxItems': function (v, p) {\n      return v.length <= p || !Array.isArray(v);\n    },\n    'uniqueItems': function (v, p) {\n      var hash = {}, key;\n      for (var i = 0, len = v.length; i < len; i++) {\n        key = JSON.stringify(v[i]);\n        if (hash.hasOwnProperty(key))\n          return false;\n        else\n          hash[key] = true;\n      }\n      return true;\n    },\n    // ***** object validation ****\n    'minProperties': function (v, p) {\n      if (typeof v !== 'object')\n        return true;\n      var count = 0;\n      for (var attr in v) if (v.hasOwnProperty(attr)) count = count + 1;\n      return count >= p;\n    },\n    'maxProperties': function (v, p) {\n      if (typeof v !== 'object')\n        return true;\n      var count = 0;\n      for (var attr in v) if (v.hasOwnProperty(attr)) count = count + 1;\n      return count <= p;\n    },\n    // ****** all *****\n    'constant': function (v, p) {\n      return JSON.stringify(v) == JSON.stringify(p);\n    },\n    'enum': function (v, p) {\n      var i, len, vs;\n      if (typeof v === 'object') {\n        vs = JSON.stringify(v);\n        for (i = 0, len = p.length; i < len; i++)\n          if (vs === JSON.stringify(p[i]))\n            return true;\n      } else {\n        for (i = 0, len = p.length; i < len; i++)\n          if (v === p[i])\n            return true;\n      }\n      return false;\n    }\n  };\n\n  var normalizeID = function (id) {\n    return id.indexOf(\"://\") === -1 ? id : id.split(\"#\")[0];\n  };\n\n  var resolveURI = function (env, schema_stack, uri) {\n    var curschema, components, hash_idx, name;\n\n    hash_idx = uri.indexOf('#');\n\n    if (hash_idx === -1) {\n      if (!env.schema.hasOwnProperty(uri))\n        return null;\n      return [env.schema[uri]];\n    }\n\n    if (hash_idx > 0) {\n      name = uri.substr(0, hash_idx);\n      uri = uri.substr(hash_idx+1);\n      if (!env.schema.hasOwnProperty(name)) {\n        if (schema_stack && schema_stack[0].id === name)\n          schema_stack = [schema_stack[0]];\n        else\n          return null;\n      } else\n        schema_stack = [env.schema[name]];\n    } else {\n      if (!schema_stack)\n        return null;\n      uri = uri.substr(1);\n    }\n\n    if (uri === '')\n      return [schema_stack[0]];\n\n    if (uri.charAt(0) === '/') {\n      uri = uri.substr(1);\n      curschema = schema_stack[0];\n      components = uri.split('/');\n      while (components.length > 0) {\n        if (!curschema.hasOwnProperty(components[0]))\n          return null;\n        curschema = curschema[components[0]];\n        schema_stack.push(curschema);\n        components.shift();\n      }\n      return schema_stack;\n    } else // FIX: should look for subschemas whose id matches uri\n      return null;\n  };\n\n  var resolveObjectRef = function (object_stack, uri) {\n    var components, object, last_frame = object_stack.length-1, skip_frames, frame, m = /^(\\d+)/.exec(uri);\n\n    if (m) {\n      uri = uri.substr(m[0].length);\n      skip_frames = parseInt(m[1], 10);\n      if (skip_frames < 0 || skip_frames > last_frame)\n        return;\n      frame = object_stack[last_frame-skip_frames];\n      if (uri === '#')\n        return frame.key;\n    } else\n      frame = object_stack[0];\n\n    object = frame.object[frame.key];\n\n    if (uri === '')\n      return object;\n\n    if (uri.charAt(0) === '/') {\n      uri = uri.substr(1);\n      components = uri.split('/');\n      while (components.length > 0) {\n        components[0] = components[0].replace(/~1/g, '/').replace(/~0/g, '~');\n        if (!object.hasOwnProperty(components[0]))\n          return;\n        object = object[components[0]];\n        components.shift();\n      }\n      return object;\n    } else\n      return;\n  };\n\n  var checkValidity = function (env, schema_stack, object_stack, options) {\n    var i, len, count, hasProp, hasPattern;\n    var p, v, malformed = false, objerrs = {}, objerr, props, matched;\n    var sl = schema_stack.length-1, schema = schema_stack[sl], new_stack;\n    var ol = object_stack.length-1, object = object_stack[ol].object, name = object_stack[ol].key, prop = object[name];\n    var errCount, minErrCount;\n\n    if (schema.hasOwnProperty('$ref')) {\n      schema_stack= resolveURI(env, schema_stack, schema.$ref);\n      if (!schema_stack)\n        return {'$ref': schema.$ref};\n      else\n        return checkValidity(env, schema_stack, object_stack, options);\n    }\n\n    if (schema.hasOwnProperty('type')) {\n      if (typeof schema.type === 'string') {\n        if (options.useCoerce && env.coerceType.hasOwnProperty(schema.type))\n          prop = object[name] = env.coerceType[schema.type](prop);\n        if (!env.fieldType[schema.type](prop))\n          return {'type': schema.type};\n      } else {\n        malformed = true;\n        for (i = 0, len = schema.type.length; i < len && malformed; i++)\n          if (env.fieldType[schema.type[i]](prop))\n            malformed = false;\n        if (malformed)\n          return {'type': schema.type};\n      }\n    }\n\n    if (schema.hasOwnProperty('allOf')) {\n      for (i = 0, len = schema.allOf.length; i < len; i++) {\n        objerr = checkValidity(env, schema_stack.concat(schema.allOf[i]), object_stack, options);\n        if (objerr)\n          return objerr;\n      }\n    }\n\n    if (!options.useCoerce && !options.useDefault && !options.removeAdditional) {\n      if (schema.hasOwnProperty('oneOf')) {\n        minErrCount = Infinity;\n        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), object_stack, options);\n          if (!objerr) {\n            count = count + 1;\n            if (count > 1)\n              break;\n          } else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (count > 1)\n          return {'oneOf': true};\n        else if (count < 1)\n          return objerrs;\n        objerrs = {};\n      }\n\n      if (schema.hasOwnProperty('anyOf')) {\n        objerrs = null;\n        minErrCount = Infinity;\n        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), object_stack, options);\n          if (!objerr) {\n            objerrs = null;\n            break;\n          }\n          else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (objerrs)\n          return objerrs;\n      }\n\n      if (schema.hasOwnProperty('not')) {\n        objerr = checkValidity(env, schema_stack.concat(schema.not), object_stack, options);\n        if (!objerr)\n          return {'not': true};\n      }\n    } else {\n      if (schema.hasOwnProperty('oneOf')) {\n        minErrCount = Infinity;\n        for (i = 0, len = schema.oneOf.length, count = 0; i < len; i++) {\n          new_stack = clone_stack(object_stack);\n          objerr = checkValidity(env, schema_stack.concat(schema.oneOf[i]), new_stack, options);\n          if (!objerr) {\n            count = count + 1;\n            if (count > 1)\n              break;\n            else\n              copy_stack(new_stack, object_stack);\n          } else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (count > 1)\n          return {'oneOf': true};\n        else if (count < 1)\n          return objerrs;\n        objerrs = {};\n      }\n\n      if (schema.hasOwnProperty('anyOf')) {\n        objerrs = null;\n        minErrCount = Infinity;\n        for (i = 0, len = schema.anyOf.length; i < len; i++) {\n          new_stack = clone_stack(object_stack);\n          objerr = checkValidity(env, schema_stack.concat(schema.anyOf[i]), new_stack, options);\n          if (!objerr) {\n            copy_stack(new_stack, object_stack);\n            objerrs = null;\n            break;\n          }\n          else {\n            errCount = objerr.schema ? Object.keys(objerr.schema).length : 1;\n            if (errCount < minErrCount) {\n                minErrCount = errCount;\n                objerrs = objerr;\n            }\n          }\n        }\n        if (objerrs)\n          return objerrs;\n      }\n\n      if (schema.hasOwnProperty('not')) {\n        new_stack = clone_stack(object_stack);\n        objerr = checkValidity(env, schema_stack.concat(schema.not), new_stack, options);\n        if (!objerr)\n          return {'not': true};\n      }\n    }\n\n    if (schema.hasOwnProperty('dependencies')) {\n      for (p in schema.dependencies)\n        if (schema.dependencies.hasOwnProperty(p) && prop.hasOwnProperty(p)) {\n          if (Array.isArray(schema.dependencies[p])) {\n            for (i = 0, len = schema.dependencies[p].length; i < len; i++)\n              if (!prop.hasOwnProperty(schema.dependencies[p][i])) {\n                return {'dependencies': true};\n              }\n          } else {\n            objerr = checkValidity(env, schema_stack.concat(schema.dependencies[p]), object_stack, options);\n            if (objerr)\n              return objerr;\n          }\n        }\n    }\n\n    if (!Array.isArray(prop)) {\n      props = [];\n      objerrs = {};\n      for (p in prop)\n        if (prop.hasOwnProperty(p))\n          props.push(p);\n\n      if (options.checkRequired && schema.required) {\n        for (i = 0, len = schema.required.length; i < len; i++)\n          if (!prop.hasOwnProperty(schema.required[i])) {\n            objerrs[schema.required[i]] = {'required': true};\n            malformed = true;\n          }\n      }\n\n      hasProp = schema.hasOwnProperty('properties');\n      hasPattern = schema.hasOwnProperty('patternProperties');\n      if (hasProp || hasPattern) {\n        i = props.length;\n        while (i--) {\n          matched = false;\n          if (hasProp && schema.properties.hasOwnProperty(props[i])) {\n            matched = true;\n            objerr = checkValidity(env, schema_stack.concat(schema.properties[props[i]]), object_stack.concat({object: prop, key: props[i]}), options);\n            if (objerr !== null) {\n              objerrs[props[i]] = objerr;\n              malformed = true;\n            }\n          }\n          if (hasPattern) {\n            for (p in schema.patternProperties)\n              if (schema.patternProperties.hasOwnProperty(p) && props[i].match(p)) {\n                matched = true;\n                objerr = checkValidity(env, schema_stack.concat(schema.patternProperties[p]), object_stack.concat({object: prop, key: props[i]}), options);\n                if (objerr !== null) {\n                  objerrs[props[i]] = objerr;\n                  malformed = true;\n                }\n              }\n          }\n          if (matched)\n            props.splice(i, 1);\n        }\n      }\n\n      if (options.useDefault && hasProp && !malformed) {\n        for (p in schema.properties)\n          if (schema.properties.hasOwnProperty(p) && !prop.hasOwnProperty(p) && schema.properties[p].hasOwnProperty('default'))\n            prop[p] = schema.properties[p]['default'];\n      }\n\n      if (options.removeAdditional && hasProp && schema.additionalProperties !== true && typeof schema.additionalProperties !== 'object') {\n        for (i = 0, len = props.length; i < len; i++)\n          delete prop[props[i]];\n      } else {\n        if (schema.hasOwnProperty('additionalProperties')) {\n          if (typeof schema.additionalProperties === 'boolean') {\n            if (!schema.additionalProperties) {\n              for (i = 0, len = props.length; i < len; i++) {\n                objerrs[props[i]] = {'additional': true};\n                malformed = true;\n              }\n            }\n          } else {\n            for (i = 0, len = props.length; i < len; i++) {\n              objerr = checkValidity(env, schema_stack.concat(schema.additionalProperties), object_stack.concat({object: prop, key: props[i]}), options);\n              if (objerr !== null) {\n                objerrs[props[i]] = objerr;\n                malformed = true;\n              }\n            }\n          }\n        }\n      }\n      if (malformed)\n        return {'schema': objerrs};\n    } else {\n      if (schema.hasOwnProperty('items')) {\n        if (Array.isArray(schema.items)) {\n          for (i = 0, len = schema.items.length; i < len; i++) {\n            objerr = checkValidity(env, schema_stack.concat(schema.items[i]), object_stack.concat({object: prop, key: i}), options);\n            if (objerr !== null) {\n              objerrs[i] = objerr;\n              malformed = true;\n            }\n          }\n          if (prop.length > len && schema.hasOwnProperty('additionalItems')) {\n            if (typeof schema.additionalItems === 'boolean') {\n              if (!schema.additionalItems)\n                return {'additionalItems': true};\n            } else {\n              for (i = len, len = prop.length; i < len; i++) {\n                objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({object: prop, key: i}), options);\n                if (objerr !== null) {\n                  objerrs[i] = objerr;\n                  malformed = true;\n                }\n              }\n            }\n          }\n        } else {\n          for (i = 0, len = prop.length; i < len; i++) {\n            objerr = checkValidity(env, schema_stack.concat(schema.items), object_stack.concat({object: prop, key: i}), options);\n            if (objerr !== null) {\n              objerrs[i] = objerr;\n              malformed = true;\n            }\n          }\n        }\n      } else if (schema.hasOwnProperty('additionalItems')) {\n        if (typeof schema.additionalItems !== 'boolean') {\n          for (i = 0, len = prop.length; i < len; i++) {\n            objerr = checkValidity(env, schema_stack.concat(schema.additionalItems), object_stack.concat({object: prop, key: i}), options);\n            if (objerr !== null) {\n              objerrs[i] = objerr;\n              malformed = true;\n            }\n          }\n        }\n      }\n      if (malformed)\n        return {'schema': objerrs};\n    }\n\n    for (v in schema) {\n      if (schema.hasOwnProperty(v) && !handled.hasOwnProperty(v)) {\n        if (v === 'format') {\n          if (env.fieldFormat.hasOwnProperty(schema[v]) && !env.fieldFormat[schema[v]](prop, schema, object_stack, options)) {\n            objerrs[v] = true;\n            malformed = true;\n          }\n        } else {\n          if (env.fieldValidate.hasOwnProperty(v) && !env.fieldValidate[v](prop, schema[v].hasOwnProperty('$data') ? resolveObjectRef(object_stack, schema[v].$data) : schema[v], schema, object_stack, options)) {\n            objerrs[v] = true;\n            malformed = true;\n          }\n        }\n      }\n    }\n\n    if (malformed)\n      return objerrs;\n    else\n      return null;\n  };\n\n  var defaultOptions = {\n    useDefault: false,\n    useCoerce: false,\n    checkRequired: true,\n    removeAdditional: false\n  };\n\n  function Environment() {\n    if (!(this instanceof Environment))\n      return new Environment();\n\n    this.coerceType = {};\n    this.fieldType = clone(fieldType);\n    this.fieldValidate = clone(fieldValidate);\n    this.fieldFormat = clone(fieldFormat);\n    this.defaultOptions = clone(defaultOptions);\n    this.schema = {};\n  }\n\n  Environment.prototype = {\n    validate: function (name, object, options) {\n      var schema_stack = [name], errors = null, object_stack = [{object: {'__root__': object}, key: '__root__'}];\n\n      if (typeof name === 'string') {\n        schema_stack = resolveURI(this, null, name);\n        if (!schema_stack)\n          throw new Error('jjv: could not find schema \\'' + name + '\\'.');\n      }\n\n      if (!options) {\n        options = this.defaultOptions;\n      } else {\n        for (var p in this.defaultOptions)\n          if (this.defaultOptions.hasOwnProperty(p) && !options.hasOwnProperty(p))\n            options[p] = this.defaultOptions[p];\n      }\n\n      errors = checkValidity(this, schema_stack, object_stack, options);\n\n      if (errors)\n        return {validation: errors.hasOwnProperty('schema') ? errors.schema : errors};\n      else\n        return null;\n    },\n\n    resolveRef: function (schema_stack, $ref) {\n      return resolveURI(this, schema_stack, $ref);\n    },\n\n    addType: function (name, func) {\n      this.fieldType[name] = func;\n    },\n\n    addTypeCoercion: function (type, func) {\n      this.coerceType[type] = func;\n    },\n\n    addCheck: function (name, func) {\n      this.fieldValidate[name] = func;\n    },\n\n    addFormat: function (name, func) {\n      this.fieldFormat[name] = func;\n    },\n\n    addSchema: function (name, schema) {\n      if (!schema && name) {\n        schema = name;\n        name = undefined;\n      }\n      if (schema.hasOwnProperty('id') && typeof schema.id === 'string' && schema.id !== name) {\n        if (schema.id.charAt(0) === '/')\n          throw new Error('jjv: schema id\\'s starting with / are invalid.');\n        this.schema[normalizeID(schema.id)] = schema;\n      } else if (!name) {\n        throw new Error('jjv: schema needs either a name or id attribute.');\n      }\n      if (name)\n        this.schema[normalizeID(name)] = schema;\n    }\n  };\n\n  // Export for use in server and client.\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n    module.exports = Environment;\n  else if (typeof define === 'function' && define.amd)\n    define(function () {return Environment;});\n  else\n    this.jjv = Environment;\n}).call(this);\n\n\n\n// WEBPACK FOOTER //\n// ./~/jjv/lib/jjv.js","(function() {\n  'use strict';\n\n  function make(o) {\n    var errors = [];\n\n    var keys = Object.keys(o.validation);\n\n    // when we're on a leaf node we need to handle the validation errors,\n    // otherwise we continue walking\n    var leaf = keys.every(function(key) {\n      return typeof o.validation[key] !== 'object' ||\n        isArray(o.validation[key]);\n    });\n\n    if (leaf) {\n      // step through each validation issue\n      // example: { required: true }\n      keys.forEach(function(key) {\n        var error, properties;\n        try {\n          switch (key) {\n            case 'type':\n              var type = typeof o.data;\n\n              // further discover types\n              if (type === 'number' && ('' + o.data).match(/^\\d+$/)) {\n                type = 'integer';\n              } else if (type === 'object' && Array.isArray(o.data)) {\n                type = 'array';\n              }\n\n              // the value of type is the required type (ex: { type: 'string' })\n              error = {\n                code: 'INVALID_TYPE',\n                message: 'Invalid type: ' + type + ' should be ' +\n                         (isArray(o.validation[key]) ?  'one of ' :  '') +\n                          o.validation[key]\n              };\n\n              break;\n            case 'required':\n              properties = o.ns;\n\n              error = {\n                code: 'OBJECT_REQUIRED',\n                message: 'Missing required property: ' +\n                         properties[properties.length - 1]\n              };\n\n              break;\n            case 'minimum':\n              error = {\n                code: 'MINIMUM',\n                message: 'Value ' + o.data + ' is less than minimum ' +\n                         o.schema.minimum\n              };\n\n              break;\n            case 'maximum':\n              error = {\n                code: 'MAXIMUM',\n                message: 'Value ' + o.data + ' is greater than maximum ' +\n                         o.schema.maximum\n              };\n\n              break;\n            case 'multipleOf':\n              error = {\n                code: 'MULTIPLE_OF',\n                message: 'Value ' + o.data + ' is not a multiple of ' +\n                         o.schema.multipleOf\n              };\n\n              break;\n            case 'pattern':\n              error = {\n                code: 'PATTERN',\n                message: 'String does not match pattern: ' + o.schema.pattern\n              };\n\n              break;\n            case 'minLength':\n              error = {\n                code: 'MIN_LENGTH',\n                message: 'String is too short (' + o.data.length + ' chars), ' +\n                         'minimum ' + o.schema.minLength\n              };\n\n              break;\n            case 'maxLength':\n              error = {\n                code: 'MAX_LENGTH',\n                message: 'String is too long (' + o.data.length + ' chars), ' +\n                         'maximum ' + o.schema.maxLength\n              };\n\n              break;\n            case 'minItems':\n              error = {\n                code: 'ARRAY_LENGTH_SHORT',\n                message: 'Array is too short (' + o.data.length + '), ' +\n                         'minimum ' + o.schema.minItems\n              };\n\n              break;\n            case 'maxItems':\n              error = {\n                code: 'ARRAY_LENGTH_LONG',\n                message: 'Array is too long (' + o.data.length + '), maximum ' +\n                         o.schema.maxItems\n              };\n\n              break;\n            case 'uniqueItems':\n              error = {\n                code: 'ARRAY_UNIQUE',\n                message: 'Array items are not unique'\n              };\n\n              break;\n            case 'minProperties':\n              error = {\n                code: 'OBJECT_PROPERTIES_MINIMUM',\n                message: 'Too few properties defined (' +\n                         Object.keys(o.data).length + '), minimum ' +\n                         o.schema.minProperties\n              };\n\n              break;\n            case 'maxProperties':\n              error = {\n                code: 'OBJECT_PROPERTIES_MAXIMUM',\n                message: 'Too many properties defined (' +\n                         Object.keys(o.data).length + '), maximum ' +\n                         o.schema.maxProperties\n              };\n\n              break;\n            case 'enum':\n              error = {\n                code: 'ENUM_MISMATCH',\n                message: 'No enum match (' + o.data + '), expects: ' +\n                         o.schema['enum'].join(', ')\n              };\n\n              break;\n            case 'not':\n              error = {\n                code: 'NOT_PASSED',\n                message: 'Data matches schema from \"not\"'\n              };\n\n              break;\n            case 'additional':\n              properties = o.ns;\n\n              error = {\n                code: 'ADDITIONAL_PROPERTIES',\n                message: 'Additional properties not allowed: ' +\n                         properties[properties.length - 1]\n              };\n\n              break;\n            case 'format':\n              error = {\n                code: 'FORMAT',\n                message: 'Value does not satisfy format: ' +\n                         o.schema.format\n              };\n\n              break;\n          }\n        } catch (err) {\n          // ignore errors\n        }\n\n        // unhandled errors\n        if (!error) {\n          error = {\n            code: 'FAILED',\n            message: 'Validation error: ' + key\n          };\n\n          try {\n            if (typeof o.validation[key] !== 'boolean') {\n              error.message = ' (' + o.validation[key] + ')';\n            }\n          } catch (err) {\n            // ignore errors\n          }\n        }\n\n        error.code = 'VALIDATION_' + error.code;\n        if (o.data !== undefined) error.data = o.data;\n        error.path = o.ns;\n        errors.push(error);\n      });\n    } else {\n      // handle all non-leaf children\n      keys.forEach(function(key) {\n        var s;\n\n        if (o.schema.$ref) {\n          if (o.schema.$ref.match(/#\\/definitions\\//)) {\n            o.schema = o.definitions[o.schema.$ref.slice(14)];\n          } else {\n            o.schema = o.schema.$ref;\n          }\n\n          if (typeof o.schema === 'string') {\n            o.schema = o.env.resolveRef(null, o.schema);\n            if (o.schema) o.schema = o.schema[0];\n          }\n\n          if (!o.schema.type) o.schema.type = 'object';\n        }\n\n        if (o.schema && o.schema.type) {\n          if (allowsType(o.schema, 'object')) {\n            if (o.schema.properties && o.schema.properties[key]) {\n              s = o.schema.properties[key];\n            }\n\n            if (!s && o.schema.patternProperties) {\n              Object.keys(o.schema.patternProperties).some(function(pkey) {\n                if (key.match(new RegExp(pkey))) {\n                  s = o.schema.patternProperties[pkey];\n                  return true;\n                }\n              });\n            }\n\n            if (!s && o.schema.hasOwnProperty('additionalProperties')) {\n              if (typeof o.schema.additionalProperties === 'boolean') {\n                s = {};\n              } else {\n                s = o.schema.additionalProperties;\n              }\n            }\n          }\n\n          if (allowsType(o.schema, 'array')) {\n            s = o.schema.items;\n          }\n        }\n\n        var opts = {\n          env: o.env,\n          schema: s || {},\n          ns: o.ns.concat(key)\n        };\n\n        try {\n          opts.data = o.data[key];\n        } catch (err) {\n          // ignore errors\n        }\n\n        try {\n          opts.validation = o.validation[key].schema ?\n            o.validation[key].schema :\n            o.validation[key];\n        } catch (err) {\n          opts.validation = {};\n        }\n\n        try {\n          opts.definitions = s.definitions || o.definitions;\n        } catch (err) {\n          opts.definitions = o.definitions;\n        }\n\n        errors = errors.concat(make(opts));\n      });\n    }\n\n    return errors;\n  }\n\n  function allowsType(schema, type) {\n    if (typeof schema.type === 'string') {\n      return schema.type === type;\n    }\n    if (isArray(schema.type)) {\n      return schema.type.indexOf(type) !== -1;\n    }\n    return false;\n  }\n\n  function isArray(obj) {\n    if (typeof Array.isArray === 'function') {\n      return Array.isArray(obj);\n    }\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  }\n\n  function formatPath(options) {\n    var root = options.hasOwnProperty('root') ?\n      options.root : '$';\n\n    var sep = options.hasOwnProperty('sep') ?\n      options.sep : '.';\n\n    return function(error) {\n      var path = root;\n\n      error.path.forEach(function(key) {\n        path += key.match(/^\\d+$/) ?\n          '[' + key + ']' :\n          key.match(/^[A-Z_$][0-9A-Z_$]*$/i) ?\n            (sep + key) :\n            ('[' + JSON.stringify(key) + ']');\n      });\n\n      error.path = path;\n\n      return error;\n    };\n  }\n\n  function jjve(env) {\n    return function jjve(schema, data, result, options) {\n      if (!result || !result.validation) return [];\n\n      options = options || {};\n\n      if (typeof schema === 'string') { schema = env.schema[schema]; }\n\n      var errors = make({\n        env: env,\n        schema: schema,\n        data: data,\n        validation: result.validation,\n        ns: [],\n        definitions: schema.definitions || {}\n      });\n\n      if (errors.length && options.formatPath !== false) {\n        return errors.map(formatPath(options));\n      }\n\n      return errors;\n    };\n  }\n\n  // Export for use in server and client.\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = jjve;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return jjve; });\n  } else {\n    this.jjve = jjve;\n  }\n}).call(this);\n\n\n\n// WEBPACK FOOTER //\n// ./~/jjve/jjve.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { create as createJsonValidator } from '../utilities/json_validator';\nimport * as object from '../utilities/object';\n\n// JSON schema formats:\nconst TOPIC_IDENTIFIER = '([a-z][+a-zA-Z0-9]*|[A-Z][+A-Z0-9]*)';\nconst SUB_TOPIC_FORMAT = new RegExp( `^${TOPIC_IDENTIFIER}$` );\nconst TOPIC_FORMAT = new RegExp( `^(${TOPIC_IDENTIFIER}(-${TOPIC_IDENTIFIER})*)$` );\nconst FLAG_TOPIC_FORMAT = new RegExp( `^[!]?(${TOPIC_IDENTIFIER}(-${TOPIC_IDENTIFIER})*)$` );\n// simplified RFC-5646 language-tag matcher with underscore/dash relaxation:\n// the parts are: language *(\"-\"|\"_\" script|region|constiant) *(\"-\"|\"_\" extension|privateuse)\nconst LANGUAGE_TAG_FORMAT = /^[a-z]{2,8}([-_][a-z0-9]{2,8})*([-_][a-z0-9][-_][a-z0-9]{2,8})*$/i;\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function featuresForWidget( widgetSpecification, widgetConfiguration, throwError ) {\n   if( !widgetSpecification.features || Object.keys( widgetSpecification.features ).length === 0 ) {\n      return {};\n   }\n\n   const featureConfiguration = widgetConfiguration.features || {};\n   const featuresSpec = widgetSpecification.features;\n   const validator = createFeaturesValidator( featuresSpec );\n\n   object.forEach( featuresSpec.properties, ( feature, name ) => {\n      // ensure that simple object/array features are at least defined\n      if( name in featureConfiguration ) {\n         return;\n      }\n\n      if( feature.type === 'object' ) {\n         featureConfiguration[ name ] = {};\n      }\n      else if( feature.type === 'array' ) {\n         featureConfiguration[ name ] = [];\n      }\n   } );\n\n   const errors = validator.validate( featureConfiguration );\n\n   if( errors.length ) {\n      const message = errors.reduce(\n         ( message, error ) => `${message}\\n - ${error.message.replace( /\\[/g, '\\\\[' )}`,\n         'Validation of feature-configuration failed. Errors: '\n      );\n\n      throwError( message );\n   }\n\n   return featureConfiguration;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction createFeaturesValidator( featuresSpec ) {\n   const validator = createJsonValidator( featuresSpec, {\n      prohibitAdditionalProperties: true,\n      useDefault: true\n   } );\n\n   // allows 'mySubTopic0815', 'MY_SUB_TOPIC+OK' and variations:\n   validator.addFormat( 'sub-topic', subTopic => {\n      return ( typeof subTopic !== 'string' ) || SUB_TOPIC_FORMAT.test( subTopic );\n   } );\n\n   // allows 'myTopic', 'myTopic-mySubTopic-SUB_0815+OK' and variations:\n   validator.addFormat( 'topic', topic => {\n      return ( typeof topic !== 'string' ) || TOPIC_FORMAT.test( topic );\n   } );\n\n   // allows 'myTopic', '!myTopic-mySubTopic-SUB_0815+OK' and variations:\n   validator.addFormat( 'flag-topic', flagTopic => {\n      return ( typeof flagTopic !== 'string' ) || FLAG_TOPIC_FORMAT.test( flagTopic );\n   } );\n\n   // allows 'de_DE', 'en-x-laxarJS' and such:\n   validator.addFormat( 'language-tag', languageTag => {\n      return ( typeof languageTag !== 'string' ) || LANGUAGE_TAG_FORMAT.test( languageTag );\n   } );\n\n   // checks that object keys have the 'topic' format\n   validator.addFormat( 'topic-map', topicMap => {\n      return ( typeof topicMap !== 'object' ) ||\n         Object.keys( topicMap ).every( topic => TOPIC_FORMAT.test( topic ) );\n   } );\n\n   // checks that object keys have the 'language-tag' format\n   validator.addFormat( 'localization', localization => {\n      return ( typeof localization !== 'object' ) ||\n         Object.keys( localization ).every( tag => LANGUAGE_TAG_FORMAT.test( tag ) );\n   } );\n\n   return validator;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/features_provider.js","module.exports = {\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"layout\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"The layout to use. May be omitted if another page in the extension hierarchy defines one.\"\n\t\t},\n\t\t\"extends\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"The name of the page to extend.\"\n\t\t},\n\t\t\"areas\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"description\": \"A map from area name to a list of widgets to display within that area.\",\n\t\t\t\"patternProperties\": {\n\t\t\t\t\"^[a-z][\\\\.a-zA-Z0-9_]*$\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"widget\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Path to the widget that should be rendered.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"composition\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Path to the composition that should be included.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"layout\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Path to the layout that should be inserted.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"pattern\": \"^[a-z][a-zA-Z0-9_]*$\",\n\t\t\t\t\t\t\t\t\"description\": \"ID of the widget or composition. Will be generated if missing.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"insertBeforeId\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"The ID of the widget this widget or composition should be inserted before.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"features\": {\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"description\": \"Configuration of the features defined by the widget or composition.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"enabled\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"description\": \"Set to false to omit widgets e.g. for debugging purposes.\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"additionalProperties\": false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"additionalProperties\": false\n\t\t}\n\t},\n\t\"additionalProperties\": false\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./vendor/laxar/static/schemas/page.json\n// module id = 48\n// module chunks = 0 1","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { deepClone } from '../utilities/object';\n\n/** Use to access the flattened page model, where compositions have been expanded. */\nexport const FLAT = 'FLAT';\n/** Use to access the compact page/composition model, where compositions have not been expanded. */\nexport const COMPACT = 'COMPACT';\n\n\nexport function createProvider( collector ) {\n\n   return {\n\n      /** Start collecting page/composition data. */\n      enable() {\n         collector.enable();\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /** Stop collecting page/composition data and clean up. */\n      disable() {\n         collector.disable();\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Access the current page information.\n       * Everything is returned as a copy, sothis object cannot be used to modify the host application.\n       *\n       * @return {Object}\n       *   the current page information, with the following properties:\n       *    - `pageDefinitions` {Object}\n       *       both the original as well as the expanded/flattened page model for each available page\n       *    - `compositionDefinitions` {Object}\n       *       both the original as well as the expanded/flattened composition model for each composition of\n       *       any available page\n       *    - `widgetDescriptors` {Object}\n       *       the widget descriptor for each widget that was referenced\n       *    - `pageReference` {String}\n       *       the reference for the current page, to lookup page/composition definitions\n       */\n      current() {\n         return collector.current();\n      },\n\n      /**\n       * Add a listener function to be notified whenever the page information changes.\n       * As a side-effect, this also automatically enables collecting page/composition data.\n       * Each listener will be delivered its own copy of the page information.\n       *\n       * @param {Function} _\n       *    The listener to add. Will be called with the current page information whenever that changes.\n       */\n      addListener( _ ) {\n         collector.addListener( _ );\n      },\n\n      /**\n       * Remove a page information listener function.\n       *\n       * @param {Function} _\n       *    The listener to remove\n       */\n      removeListener( _ ) {\n         collector.removeListener( _ );\n      }\n\n   };\n\n}\n\nexport function createCollector( configuration, log ) {\n\n   let enabled = configuration.get( 'tooling.enabled' );\n\n   let listeners = [];\n\n   const currentPageInfo = {\n      pageReference: null,\n      pageDefinitions: {},\n      compositionDefinitions: {},\n      widgetDescriptors: {}\n   };\n\n   return {\n\n      // eslint-disable-next-line valid-jsdoc\n      /** Collect a widget descriptor. */\n      collectWidgetDescriptor( ref, descriptor ) {\n         if( !enabled ) { return; }\n         currentPageInfo.widgetDescriptors[ ref ] = descriptor;\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      // eslint-disable-next-line valid-jsdoc\n      /**\n       * Collect a page definition.\n       * The page is deep-copied right away, and may safely be modified by the caller.\n       */\n      collectPageDefinition( ref, page, type ) {\n         if( !enabled ) { return; }\n         const definitions = currentPageInfo.pageDefinitions;\n         definitions[ ref ] = definitions[ ref ] || {\n            FLAT: null,\n            COMPACT: null\n         };\n         definitions[ ref ][ type ] = deepClone( page );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      // eslint-disable-next-line valid-jsdoc\n      /**\n       * Collect a composition definition.\n       * The composition is deep-copied right away, and may safely be modified by the caller.\n       */\n      collectCompositionDefinition( pageRef, compositionInstanceId, composition, type ) {\n         if( !enabled ) { return; }\n         const definitions = currentPageInfo.compositionDefinitions;\n         const definitionsByInstance = definitions[ pageRef ] = definitions[ pageRef ] || {};\n         definitionsByInstance[ compositionInstanceId ] = definitionsByInstance[ compositionInstanceId ] || {\n            FLAT: null,\n            COMPACT: null\n         };\n         definitionsByInstance[ compositionInstanceId ][ type ] = deepClone( composition );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      // eslint-disable-next-line valid-jsdoc\n      /**\n       * Collect information about the current page, and inform all listeners.\n       * Each listener will receive its own copy of the page information.\n       */\n      collectCurrentPage( ref ) {\n         if( !enabled ) { return; }\n         currentPageInfo.pageReference = ref;\n         listeners.forEach( listener => {\n            listener( deepClone( currentPageInfo ) );\n         } );\n         cleanup();\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      enable() {\n         enabled = true;\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      disable() {\n         enabled = false;\n         currentPageInfo.pageReference = null;\n         currentPageInfo.widgetDescriptors = {};\n         cleanup();\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      addListener( listener ) {\n         enabled = true;\n         listeners.push( listener );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      removeListener( listener ) {\n         listeners = listeners.filter( _ => _ !== listener );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      current() {\n         if( !enabled ) {\n            log.warn( 'laxar page tooling: trying to access data, but collecting it was never enabled' );\n         }\n         return deepClone( currentPageInfo );\n      }\n\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function cleanup() {\n      const currentRef = currentPageInfo.pageReference;\n      [ 'pageDefinitions', 'compositionDefinitions' ]\n         .forEach( collection => {\n            Object.keys( currentPageInfo[ collection ] )\n               .filter( ref => ref !== currentRef )\n               .forEach( ref => { delete currentPageInfo[ collection ][ ref ]; } );\n         } );\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/tooling/pages.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\nexport function create( artifactProvider, cssLoader ) {\n   return {\n      load() {\n         const themeProvider = artifactProvider.forTheme();\n         themeProvider.descriptor( descriptor =>\n            themeProvider.assetUrl( descriptor.styleSource || 'css/theme.css' ).then( cssLoader.load )\n         );\n      }\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/theme_loader.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\nimport * as string from '../utilities/string';\nimport * as featuresProvider from './features_provider';\n\nconst TYPE_WIDGET = 'widget';\nconst TYPE_ACTIVITY = 'activity';\n\nconst ID_SEPARATOR = '-';\n\n/**\n * @name AdapterErrorFactory\n * @constructor\n */\nexport const adapterErrors = {\n\n   /**\n    * Creates (but does not throw) an error indicating that an activity tried accessing the DOM.\n    *\n    * @param {String} details.technology\n    *    the complaining adapter's technology\n    * @param {String} details.widgetName\n    *    the canonical name of the activity causing the problem\n    *\n    * @return {Error}\n    *    the error, ready to throw\n    */\n   activityAccessingDom( { technology, widgetName } ) {\n      return new Error( `${technology} adapter: Trying to access DOM in activity ${widgetName}` );\n   },\n\n   /**\n    * Creates (but does not throw) an error indicating that a widget requested an injection that cannot be\n    * provided by the adapter.\n    *\n    * @param {String} details.technology\n    *    the complaining adapter's technology\n    * @param {String} details.injection\n    *    the failing injection\n    * @param {String} details.widgetName\n    *    the canonical name of the widget causing the problem\n    *\n    * @return {Error}\n    *    the error, ready to throw\n    */\n   unknownInjection( { technology, injection, widgetName } ) {\n      return new Error(\n         `${technology} adapter: Trying to inject unknown service \"${injection} into widget \"${widgetName}\"`\n      );\n   },\n\n   /**\n    * Creates (but does not throw) an error indicating that a widget was not registered with the current\n    * adapter.\n    *\n    * @param {String} details.technology\n    *    the complaining adapter's technology\n    * @param {String} details.widgetName\n    *    the canonical name of the missing widget\n    *\n    * @return {Error}\n    *    the error, ready to throw\n    */\n   unknownWidget( { technology, widgetName } ) {\n      return new Error( `${technology} adapter: Unknown widget: ${widgetName}` );\n   }\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst noOp = () => {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a generic widget loader that can load widgets and activities implemented in various technologies\n * by using appropriate adapters.\n *\n * @param {Log} log\n *    log instance to use for technology compatibility warnings\n * @param {ArtifactProvider} artifactProvider\n *    an artifact provider for looking up widget descriptors and assets\n * @param {ControlLoader} controlLoader\n *    helps loading controls and their assets\n * @param {CssLoader} cssLoader\n *    helps loading widget- and control-stylesheets during development\n * @param {PagesCollector} pagesCollector\n *    used for inspection tools\n * @param {Function} servicesForWidget\n *    a factory method to create widget-specific services\n *\n * @return {WidgetLoader}\n *    a new widget loader\n */\nexport function create(\n   log,\n   artifactProvider,\n   controlLoader,\n   cssLoader,\n   pagesCollector,\n   servicesForWidget\n) {\n\n   const widgetAdapters = {};\n\n   /**\n    * @name WidgetLoader\n    * @constructor\n    */\n   return {\n      load,\n\n      /**\n       * Several factory methods for creating error objects that are useful for almost any adapter.\n       *\n       * @memberof WidgetLoader\n       * @type {AdapterErrorFactory}\n       */\n      adapterErrors,\n\n      /**\n       * Register support for integration technologies.\n       *\n       * @param {Object} adapters\n       *    a map of widget adapters by technology to be registered with this loader\n       *\n       * @memberof WidgetLoader\n       */\n      registerWidgetAdapters( adapters ) {\n         Object.assign(widgetAdapters, adapters);\n      }\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Load a widget using an appropriate adapter\n    *\n    * First, get the given widget's descriptor to validate and instantiate the widget features.\n    * Then, instantiate a widget adapter matching the widget's technology. Using the adapter, create the\n    * widget controller. The adapter is returned and can be used to attach the widget to the DOM, or to\n    * destroy it.\n    *\n    * @param {Object} widgetConfiguration\n    *    a widget instance configuration (as used in page definitions) to instantiate the widget from\n    * @param {Object} [optionalOptions]\n    *    map of additonal options\n    * @param {Function} [optionalOptions.onBeforeControllerCreation]\n    *    a function to call just before the controller is set up. It receives an object of named,\n    *    widget-specific injections as arguments\n    *\n    * @return {Promise} a promise for a widget adapter, with an already instantiated controller\n    *\n    * @memberof WidgetLoader\n    */\n   function load( widgetConfiguration, { onBeforeControllerCreation = noOp } = {} ) {\n\n      const widgetArtifactProvider = artifactProvider.forWidget( widgetConfiguration.widget );\n\n      return widgetArtifactProvider\n         .descriptor()\n         .then( descriptor => {\n            // The control-descriptors must be loaded prior to controller creation.\n            // This allows the widget controller to synchronously instantiate controls.\n            return Promise.all( ( descriptor.controls || [] ).map( controlLoader.load ) )\n               .then( controlDescriptors => {\n                  controlDescriptors.forEach( checkTechnologyCompatibility( descriptor ) );\n                  return descriptor;\n               } );\n         } )\n         .then( descriptor => {\n\n            pagesCollector.collectWidgetDescriptor( widgetConfiguration.widget, descriptor );\n\n            const { integration: { type, technology } } = descriptor;\n            const widgetName = descriptor.name;\n            if( type !== TYPE_WIDGET && type !== TYPE_ACTIVITY ) {\n               throwError( widgetConfiguration, `Unknown integration type \"${type}\"` );\n            }\n\n            const throwWidgetError = throwError.bind( null, widgetConfiguration );\n            const features =\n               featuresProvider.featuresForWidget( descriptor, widgetConfiguration, throwWidgetError );\n            const anchorElement = document.createElement( 'DIV' );\n            anchorElement.className = widgetName;\n            anchorElement.id = `ax${ID_SEPARATOR}${widgetConfiguration.id}`;\n\n            const adapterFactory = widgetAdapters[ technology ];\n            const { serviceDecorators = () => ({}) } = adapterFactory;\n            const { services, releaseServices } = servicesForWidget(\n               descriptor,\n               widgetConfiguration,\n               features,\n               serviceDecorators( descriptor, widgetConfiguration )\n            );\n\n            const environment = {\n               anchorElement,\n               services,\n               widgetName,\n               onBeforeControllerCreation\n            };\n\n            return Promise.resolve( adapterFactory.create( environment ) )\n               .then( adapter => ( { destroy: noOp, ...adapter } ) )\n               .then( adapter => ( {\n                  id: widgetConfiguration.id,\n                  adapter,\n                  destroy() {\n                     releaseServices();\n                     adapter.destroy();\n                  },\n                  templatePromise: loadAssets(\n                     descriptor,\n                     widgetArtifactProvider\n                  )\n               } ) );\n\n         }, err => {\n            const message = `Could not load widget \"${widgetConfiguration.widget}\": ${err.message}`;\n            log.error( message );\n            throw err;\n         } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Locates and loads the widget HTML template for this widget (if any) as well as any CSS stylesheets\n    * used by this widget or its controls.\n    *\n    * @param {Object} widgetDescriptor\n    *    a descriptor identifying the widget to load assets for\n    * @param {ArtifactProvider} artifactProviderForWidget\n    *    the provider with which to lookup or fetch artifact HTML and CSS\n    *\n    * @return {Promise}\n    *    A promise that will be resolved with the contents of any HTML template for this widget, or with\n    *    `null` if there is no template (for example, if this is an activity).\n    *\n    * @private\n    */\n   function loadAssets( widgetDescriptor, { assetForTheme, assetUrlForTheme } ) {\n      const { integration: { type }, name } = widgetDescriptor;\n      if( type === TYPE_ACTIVITY ) {\n         return Promise.resolve( null );\n      }\n\n      return Promise.all( [\n         assetForTheme( widgetDescriptor.templateSource || `${name}.html` ),\n         assetUrlForTheme( widgetDescriptor.styleSource || `css/${name}.css` )\n      ] )\n      .then( ([ html, cssUrl ]) => {\n         if( cssUrl ) {\n            cssLoader.load( cssUrl );\n         }\n         return html;\n      } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function checkTechnologyCompatibility( widgetDescriptor ) {\n      const { name, integration: { technology } } = widgetDescriptor;\n      return controlDescriptor => {\n         const controlTechnology = ( controlDescriptor.integration || {} ).technology;\n         if( controlTechnology === 'plain' ) {\n            // plain is always compatible\n            return;\n         }\n\n         if( technology !== controlTechnology ) {\n            log.warn(\n               'Incompatible integration technologies: widget [0] ([1]) cannot use control [2] ([3])',\n               name, technology, controlDescriptor.name, controlTechnology\n            );\n         }\n      };\n   }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction throwError( widgetConfiguration, message ) {\n   throw new Error( string.format(\n      'Error loading widget \"[widget]\" (id: \"[id]\"): [0]', [ message ], widgetConfiguration\n   ) );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/loaders/widget_loader.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\n/**\n * Module providing the StorageApi factory.\n *\n * Widgets and activities can access their StorageApi instance by requesting the injection\n * {@link widget_services#axStorage axStorage}, or use\n * {@link widget_services#axGlobalStorage axGlobalStorage} for shared items.\n *\n * As such, in most cases only the {@link StorageApi} documentation is relevant.\n *\n * @module storage\n */\nimport assert from '../utilities/assert';\n\nconst SESSION = 'sessionStorage';\nconst LOCAL = 'localStorage';\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param {Object} backend\n *    the K/V store, probably only accepting string values\n * @param {String} namespace\n *    prefix for all keys for namespacing purposes\n *\n * @return {StorageApi}\n *    a storage wrapper to the given backend with `getItem`, `setItem` and `removeItem` methods\n *\n * @private\n */\nfunction createStorage( backend, namespace ) {\n\n   /**\n    * Provides a convenient API over the browser's `window.localStorage` and `window.sessionStorage` objects.\n    * If a browser doesn't support [web storage](http://www.w3.org/TR/webstorage/), a warning is logged to the\n    * `console` (if available) and a non-persistent in-memory store will be used instead. Note that this can\n    * for example also happen when using Mozilla Firefox with cookies disabled and as such isn't limited to\n    * older browsers.\n    *\n    * Additionally, in contrast to plain *web storage* access, non-string values will be automatically passed\n    * through JSON (de-) serialization on storage or retrieval. All keys will be prepended with a combination\n    * of a fixed (`ax.`) and an application-specific namespace (configured using `storagePrefix` with fallback\n    * to `name`) to avoid naming clashes with other (LaxarJS) web applications running on the same host and\n    * port. All {@link StorageApi} accessor methods should be called without any namespace as it is\n    * prepended automatically.\n    *\n    * @name StorageApi\n    * @constructor\n    */\n   return {\n      getItem,\n      setItem,\n      removeItem\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Retrieves a `value` by `key` from the store. JSON deserialization will automatically be applied.\n    *\n    * @param {String} key\n    *    the key of the item to retrieve (without namespace prefix)\n    *\n    * @return {*}\n    *    the value or `null` if it doesn't exist in the store\n    *\n    * @memberof StorageApi\n    */\n   function getItem( key ) {\n      const item = backend.getItem( `${namespace}.${key}` );\n      return item && JSON.parse( item );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Sets a `value` for a `key`. The value must be JSON serializable. An existing value will be overwritten.\n    *\n    * @param {String} key\n    *    the key of the item to set (without namespace prefix)\n    * @param {*} value\n    *    the new value to set\n    *\n    * @memberof StorageApi\n    */\n   function setItem( key, value ) {\n      const nsKey = `${namespace}.${key}`;\n      if( value === undefined ) {\n         backend.removeItem( nsKey );\n      }\n      else {\n         backend.setItem( nsKey, JSON.stringify( value ) );\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Removes the value associated with `key` from the store.\n    *\n    * @param {String} key\n    *    the key of the item to remove (without namespace prefix)\n    *\n    * @memberof StorageApi\n    */\n   function removeItem( key ) {\n      backend.removeItem( `${namespace}.${key}` );\n   }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction getOrFakeBackend( browser, webStorageName ) {\n   const browserConsole = browser.console();\n   const store = window[ webStorageName ];\n   if( store.setItem && store.getItem && store.removeItem ) {\n      try {\n         const testKey = 'ax_.storage.test';\n         // In iOS Safari Private Browsing, this will fail:\n         store.setItem( testKey, 1 );\n         store.removeItem( testKey );\n         return store;\n      }\n      catch( e ) {\n         // setItem failed: must use fake storage\n      }\n   }\n\n   if( browserConsole ) {\n      const method = 'warn' in browserConsole ? 'warn' : 'log';\n      browserConsole[ method ](\n         `window.${webStorageName} not available: Using non-persistent polyfill. \\n` +\n         'Try disabling private browsing or enabling cookies.'\n      );\n   }\n\n   const backend = {};\n   return {\n      getItem( key ) {\n         return backend[ key ] || null;\n      },\n      setItem( key, val ) {\n         backend[ key ] = val;\n      },\n      removeItem( key ) {\n         if( key in backend ) {\n            delete backend[ key ];\n         }\n      }\n   };\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction applicationPrefix( configuration ) {\n   return configuration.get(\n      'storagePrefix',\n      configuration.ensure( 'name' )\n   );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a new storage factory. In most cases this module will be called without arguments,\n * but having the ability to provide them is useful e.g. for mocking purposes within tests.\n * If the arguments are omitted, an attempt is made to access the native browser WebStorage api.\n * If that fails, storage is only mocked by an in memory map (thus actually unavailable).\n *\n * Developers are free to use polyfills to support cases where local- or session-storage may not be\n * available. Just make sure to initialize the polyfills before this module.\n *\n * @param {Object} configuration\n *    a configuration service instance, to determine a storage prefix based on the configured name\n * @param {Object} browser\n *    the browser api adapter\n * @param {Object} [localStorageBackend]\n *    the backend for local storage. Default is `window.localStorage`\n * @param {Object} [sessionStorageBackend]\n *    the backend for session storage. Default is `window.sessionStorage`\n *\n * @return {StorageFactory}\n *    a new storage factory\n *\n * @private\n */\nexport function create( configuration, browser, localStorageBackend, sessionStorageBackend ) {\n\n   const localBackend = localStorageBackend || getOrFakeBackend( browser, LOCAL );\n   const sessionBackend = sessionStorageBackend || getOrFakeBackend( browser, SESSION );\n   const prefix = `ax.${applicationPrefix( configuration )}.`;\n\n   /**\n    * The API returned by the module's `create` function.\n    *\n    * @name StorageFactory\n    * @constructor\n    */\n   return {\n\n      /**\n       * Returns a local storage object for a specific local namespace.\n       *\n       * @param {String} namespace\n       *    the namespace to prepend to keys\n       *\n       * @return {StorageApi}\n       *    the local storage object\n       *\n       * @memberof StorageFactory\n       */\n      getLocalStorage( namespace ) {\n         assert( namespace ).hasType( String ).isNotNull();\n\n         return createStorage( localBackend, prefix + namespace );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Returns a session storage object for a specific local namespace.\n       *\n       * @param {String} namespace\n       *    the namespace to prepend to keys\n       *\n       * @return {StorageApi}\n       *    the session storage object\n       *\n       * @memberof StorageFactory\n       */\n      getSessionStorage( namespace ) {\n         assert( namespace ).hasType( String ).isNotNull();\n\n         return createStorage( sessionBackend, prefix + namespace );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Returns the local storage object for application scoped keys. This is equivalent to\n       * `storage.getLocalStorage( 'app' )`.\n       *\n       * @return {StorageApi}\n       *    the application local storage object\n       *\n       * @memberof StorageFactory\n       */\n      getApplicationLocalStorage() {\n         return createStorage( localBackend, `${prefix}app` );\n      },\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Returns the session storage object for application scoped keys. This is equivalent to\n       * `storage.getSessionStorage( 'app' )`.\n       *\n       * @return {StorageApi}\n       *    the application session storage object\n       *\n       * @memberof StorageFactory\n       */\n      getApplicationSessionStorage() {\n         return createStorage( sessionBackend, `${prefix}app` );\n      }\n\n   };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/storage.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { deepClone } from '../utilities/object';\n\nexport function create( log ) {\n\n   const api = {\n      started\n   };\n\n   let idCounter = 0;\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function started( optionalOptions ) {\n      const timer = new Timer( optionalOptions );\n      timer.start();\n      return timer;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function Timer( optionalOptions ) {\n      this.options_ = {\n         label: `timer${idCounter++}`,\n         ...optionalOptions\n      };\n      this.startTime_ = null;\n      this.stopTime_ = null;\n      this.splitTimes_ = [];\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   Timer.prototype.getData = function() {\n      return {\n         label: this.options_.label,\n         startTime: this.startTime_,\n         stopTime: this.stopTime_,\n         splitTimes: deepClone( this.splitTimes_ )\n      };\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   Timer.prototype.start = function() {\n      this.startTime_ = Date.now();\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   Timer.prototype.splitTime = function( optionalLabel ) {\n      this.splitTimes_.push( {\n         time: Date.now(),\n         label: optionalLabel || `split${this.splitTimes_.length}`\n      } );\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   Timer.prototype.stop = function() {\n      this.stopTime_ = Date.now();\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   Timer.prototype.stopAndLog = function( optionalLabel ) {\n      this.stop();\n\n      const startTime = this.startTime_;\n      const endTime = Date.now();\n      const label = optionalLabel || 'Timer Stopped';\n      this.splitTimes_.push( { label, time: endTime } );\n\n      const message = [];\n      message.push( 'Timer \"', this.options_.label, '\": ' );\n      message.push( 'start at ', new Date( startTime ).toISOString(), ' (client), ' );\n      message.push( label, ' after ', ( endTime - startTime ).toFixed( 0 ), 'ms ' );\n      message.push( '(checkpoints: ' );\n      const intervals = [];\n      this.splitTimes_.reduce( ( from, data ) => {\n         intervals.push( `\"${data.label}\"=${( data.time - from ).toFixed( 0 )}ms` );\n         return data.time;\n      }, startTime );\n      message.push( intervals.join( ', ' ), ')' );\n      log.info( message.join( '' ) );\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return api;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/timer.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the FlowController factory.\n *\n * This service is internal to LaxarJS and not available to widgets and activities.\n *\n * @module flow_controller\n * @private\n */\n\nimport assert from '../utilities/assert';\nimport { create as createJsonValidator } from '../utilities/json_validator';\nimport { forEach, setPath } from '../utilities/object';\nimport flowSchema from 'json!../../static/schemas/flow.json';\n\nconst SESSION_KEY_TIMER = 'navigationTimer';\nconst DEFAULT_PLACE = '';\n\nexport const TARGET_SELF = '_self';\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates and returns a new flow controller from its dependencies.\n *\n * @param {ArtifactProvider} artifactProvider\n *    an artifact provider, needed to fetch the flow definition\n * @param {Configuration} configuration\n *    a configuration instance, to determine the name of the flow to load\n * @param {EventBus} eventBus\n *    an event bus instance, used to subscribe to navigateRequest events, and to publish will/did-responses\n * @param {Logger} log\n *    a logger that is used for reporting flow validation and navigation problems\n * @param {PageService} pageService\n *    the page service to use for actual page transitions (setup, teardown) during navigation\n * @param {Router} router\n *    router to register places with, and to use for URL construction\n * @param {Timer} timer\n *    timer to use for measuring page transitions\n *\n * @return {FlowController}\n *    a flow controller instance\n */\nexport function create( artifactProvider, configuration, eventBus, log, pageService, router, timer ) {\n\n   const COLLABORATOR_ID = 'AxFlowController';\n   const availablePlaces = {};\n\n   let activeParameters = {};\n   let activePlace;\n   let navigationInProgress = false;\n   let requestedTarget = null;\n\n   eventBus.subscribe( 'navigateRequest', ( { target, data } ) => {\n      if( navigationInProgress ) { return; }\n      requestedTarget = target;\n      navigateToTarget( target, { ...activeParameters, ...data } );\n   }, { subscriber: COLLABORATOR_ID } );\n\n   /**\n    * A flow controller can load a flow definition, setup routes, and allows to navigate between places. The\n    * flow controller handles router-initiated navigation as well as `navigateRequest` events and triggers\n    * instantiation/destruction of the associated pages.\n    *\n    * @name FlowController\n    * @constructor\n    */\n   return {\n      constructAbsoluteUrl,\n      loadFlow\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Starts loading the configured flow definition and configures the router.\n    *\n    * @return {Promise}\n    *    a promise that is resolved when all routes have been registered\n    */\n   function loadFlow() {\n      const flowName = configuration.ensure( 'flow.name' );\n      return artifactProvider.forFlow( flowName ).definition()\n         .then( flow => {\n            validateFlowJson( flow );\n            router.registerRoutes(\n               assembleRoutes( flow ),\n               createFallbackHandler( flow )\n            );\n         } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Get the place definition for a given target or place. If the provided identifier is a target of the\n    * current place, the definition of the referenced place is returned. Otherwise, the current place is\n    * returned.\n    *\n    * @param {String} targetOrPlaceId\n    *    a string identifying the target or place to obtain a definition for\n    * @param {Object} place\n    *    the corresponding place definition\n    *\n    * @return {Object}\n    *    a place definition with `targets` and `patterns` as specified in the flow definition, plus `id`\n    */\n   function placeForTarget( targetOrPlaceId, place = activePlace ) {\n      let placeId = place ? place.targets[ targetOrPlaceId ] : null;\n      if( placeId == null ) {\n         placeId = targetOrPlaceId;\n      }\n      assert.state(\n         placeId in availablePlaces,\n         `Unknown target or place \"${targetOrPlaceId}\". Current place: \"${place.id}\"`\n      );\n      return availablePlaces[ placeId ];\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Constructs an absolute URL to the given target or place using the given parameters. If a target is\n    * given as first argument, it is resolved using the currently active place.\n    *\n    * @param {String} targetOrPlace\n    *    the target or place ID to construct a URL for\n    * @param {Object} [optionalParameters]\n    *    optional map of place parameters. Missing parameters are filled base on the parameters that were\n    *    passed to the currently active place\n    *\n    * @return {String}\n    *    the generated absolute URL\n    *\n    * @memberof FlowService\n    */\n   function constructAbsoluteUrl( targetOrPlace, optionalParameters ) {\n      const place = placeForTarget( targetOrPlace );\n      return router.constructAbsoluteUrl(\n         place.patterns,\n         withoutRedundantParameters( place, optionalParameters )\n      );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function navigateToTarget( targetOrPlaceId, parameters, redirectFrom ) {\n      const place = placeForTarget( targetOrPlaceId, redirectFrom );\n      router.navigateTo(\n         place.patterns,\n         withoutRedundantParameters( place, parameters ),\n         !!redirectFrom\n      );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function handleRouteChange( place, routerParameters ) {\n      const parameters = { ...place.defaultParameters, ...routerParameters };\n      if( activePlace && place.id === activePlace.id && equals( parameters, activeParameters ) ) {\n         navigationInProgress = false;\n         log.trace( `Canceling navigation to \"${place.id}\". Already there with same parameters.` );\n         return Promise.resolve();\n      }\n      if( navigationInProgress ) {\n         log.trace( `Canceling navigation to \"${place.id}\". Navigation already in progress.` );\n         return Promise.resolve();\n      }\n      navigationInProgress = true;\n\n      const fromPlace = activePlace ? activePlace.targets[ TARGET_SELF ] : '';\n      const navigationTimer = timer.started( {\n         label: `navigation (${fromPlace} -> ${place.targets[ TARGET_SELF ]})`,\n         persistenceKey: SESSION_KEY_TIMER\n      } );\n\n      const event = {\n         target: requestedTarget || place.id,\n         place: place.id,\n         data: parameters\n      };\n      requestedTarget = null;\n\n      const options = { sender: COLLABORATOR_ID };\n      return eventBus.publish( `willNavigate.${event.target}`, event, options )\n         .then( () => {\n            if( activePlace && place.id === activePlace.id ) {\n               activeParameters = parameters;\n               return Promise.resolve();\n            }\n\n            return pageService.controller().tearDownPage()\n               .then( () => {\n                  log.setTag( 'PLCE', place.id );\n                  activeParameters = parameters;\n                  activePlace = place;\n                  return pageService.controller().setupPage( place.page );\n               } );\n         } )\n         .then( () => {\n            navigationInProgress = false;\n            navigationTimer.stopAndLog( 'didNavigate' );\n            return eventBus.publish( `didNavigate.${event.target}`, event, options );\n         } )\n         .catch( err => {\n            log.error( `Failed to navigate to place \"${place.id}\". Error: [0]\\n`, err.stack );\n            return Promise.reject( err );\n         } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createFallbackHandler( flow ) {\n      const { redirectOn, places } = flow;\n      return path => {\n         log.warn( `Received request for unknown route \"${path}\".` );\n         if( redirectOn.unknownPlace in places ) {\n            log.trace( `- Redirecting to error place (\"${redirectOn.unknownPlace}\").` );\n            handleRouteChange( places[ redirectOn.unknownPlace ], {} );\n         }\n         else if( DEFAULT_PLACE in places ) {\n            log.trace( `- Redirecting to default place (\"${DEFAULT_PLACE}\").` );\n            handleRouteChange( places[ DEFAULT_PLACE ], {} );\n         }\n         else {\n            log.trace( '- Got no unknownPlace redirect and no default place. Doing nothing.' );\n         }\n      };\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function assembleRoutes( { places } ) {\n      const routeMap = {};\n      forEach( places, ( place, placeId ) => {\n         place.id = placeId;\n         place.patterns = place.patterns || [ `/${placeId}` ];\n         setPath( place, `targets.${TARGET_SELF}`, place.id );\n\n         const { id, patterns, page, redirectTo } = place;\n         availablePlaces[ id ] = place;\n\n         if( redirectTo ) {\n            patterns.forEach( pattern => {\n               routeMap[ pattern ] = parameters => {\n                  navigateToTarget( redirectTo, parameters, place );\n               };\n            } );\n            return;\n         }\n\n         if( !page ) {\n            log.error( `flow: invalid empty place: ${id}` );\n            return;\n         }\n\n         patterns.forEach( pattern => {\n            routeMap[ pattern ] = parameters => {\n               handleRouteChange( place, parameters );\n            };\n         } );\n      } );\n      return routeMap;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function validateFlowJson( flowJson ) {\n      const errors = createJsonValidator( flowSchema ).validate( flowJson );\n      if( errors.length ) {\n         log.error(\n            'LaxarJS flow controller: Failed validating flow definition:\\n[0]',\n            errors.map( ({ message }) => ` - ${message}` ).join( '\\n' )\n         );\n         throw new Error( 'Illegal flow.json format' );\n      }\n   }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction withoutRedundantParameters( place, parameters ) {\n   const { defaultParameters = {} } = place;\n   const remainingParameters = {};\n   forEach( parameters, ( value, key ) => {\n      if( !( key in defaultParameters ) || defaultParameters[ key ] !== value ) {\n         remainingParameters[ key ] = value;\n      }\n   } );\n   return remainingParameters;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction equals( a, b ) {\n   const aKeys = Object.keys( a );\n   const bKeys = Object.keys( b );\n   return aKeys.length === bKeys.length && aKeys.every( key => key in b && a[ key ] === b[ key ] );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/flow_controller.js","module.exports = {\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"required\": [\n\t\t\"places\"\n\t],\n\t\"properties\": {\n\t\t\"redirectOn\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"description\": \"Globally defined redirects for certain edge cases\",\n\t\t\t\"properties\": {\n\t\t\t\t\"unknownPlace\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"This place is loaded whenever the requested place doesn't exist.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"default\": {},\n\t\t\t\"additionalProperties\": false\n\t\t},\n\t\t\"places\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"format\": \"topic-map\",\n\t\t\t\"description\": \"The places for this flow. Keys (that is, place names) must be valid event topics.\",\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"type\": \"object\",\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"patterns\": {\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"description\": \"Non-empty list of URL patterns to route to this place. If omitted, the place name (prefixed with a slash) is used as the sole pattern.\",\n\t\t\t\t\t\t\"minItems\": 1,\n\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"page\": {\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"description\": \"The page to render for this place.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"redirectTo\": {\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"description\": \"The place to redirect to when hitting this place.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"defaultParameters\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"default\": {},\n\t\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\t\"type\": [\n\t\t\t\t\t\t\t\t\"string\",\n\t\t\t\t\t\t\t\t\"boolean\",\n\t\t\t\t\t\t\t\t\"null\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"description\": \"Default values for optional (query) parameters.\"\n\t\t\t\t\t},\n\t\t\t\t\t\"targets\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"format\": \"topic-map\",\n\t\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"format\": \"topic\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"description\": \"A map of symbolic targets to place-names reachable from this place.\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"additionalProperties\": false\n\t\t\t}\n\t\t}\n\t},\n\t\"additionalProperties\": false\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./vendor/laxar/static/schemas/flow.json\n// module id = 55\n// module chunks = 0 1","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the FlowService factory.\n *\n * To access the FlowService in a widget, request the {@link widget_services#axFlowService axFlowService}\n * injection.\n *\n * @module flow_service\n */\n\n/**\n * Creates a flow service  backed by the given flow controller.\n *\n * @param {FlowController} flowController\n *    a flow controller, needed to respect default parameter values when generating URLs\n *\n * @return {FlowService}\n *    a flow service instance\n *\n * @private\n */\nexport function create( flowController ) {\n\n   /**\n    * Allows widgets to create valid URLs without knowledge about the current place, its routing patterns, or\n    * about the actual routing implementation.\n    *\n    * @name FlowService\n    * @constructor\n    */\n   return {\n      constructAbsoluteUrl\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Constructs an absolute URL to the given target or place using the given parameters. If a target is\n    * given as first argument, it is resolved using the currently active place.\n    *\n    * @param {String} targetOrPlace\n    *    the target or place ID to construct a URL for\n    * @param {Object} [optionalParameters]\n    *    optional map of place parameters. Missing parameters are filled base on the parameters that were\n    *    passed to the currently active place\n    *\n    * @return {String}\n    *    the generated absolute URL\n    *\n    * @memberof FlowService\n    */\n   function constructAbsoluteUrl( targetOrPlace, optionalParameters = {} ) {\n      return flowController.constructAbsoluteUrl( targetOrPlace, optionalParameters );\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/flow_service.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module providing the Heartbeat factory.\n *\n * To use the Heartbeat service in a widget, request the {@link widget_services#axHeartbeat axHeartbeat}\n * injection.\n *\n * @module heartbeat\n */\n\n /**\n  * Creates a heartbeat backed by the given scheduler.\n  *\n  * @param {Function} [customNextTick]\n  *    a function that takes a callback, and will asynchronously execute that callback as soon as possible,\n  *    but asynchronously (that is, after the calling execution stack has finished running).\n  *    If omitted, the callback is scheduled using `Promise.resolve().then( ... )`.\n  * @param {Function} [customTimeout]\n  *    an optional replacement for `window.setTimeout`, used to run coalesced callbacks in a second stage\n  *    after the immediately scheduled operation\n  *\n  * @return {FlowService}\n  *    a flow service instance\n  *\n  * @private\n  */\nexport function create( customNextTick, customTimeout ) {\n\n   const nextTick = customNextTick || ( f => { Promise.resolve().then( f ); } );\n   const timeout = customTimeout || ( f => { setTimeout( f, 0 ); } );\n\n   const heartbeatListeners = [];\n   const nextQueue = [];\n   const beforeQueue = [];\n   const afterQueue = [];\n\n   let beatRequested = false;\n\n   /**\n    * Scheduler for tasks that possibly synchronously trigger creation of new tasks, that need some common\n    * work to be done before or after all of these tasks (and all tasks scheduled in the meantime) are\n    * finished.\n    *\n    * An example would be model-manipulating operations in an application using AngularJS, that need to run\n    * `$rootScope.$apply` after all operations are done, but only *once*.\n    *\n    * @name Heartbeat\n    * @constructor\n    */\n   return {\n      registerHeartbeatListener,\n      onBeforeNext,\n      onNext,\n      onAfterNext\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Registers a listener, that is called whenever a heartbeat occurs.\n    * It is called after the before and next queues were processed, but before working off the after queue has\n    * started.\n    * In contrast to the `on*` methods, listeners are not removed after a tick, but will be called again each\n    * time a heartbeat occurs.\n    * Instead this method returns a function to manually remove the listener again.\n    *\n    * @param  {Function} listener\n    *    the listener to register\n    *\n    * @return {Function}\n    *    a function to remove the listener again\n    *\n    * @memberof Heartbeat\n    */\n   function registerHeartbeatListener( listener ) {\n      heartbeatListeners.push( listener );\n\n      return () => {\n         let index;\n         while( ( index = heartbeatListeners.indexOf( listener ) ) !== -1 ) {\n            heartbeatListeners.splice( index, 1 );\n         }\n      };\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Schedules a function for the next heartbeat.\n    * If no heartbeat was triggered yet, it will be requested now.\n    *\n    * @param {Function} func\n    *    a function to schedule for the next tick\n    *\n    * @memberof Heartbeat\n    */\n   function onNext( func ) {\n      if( !beatRequested ) {\n         beatRequested = true;\n         nextTick( () => {\n            while( beforeQueue.length ) { beforeQueue.shift()(); }\n            while( nextQueue.length ) { nextQueue.shift()(); }\n            heartbeatListeners.forEach( listener => listener() );\n            if( afterQueue.length ) {\n               // run after-queue once all directly resolvable promises are through.\n               timeout( () => {\n                  // Ensure that no further event bus deliveries were scheduled\n                  if( !beatRequested ) {\n                     while( afterQueue.length ) { afterQueue.shift()(); }\n                  }\n               } );\n            }\n            beatRequested = false;\n         } );\n      }\n      nextQueue.push( func );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Schedules a function to be called before the next heartbeat occurs.\n    * Note that `func` may never be called, if there is no next heartbeat since calling this function won't\n    * trigger a new heartbeat.\n    *\n    * @param {Function} func\n    *    a function to call before the next heartbeat\n    *\n    * @memberof Heartbeat\n    */\n   function onBeforeNext( func ) {\n      beforeQueue.push( func );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Schedules a function to be called after the next heartbeat occured.\n    * Note that `func` may never be called, if there is no next heartbeat since calling this function won't\n    * trigger a new heartbeat.\n    *\n    * @param {Function} func\n    *    a function to call after the next heartbeat\n    *\n    * @memberof Heartbeat\n    */\n   function onAfterNext( func ) {\n      afterQueue.push( func );\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/heartbeat.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport assert from '../utilities/assert';\nimport { create as createAreaHelper, findWidgetAreas } from './area_helper';\nimport { create as createLayoutWidgetAdapter } from './layout_widget_adapter';\n\nexport function create(\n      eventBus,\n      pageLoader,\n      layoutLoader,\n      widgetLoader,\n      localeManager,\n      visibilityManager,\n      pagesCollector\n   ) {\n\n   assert( eventBus ).isNotNull();\n   assert( pageLoader ).isNotNull();\n   assert( layoutLoader ).isNotNull();\n   assert( widgetLoader ).isNotNull();\n   assert( localeManager ).isNotNull();\n   assert( visibilityManager ).isNotNull();\n   assert( pagesCollector ).isNotNull();\n\n   let pageController;\n\n   const pageServiceApi = {\n      createControllerFor: pageElement => {\n         assert.state( !pageController, 'Cannot create a page controller more than once.' );\n         assert.state(\n            pageElement instanceof HTMLElement,\n            'A page controller can only be created for a valid DOM element.'\n         );\n\n         pageController = createPageController( pageElement );\n         return pageController;\n      },\n      controller: () => pageController\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createPageController( pageElement ) {\n\n      let areaHelper = null;\n      const api = {\n         setupPage,\n         tearDownPage,\n         areaHelper() {\n            return areaHelper;\n         }\n      };\n\n      /** Delay between sending didLifeCycle and attaching widget templates. */\n      const WIDGET_ATTACH_DELAY_MS = 5;\n      const COLLABORATOR_ID = 'AxPageController';\n      const LIFECYCLE_EVENT = { lifecycleId: 'default' };\n      const EVENT_OPTIONS = { sender: COLLABORATOR_ID };\n      const DEFAULT_AREAS = [\n         { name: 'activities', hidden: true },\n         { name: 'popups' },\n         { name: 'popovers' }\n      ];\n\n      let activeWidgetAdapterWrappers = [];\n      let cleanUpLayout = () => {};\n\n      pageElement.innerHTML = '';\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function setupPage( pageName ) {\n         assert( pageName ).hasType( String ).isNotNull();\n\n         return pageLoader.load( pageName )\n            .then( page => {\n               areaHelper = createAreaHelper( page );\n               visibilityManager.setAreaHelper( areaHelper );\n\n               const layoutPromise = layoutLoader.load( page.layout )\n                  .then( layoutInfo => {\n                     cleanUpLayout = renderLayout( pageElement, areaHelper, layoutInfo );\n                  } );\n\n               localeManager.subscribe();\n               const layoutWidget = widget => layoutWidgetAdapterFor( areaHelper, widget );\n\n               // instantiate controllers wrapped by widget adapters\n               const widgetPromises = widgetsForPage( page )\n                  .map( widget => 'layout' in widget ? layoutWidget( widget ) : widgetLoader.load( widget ) );\n\n               return Promise.all( [ ...widgetPromises, layoutPromise ] )\n                  .then( results => results.slice( 0, -1 ) );\n            } )\n            .then( widgetAdapterWrappers => {\n               pagesCollector.collectCurrentPage( pageName );\n               activeWidgetAdapterWrappers = widgetAdapterWrappers;\n            } )\n            .then( localeManager.initialize )\n            .then( () => {\n               return eventBus.publishAndGatherReplies(\n                  'beginLifecycleRequest.default', LIFECYCLE_EVENT, EVENT_OPTIONS\n               );\n            } )\n            .then( visibilityManager.initialize )\n            // Give the widgets (a little) time to settle on the event bus before $digesting and painting:\n            .then( () => delay( WIDGET_ATTACH_DELAY_MS ) )\n            .then( () => areaHelper.attachWidgets( activeWidgetAdapterWrappers ) );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function tearDownPage() {\n         visibilityManager.unsubscribe();\n         localeManager.unsubscribe();\n\n         return eventBus\n            .publishAndGatherReplies( 'endLifecycleRequest.default', LIFECYCLE_EVENT, EVENT_OPTIONS )\n            .then( () => {\n               activeWidgetAdapterWrappers.forEach( wrapper => wrapper.destroy() );\n               activeWidgetAdapterWrappers = [];\n               cleanUpLayout();\n               cleanUpLayout = () => {};\n            } );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function widgetsForPage( page ) {\n         return Object.keys( page.areas ).reduce( ( widgets, areaName ) => {\n            const areaWidgets = page.areas[ areaName ];\n            return areaWidgets.reduce( ( widgets, widget ) => {\n               widget.area = areaName;\n               return [ ...widgets, widget ];\n            }, widgets );\n         }, [] );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function layoutWidgetAdapterFor( areaHelper, widget ) {\n         return layoutLoader.load( widget.layout )\n            .then( ({ className, html }) => {\n               const adapter = createLayoutWidgetAdapter( areaHelper, className, {\n                  area: widget.area,\n                  id: widget.id,\n                  path: widget.layout\n               } );\n\n               return {\n                  id: widget.id,\n                  adapter,\n                  destroy: adapter.destroy,\n                  templatePromise: Promise.resolve( html )\n               };\n            } );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function renderLayout( pageElement, areaHelper, layoutInfo ) {\n         addClass( pageElement, layoutInfo.className );\n         pageElement.innerHTML = layoutInfo.html;\n\n         const areas = findWidgetAreas( pageElement );\n         const deregisterFuncs = Object.keys( areas )\n            .map( areaName => areaHelper.register( areaName, areas[ areaName ] ) );\n\n         DEFAULT_AREAS.forEach( area => {\n            if( areaHelper.exists( area.name ) ) {\n               return;\n            }\n\n            const node = document.createElement( 'div' );\n            // We only set the attribute here for debugging purposes\n            node.setAttribute( 'ax-widget-area', area.name );\n            if( area.hidden ) {\n               node.style.display = 'none';\n            }\n            deregisterFuncs.push( areaHelper.register( area.name, node ) );\n            pageElement.appendChild( node );\n         } );\n\n         return () => {\n            deregisterFuncs.forEach( func => func() );\n            removeClass( pageElement, layoutInfo.className );\n         };\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      return api;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return pageServiceApi;\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction addClass( element, cssClass ) {\n   if( element.classList ) {\n      element.classList.add( cssClass );\n      return;\n   }\n   element.className += ` ${cssClass}`;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction removeClass( element, cssClass ) {\n   if( element.classList ) {\n      element.classList.remove( cssClass );\n      return;\n   }\n   element.className = element.className\n      .split( ' ' )\n      .map( c => c.trim() )\n      .filter( c => c !== cssClass )\n      .join( ' ' );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction delay( ms ) {\n   return new Promise( resolve => setTimeout( resolve, ms ) );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/page_service.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { forEach } from '../utilities/object';\n\n/**\n * The area helper manages widget areas, their DOM representation and their nesting structure.\n *\n * It tracks widget area visibility in order to compile widgets and to attach them to their areas when\n * these become visible.\n * It does not interact with the event bus directly, but is consulted by the visibility event manager to\n * determine area nesting for visibility events.\n */\n\nexport function create( page ) {\n\n   const exports = {\n      setVisibility,\n      areasInArea,\n      areasInWidget,\n      register,\n      exists,\n      attachWidgets\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   // all initially visible widgets should be attached together, to reduce jitter and unnecessary DOM ops\n   let freeToAttach = false;\n\n   // keep the dom element for each area, to attach widgets to\n   const areaToElement = {};\n\n   // track widget adapters waiting for their area to become available so that they may attach to its DOM\n   const areaToWaitingAdapters = {};\n\n   // track the visibility status of all areas\n   const knownVisibilityState = {};\n\n   // the containing area name for each widget\n   const widgetIdToArea = {};\n   forEach( page.areas, ( widgets, areaName ) => {\n      widgets.forEach( widget => {\n         widgetIdToArea[ widget.id ] = areaName;\n      } );\n   } );\n\n   // for each widget with children, and each widget area with nested areas, store a list of child names\n   const areasInAreaMap = {};\n   const areasInWidgetMap = {};\n   forEach( page.areas, ( widgetEntries, areaName ) => {\n      let containerName = '';\n      if( areaName.indexOf( '.' ) !== -1 ) {\n         const widgetId = areaName.split( '.' )[ 0 ];\n         areasInWidgetMap[ widgetId ] = areasInWidgetMap[ widgetId ] || [];\n         areasInWidgetMap[ widgetId ].push( areaName );\n         containerName = widgetIdToArea[ widgetId ];\n      }\n      areasInAreaMap[ containerName ] = areasInAreaMap[ containerName ] || [];\n      areasInAreaMap[ containerName ].push( areaName );\n   } );\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function isVisible( areaName ) {\n      return knownVisibilityState[ areaName ] || false;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function setVisibility( areaName, visible ) {\n      if( visible && freeToAttach ) {\n         attachWaitingAdapters( areaName );\n      }\n      knownVisibilityState[ areaName ] = visible;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function areasInArea( containerName ) {\n      return areasInAreaMap[ containerName ];\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function areasInWidget( widgetId ) {\n      return areasInWidgetMap[ widgetId ];\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Register a widget area\n    *\n    * @param {String} name\n    *    the area name as used in the page definition\n    * @param {HTMLElement} element\n    *    an HTML element representing the widget area\n    *\n    * @return {Function}\n    *    removes the according area from the registry again\n    */\n   function register( name, element ) {\n      if( name in areaToElement ) {\n         throw new Error( `The area \"${name}\" is defined twice in the current layout.` );\n      }\n\n      areaToElement[ name ] = element;\n      if( freeToAttach && isVisible( name ) ) {\n         attachWaitingAdapters( name );\n      }\n\n      return () => {\n         delete areaToElement[ name ];\n      };\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function exists( name ) {\n      return name in areaToElement;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function attachWidgets( widgetAdapters ) {\n      freeToAttach = true;\n      widgetAdapters.forEach( adapterRef => {\n         const areaName = widgetIdToArea[ adapterRef.id ];\n         areaToWaitingAdapters[ areaName ] = areaToWaitingAdapters[ areaName ] || [];\n         areaToWaitingAdapters[ areaName ].push( adapterRef );\n      } );\n      forEach( page.areas, ( widgets, areaName ) => {\n         if( isVisible( areaName ) ) {\n            attachWaitingAdapters( areaName );\n         }\n      } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   // eslint-disable-next-line valid-jsdoc\n   /** @private */\n   function attachWaitingAdapters( areaName ) {\n      const waitingAdapters = areaToWaitingAdapters[ areaName ];\n      if( !waitingAdapters || !waitingAdapters.length ) { return; }\n\n      const element = areaToElement[ areaName ];\n      if( !element ) { return; }\n\n      // Make sure that all assets are available before proceeding, so that DOM update happens en bloc.\n      Promise.all( waitingAdapters.map( adapterRef => adapterRef.templatePromise ) )\n         .then( htmlTemplates => {\n            // prepare first/last bootstrap classes for appending widgets\n            waitingAdapters.forEach( ( adapterRef, i ) => {\n               adapterRef.adapter.domAttachTo( element, htmlTemplates[ i ] );\n            } );\n         } );\n\n      delete areaToWaitingAdapters[ areaName ];\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return exports;\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport function findWidgetAreas( rootElement ) {\n   const areas = {};\n   Array.from( rootElement.querySelectorAll( '[ax-widget-area],[data-ax-widget-area]' ) )\n      .forEach( elem => {\n         const name = elem.getAttribute( 'ax-widget-area' ) || elem.getAttribute( 'data-ax-widget-area' );\n\n         areas[ name ] = elem;\n      } );\n   return areas;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/area_helper.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { findWidgetAreas } from './area_helper';\n\nexport function create( areaHelper, className, widget ) {\n\n   const exports = {\n      createController,\n      domAttachTo,\n      domDetach,\n      destroy\n   };\n   let layoutNode;\n   let deregister = () => {};\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createController() {\n      // noop\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function domAttachTo( areaElement, htmlTemplate ) {\n      if( layoutNode ) {\n         areaElement.appendChild( layoutNode );\n         return;\n      }\n\n      layoutNode = document.createElement( 'div' );\n      layoutNode.id = widget.id;\n      layoutNode.className = className;\n      layoutNode.innerHTML = htmlTemplate;\n\n      const areas = findWidgetAreas( layoutNode );\n      const deregisterFuncs = Object.keys( areas )\n         .map( areaName => areaHelper.register( `${widget.id}.${areaName}`, areas[ areaName ] ) );\n      deregister = () => deregisterFuncs.forEach( func => func() );\n\n      areaElement.appendChild( layoutNode );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function domDetach() {\n      if( layoutNode.parentNode ) {\n         layoutNode.parentNode.removeChild( layoutNode );\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function destroy() {\n      deregister();\n      layoutNode = null;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return exports;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/layout_widget_adapter.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { forEach } from '../utilities/object';\n\n/**\n * Module providing the page.js router factory.\n *\n * @module pagejs_router\n */\n\nconst ROUTE_PARAM_MATCHER = /\\/:([^\\/\\?\\(]+)(\\(\\.\\*\\)|\\?)?/g;\nconst TRAILING_SEGMENTS_MATCHER = /\\/(_\\/)*_?$/;\n\n/**\n * Creates and returns a new page.js router instance from its dependencies.\n *\n * @param {Object} pagejs\n *    the pagejs router module (or a compatible mock)\n * @param {Browser} browser\n *    the browser, used to determine the document base href\n * @param {Configuration} configuration\n *    the configuration instance, used to lookup router configuration as described above\n *\n * @return {PagejsRouter}\n *    a router instance that will route as soon as `registerRoutes` is invoked\n *\n * @private\n */\nexport function create( pagejs, browser, configuration ) {\n\n   const hashbang = configuration.get( 'router.pagejs.hashbang', false );\n   const queryEnabled = configuration.ensure( 'router.query.enabled' );\n\n   const base = configuration.get( 'router.base' ) || fallbackBase( hashbang );\n   const origin = originFromLocation( browser.location() );\n   const absoluteBase = browser.resolve( base, origin );\n\n   /**\n    * Router implementation based on [page.js](https://visionmedia.github.io/page.js/).\n    *\n    * This router allows to register flow patterns in page.js syntax so that their handler is activated when\n    * the corresponding URL is entered in the browser. While that alone does not add much to the\n    * functionality built into page.js, this router also allows to construct URLs based on a pattern and\n    * corresponding substitution parameters. Finally, users can trigger navigation directly.\n    *\n    * Note that the router supports various configuration options:\n    *\n    *  - `router.pagejs`: configuration object that is directly passed to page.js (such as `click`,\n    *    `popstate`, `dispatch`, `hashbang`). The application is responsible for specifying the required\n    *    options, as LaxarJS does not touch the page.js defaults otherwise. Consult the page.js documentation\n    *    for more information\n    *  - `router.query.enabled`: if `true`, query parameters are automatically transformed into additional\n    *    place parameters and vice versa. The default is `false`\n    *  - `router.base`: The base path under which to perform routing. If omitted, the document base href is\n    *    used\n    *\n    * Note that this router encodes/decodes certain parameters in a way that is different from page.js:\n    *\n    *  - when the value `null` is encoded into a URL path segment, it is encoded as `_`\n    *  - the value `/` is double-encoded\n    *\n    * @name PagejsRouter\n    * @constructor\n    */\n   return {\n      registerRoutes,\n      navigateTo,\n      constructAbsoluteUrl\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Register all routes defined in the given route map, as well as a fallback route that should be used\n    * when none of the other routes match. Also causes the initial route to be triggered.\n    *\n    * @param {Object.<String, Function>} routeMap\n    *    a map of routing patterns in page.js syntax to the corresponding handler functions. When invoked,\n    *    the handler functions will receive the decoded parameter values for their pattern and (if configured)\n    *    from the query string, as a map from string parameter name to string value\n    * @param {Function} fallbackHandler\n    *    a handler that is invoked when none of the configured routes match. It receives the failed path as\n    *    a string argument\n    *\n    * @memberof PagejsRouter\n    */\n   function registerRoutes( routeMap, fallbackHandler ) {\n      pagejs.base( base );\n      forEach( routeMap, ( handler, pattern ) => {\n         pagejs( pattern, context => {\n            handler( collectParameters( pattern, context ) );\n         } );\n      } );\n      pagejs( '*', context => {\n         fallbackHandler( context.path );\n      } );\n      pagejs.start( configuration.get( 'router.pagejs', {} ) );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Change the browser location to a different routable URL, from pattern and parameters. This is also\n    * called reverse-routing.\n    *\n    * @param {String[]} patterns\n    *    a list of patterns to choose from. This allows the router to pick the \"best\" pattern, such as the\n    *    pattern containing the largest number of given parameters. This router always picks the first pattern\n    *    for now.\n    * @param {Object} parameters\n    *    parameter values to substitute into the pattern to generate a URL\n    * @param {Boolean} [replaceHistory=true]\n    *    if `true`, the current history entry is replaced with the new one, otherwise a new entry is pushed.\n    *    Useful to express redirects\n    *\n    * @memberof PagejsRouter\n    */\n   function navigateTo( patterns, parameters, replaceHistory = false ) {\n      const path = constructPath( patterns, parameters );\n      ( replaceHistory ? pagejs.redirect : pagejs.show )( path );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Create a routable URL, from pattern and parameters. This allows to create link-hrefs without repeating\n    * URL patterns throughout the code base.\n    *\n    * @param {Array<String>} patterns\n    *    a list of patterns to choose from. This allows the router to pick the \"best\" pattern, such as the\n    *    pattern containing the largest number of given parameters. This router always picks the first pattern\n    *    for now.\n    * @param {Object} parameters\n    *    parameter values to substitute into the pattern to generate a URL\n    * @param {Object} parameterDefaults\n    *    only applicable if query strings are enabled by configuration: before a parameter is encoded into the\n    *    query string, it is checked against the default. Only values that are different from their default\n    *    are kept\n    *\n    * @return {String} the resulting URL, including schema and host\n    *\n    * @memberof PagejsRouter\n    */\n   function constructAbsoluteUrl( patterns, parameters, parameterDefaults ) {\n      const routingPath = constructPath( patterns, parameters, parameterDefaults );\n      return hashbang ? `${absoluteBase}#!${routingPath}` : `${absoluteBase}${routingPath}`;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function constructPath( patterns, parameters ) {\n      const bestPattern = patterns[ 0 ];\n      const path = bestPattern\n         .replace( ROUTE_PARAM_MATCHER, ( $0, $param, $modifier ) => {\n            const replacement = encodeSegment( parameters[ $param ], $modifier === '(.*)' );\n            delete parameters[ $param ];\n            return `/${replacement}`;\n         } )\n         .replace( TRAILING_SEGMENTS_MATCHER, '/' );\n\n      if( queryEnabled ) {\n         const query = [];\n         forEach( parameters, (value, parameterName) => {\n            const encodedKey = encodeURIComponent( parameterName );\n            if( value === true ) {\n               query.push( encodedKey );\n               return;\n            }\n            if( value === false || value == null ) {\n               return;\n            }\n            query.push( `${encodedKey}=${encodeURIComponent( value )}` );\n         } );\n\n         if( query.length ) {\n            return `${path}?${query.join( '&' )}`;\n         }\n      }\n\n      return path;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function collectParameters( pattern, context ) {\n      const { querystring = '', params = {} } = context;\n      const parameters = {};\n      if( queryEnabled && querystring.length ) {\n         querystring.split( '&' )\n            .map( _ => _.split( '=' ).map( decodeURIComponent ) )\n            .forEach( ([ key, value ]) => {\n               parameters[ key ] = value !== undefined ? value : true;\n            } );\n      }\n      forEach( params, ( value, key ) => {\n         const isMultiSegment = pattern.indexOf( `/:${key}(.*)` ) !== -1;\n         parameters[ key ] = decodeSegment( value, isMultiSegment );\n      } );\n      return parameters;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Encode a parameter value for use as path segment(s) in routing.\n    *\n    * Usually, values are simply URL-encoded, but there are special cases:\n    *\n    *  - `null` and `undefined` are encoded as '_',\n    *  - other non-string values are converted to strings before URL encoding,\n    *  - slashes ('/') are double-encoded to '%252F', so that page.js ignores them during route matching,\n    *  - underscore ('_') is double-encoded to '%255F', to avoid confusion with '_' (null).\n    *\n    * When decoded, for use in didNavigate events, the original values will be restored, except for:\n    *  - non-string input values, which will always be decoded into strings,\n    *  - `undefined` values which will be decoded to `null`.\n    *\n    * @param {*} value\n    *   the parameter to encode\n    * @param {Boolean} [isMultiSegment=false]\n    *   determines if encoded value may contain slashes (true) or if slashes are double-encoded so that the\n    *   parameter can always be matched by a single path segment (false)\n    * @return {String}\n    *   the encoded value, for use as a path segment in URLs\n    *\n    * @private\n    */\n   function encodeSegment( value, isMultiSegment ) {\n      if( value == null ) { return '_'; }\n      const urlSegments = encodeURIComponent( value ).replace( /_/g, '%255F' );\n      return isMultiSegment ? urlSegments : urlSegments.replace( /%2F/g, '%252F' );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Decodes a place parameter value from a path segment, to restore it for use in will/didNavigate events.\n    *\n    * Usually, this reverses the application of {#encodeSegment} after the browser has decoded a URL, except:\n    *  - path-segments based on non-string input values, which will always be decoded into strings,\n    *  - path-segments based on `undefined` values which will be decoded to `null`.\n    *\n    * Note that while the browser has already performed URL-decoding, this function replaces `%2F` into `/`\n    * and `%5F` to `_`, to be compatible with the double-encoding performaed by {#encodeSegment}.\n    *\n    * @param {String} value\n    *   the encoded parameter segment to decode\n    * @param {Boolean} [isMultiSegment=false]\n    *   determines if url-encoded slashes in the value were part of the original input (true) or if slashes\n    *   in the given value were double-encoded by {#encodeSegment} and need additional decoding (false)\n    * @return {String}\n    *   the decoded value, for use as a path segment in URLs\n    *\n    * @private\n    */\n   function decodeSegment( value, isMultiSegment ) {\n      if( value === '_' || value == null ) { return null; }\n      const segments = value.replace( /%5F/g, '_' );\n      return isMultiSegment ? segments : segments.replace( /%2F/g, '/' );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function fallbackBase( hashbang ) {\n      if( hashbang ) {\n         return browser.location().pathname;\n      }\n      // relies on the HTML `base` element being present\n      const documentBase = browser.resolve( '.' ).replace( /\\/$/, '' );\n      return documentBase;\n   }\n}\n\nfunction originFromLocation({ protocol, hostname, port }) {\n   return `${protocol}://${hostname}${port ? `:${port}` : ''}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/pagejs_router.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nimport { deepClone } from '../utilities/object';\n\nconst senderOptions = { sender: 'AxPageController' };\nconst subscriberOptions = { subscriber: 'AxPageController' };\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * The LocaleManager initializes the locale(s) and implements changes to them.\n *\n * Before publishing the state of all configured locales, it listens to change requests, allowing\n * widgets and activities (such as a LocaleSwitcherWidget) to influence the state of locales before\n * the navigation is complete.\n */\n\nexport function create( eventBus, configuration ) {\n\n   const exports = {\n      initialize,\n      subscribe,\n      unsubscribe\n   };\n\n   const configLocales = configuration.ensure( 'i18n.locales' );\n   let i18n;\n   let initialized;\n   let unsubscribeFromEventBus = () => {};\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function publish( locale ) {\n      const event = { locale, languageTag: i18n[ locale ] };\n      return eventBus.publish( `didChangeLocale.${locale}`, event, senderOptions );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function initialize() {\n      initialized = true;\n      return Promise.all( Object.keys( configLocales ).map( publish ) );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function unsubscribe() {\n      unsubscribeFromEventBus();\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function subscribe() {\n      i18n = deepClone( configLocales );\n      initialized = false;\n\n      unsubscribeFromEventBus = eventBus.subscribe( 'changeLocaleRequest', event => {\n         i18n[ event.locale ] = event.languageTag;\n         if( initialized ) {\n            publish( event.locale );\n         }\n      }, subscriberOptions );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return exports;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/locale_event_manager.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\nconst senderOptions = { sender: 'AxPageController', deliverToSender: false };\nconst subscriberOptions = { subscriber: 'AxPageController' };\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * The visibility event manager initializes and coordinates events for widget area visibility.\n *\n * It subscribes to all visibility changes and propagates them to nested widget areas\n * (if applicable). It is not concerned with the resulting DOM-visibility of individual controls:\n * the `axVisibilityService` takes care of that.\n *\n * @param {EventBus} eventBus\n *    an event bus instance\n * @return {Object}\n *    a function to trigger initialization of the manager and initial widget visibility\n */\nexport function create( eventBus ) {\n\n   const exports = {\n      initialize,\n      setAreaHelper,\n      unsubscribe\n   };\n\n   let areaHelper;\n   let unsubscribeFromAreaVisibilityRequest = () => {};\n   let unsubscribeFromWidgetVisibilityRequest = () => {};\n   const ROOT = '';\n\n   function setAreaHelper( _ ) {\n      areaHelper = _;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function initialize() {\n      // broadcast visibility changes in individual widgets to their nested areas\n      unsubscribeFromWidgetVisibilityRequest = eventBus.subscribe( 'changeWidgetVisibilityRequest', event => {\n         const affectedAreas = areaHelper.areasInWidget( event.widget );\n         const will = [ 'willChangeWidgetVisibility', event.widget, event.visible ].join( '.' );\n         const did = [ 'didChangeWidgetVisibility', event.widget, event.visible ].join( '.' );\n\n         eventBus.publish( will, event, senderOptions );\n\n         Promise.all( ( affectedAreas || [] ).map( event.visible ? show : hide ) )\n            .then( () => eventBus.publish( did, event, senderOptions ) );\n      }, subscriberOptions );\n\n      // broadcast visibility changes in widget areas to their nested areas\n      unsubscribeFromAreaVisibilityRequest = eventBus.subscribe( 'changeAreaVisibilityRequest', event => {\n         return initiateAreaChange( event.area, event.visible );\n      }, subscriberOptions );\n\n      return implementAreaChange( ROOT, true );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function show( area ) {\n      return requestAreaChange( area, true );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function hide( area ) {\n      return requestAreaChange( area, false );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * First, publish a `changeAreaVisibilityRequest` to ask if some widget would like to manage the\n    * given area's visibility.\n    * If no widget responds, self-issue a will/did-response to notify interested widgets in the area\n    * of their new visibility status.\n    * In either case, manage the propagation to nested areas and inform the area helper so that it\n    * may compile and attach the templates of any newly visible widgets.\n    *\n    * @param {String} area\n    *    the area whose visibility to update\n    * @param {Boolean} visible\n    *    the new visibility state of the given area, to the best knowledge of the client\n    * @return {Promise}\n    *    promise that is resolved after the change request is completed\n    */\n   function requestAreaChange( area, visible ) {\n      const request = [ 'changeAreaVisibilityRequest', area ].join( '.' );\n      const event = { area, visible };\n      return eventBus.publishAndGatherReplies( request, event, senderOptions )\n         .then( responses => {\n            if( responses.length === 0 ) {\n               // no one took responsibility, so the event manager determines visibility by area nesting\n               return initiateAreaChange( area, visible );\n            }\n            // assume the first 'did'-response to be authoritative:\n            const response = responses[ 0 ];\n            return implementAreaChange( area, response.event.visible );\n         } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   // eslint-disable-next-line valid-jsdoc\n   /**\n    * Set the new visibility state for the given area, then issue requests for the child areas.\n    * Inform the area helper so that it may compile and attach the templates of any newly visible\n    * widgets.\n    */\n   function initiateAreaChange( area, visible ) {\n      const will = [ 'willChangeAreaVisibility', area, visible ].join( '.' );\n      const event = { area, visible };\n      return eventBus.publish( will, event, senderOptions )\n         .then( () => implementAreaChange( area, visible ) )\n         .then( () => {\n            const did = [ 'didChangeAreaVisibility', area, visible ].join( '.' );\n            return eventBus.publish( did, event, senderOptions );\n         } );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function implementAreaChange( ofArea, areaVisible ) {\n      areaHelper.setVisibility( ofArea, areaVisible );\n      const children = areaHelper.areasInArea( ofArea );\n      if( !children ) {\n         return Promise.resolve();\n      }\n\n      return Promise.all( children.map( areaVisible ? show : hide ) );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function unsubscribe() {\n      unsubscribeFromWidgetVisibilityRequest();\n      unsubscribeFromAreaVisibilityRequest();\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   return exports;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/visibility_event_manager.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\n/**\n * Factory for the services that are available to the controller of a widget, regardless of the underlying\n * view framework.\n *\n * @module widget_services\n */\n\nimport assert from '../utilities/assert';\nimport { BLACKBOX } from '../runtime/log';\nimport { create as createI18n } from './widget_services_i18n';\nimport { create as createVisibility } from './widget_services_visibility';\n\nconst INVALID_ID_MATCHER = /[^A-Za-z0-9_\\.-]/g;\nconst ID_SEPARATOR = '-';\n\nexport function create(\n   artifactProvider,\n   configuration,\n   controlLoader,\n   globalEventBus,\n   flowService,\n   log,\n   heartbeat,\n   pageService,\n   storage,\n   toolingProviders\n) {\n\n   const i18nOptions = configuration.ensure( 'i18n' );\n\n   return {\n      forWidget( specification, widgetConfiguration, features, decorators = {} ) {\n         const { id: widgetId } = widgetConfiguration;\n         const { name: widgetName } = specification;\n\n         const instances = {\n            /**\n             * Area helper service instance.\n             *\n             * @type {AxAreaHelper}\n             */\n            axAreaHelper: null,\n\n            /**\n             * widget asset accessor instance.\n             *\n             * @type {AxAssets}\n             */\n            axAssets: null,\n\n            /**\n             * Interface to the configuration the application was bootstrapped with.\n             *\n             * @type {Configuration}\n             */\n            axConfiguration: null,\n\n            /**\n             * Context information and tiny service collection.\n             *\n             * @type {AxContext}\n             */\n            axContext: null,\n\n            /**\n             * The control loader api to provide access to control modules used by a widget.\n             *\n             * @type {ControlLoader}\n             */\n            axControls: null,\n\n            /**\n             * Event bus instance specifically enriched for a widget instance.\n             *\n             * @type {AxEventBus}\n             */\n            axEventBus: null,\n\n            /**\n             * The features the widget was configured with.\n             * Its structure depends solely on the schema defined in the widget's descriptor file\n             * (`widget.json`)\n             *\n             * @type {Object}\n             */\n            axFeatures: null,\n\n            /**\n             * Injection for the flow service.\n             *\n             * @type {FlowService}\n             */\n            axFlowService: null,\n\n            /**\n             * The global event bus instance of the application.\n             * {@link axEventBus} should always be prefered over this, since for example unsubscribing from\n             * event subscriptions on widget destruction needs be done manually and can lead to severe memory\n             * leaks if omitted.\n             * One valid use case could be an activity, that has permanent knowledge about the application's\n             * state and lifetime, and for example adds an inspector to the event bus.\n             *\n             * @type {EventBus}\n             */\n            axGlobalEventBus: null,\n\n            /**\n             * The global logger instance.\n             *\n             * @type {Logger}\n             */\n            axGlobalLog: null,\n\n            /**\n             * The global storage factory.\n             *\n             * @type {StorageFactory}\n             */\n            axGlobalStorage: null,\n\n            /**\n             * The heartbeat instance.\n             *\n             * @type {Heartbeat}\n             */\n            axHeartbeat: null,\n\n            /**\n             * I18n api specifically for the widget instance.\n             *\n             * @type {AxI18n}\n             */\n            axI18n: null,\n\n            /**\n             * A function that generates page wide unique ids based on ids that are unique within the scope\n             * of a widget.\n             *\n             * A common use case is the connection of a `label` HTML element and an `input` element via `for`\n             * and `id` attributes.\n             * For such cases ids should **always** be generated using this service.\n             *\n             * Example:\n             * ```js\n             * widgetDom.querySelector( 'label' ).setAttribute( 'for', axId( 'myField' ) );\n             * widgetDom.querySelector( 'input' ).setAttribute( 'id', axId( 'myField' ) );\n             * ```\n             *\n             * @param {String} localUniqueId\n             *    an identifier that is unique within a widget\n             *\n             * @return {String}\n             *    an identifier that is unique for the current page\n             *\n             * @type {Function}\n             */\n            axId: null,\n\n            /**\n             * The widget logger instance.\n             * This is basically the same as the {@link #axGlobalLog}, but adds the name of the widget as\n             * prefix and its id as suffix to every log message.\n             *\n             * @type {Logger}\n             */\n            axLog: null,\n\n            /**\n             * Ready to use storage apis for a widget.\n             * All keys are namespaced by the widget id to limit visibility to this specific instance.\n             *\n             * @type {AxStorage}\n             */\n            axStorage: null,\n\n            /**\n             * Access to the tooling provider API.\n             * TODO Fix the type (and document toolingProviders)\n             *\n             * @type {*}\n             */\n            axTooling: null,\n\n            /**\n             * Visibility services for a widget instance.\n             * @type {AxVisibility}\n             */\n            axVisibility: null\n         };\n\n         const services = { ...instances };\n         const releaseHandlers = [];\n\n         registerServiceFactory(\n            'axAreaHelper',\n            () => createAreaHelperForWidget( widgetId ),\n            () => { instances.axAreaHelper.release(); }\n         );\n         registerServiceFactory(\n            'axAssets',\n            () => createAssetsServiceForWidget( widgetName )\n         );\n         registerService( 'axConfiguration', configuration );\n         registerServiceFactory(\n            'axContext',\n            () => createContextForWidget( widgetConfiguration, widgetId, services )\n         );\n         registerService( 'axControls', controlLoader );\n         registerServiceFactory(\n            'axEventBus',\n            () => createEventBusForWidget( services.axGlobalEventBus, widgetName, widgetId ),\n            () => { instances.axEventBus.release(); }\n         );\n         registerService( 'axFeatures', features );\n         registerService( 'axFlowService', flowService );\n         registerService( 'axGlobalEventBus', globalEventBus );\n         registerService( 'axGlobalLog', log );\n         registerService( 'axGlobalStorage', storage );\n         registerService( 'axHeartbeat', heartbeat );\n\n         registerServiceFactory(\n            'axI18n',\n            () => createI18n( services.axContext, i18nOptions )\n         );\n         registerServiceFactory(\n            'axId',\n            () => createIdGeneratorForWidget( widgetId )\n         );\n         registerServiceFactory(\n            'axLog',\n            () => createLoggerForWidget( log, widgetName, widgetId )\n         );\n         registerServiceFactory(\n            'axStorage',\n            () => createStorageForWidget( storage, widgetId )\n         );\n         registerServiceFactory(\n            'axVisibility',\n            () => createVisibility( services.axContext, services.axAreaHelper )\n         );\n         registerService( 'axTooling', toolingProviders );\n\n         return {\n            services,\n            releaseServices() {\n               releaseHandlers.forEach( f => { f(); } );\n            }\n         };\n\n         /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n         function registerService( name, instance ) {\n            const decorate = decorators[ name ];\n            instances[ name ] = services[ name ] = decorate ? decorate( instance ) : instance;\n         }\n\n         /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n         function registerServiceFactory( name, factory, optionalRelease ) {\n            Object.defineProperty(\n               services,\n               name, {\n                  get: () => {\n                     if( !instances[ name ] ) {\n                        const decorate = decorators[ name ];\n                        const instance = factory();\n                        instances[ name ] = decorate ? decorate( instance ) : instance;\n                        if( optionalRelease ) {\n                           releaseHandlers.push( optionalRelease );\n                        }\n                     }\n                     return instances[ name ];\n                  }\n               }\n            );\n\n         }\n      }\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createContextForWidget( widgetConfiguration, widgetId, services ) {\n\n      /**\n       * This object encapsulates widget context information and provides access to the most important widget\n       * specific service instances.\n       * Most commonly this is used when working with\n       * [LaxarJS Patterns](https://github.com/LaxarJS/laxar-patterns).\n       *\n       * @name AxContext\n       * @constructor\n       */\n      return {\n\n         /**\n          * The event bus instance of the widget. This is the same as {@link #axEventBus}.\n          *\n          * @type {AxEventBus}\n          * @memberof AxContext\n          */\n         eventBus: services.axEventBus,\n\n         /**\n          * The configured features of the widget. This is the same as {@link #axFeatures}.\n          *\n          * @type {Object}\n          * @memberof AxContext\n          */\n         features: services.axFeatures,\n\n         /**\n          * The unique id generator function. This is the same as {@link #axId}.\n          *\n          * @type {Function}\n          * @memberof AxContext\n          */\n         id: services.axId,\n\n         /**\n          * The widget local log instance. This is the same as {@link #axLog}.\n          *\n          * @type {AxLog}\n          * @memberof AxContext\n          */\n         log: services.axLog,\n\n         /**\n          * Some information regarding the widget instance.\n          *\n          * The following fields are available:\n          * - `area`: full name of the area the widget is located in\n          * - `id`: the unique id of the widget on the page\n          * - `path`: path of the widget that was used to reference it in the according page or composition.\n          *    This is not the actual path on the file system, but most probably an alias known by the used\n          *    module loader.\n          *\n          * @type {Object}\n          * @memberof AxContext\n          */\n         widget: {\n            area: widgetConfiguration.area,\n            id: widgetId,\n            path: widgetConfiguration.widget\n         }\n      };\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createAreaHelperForWidget( widgetId ) {\n      const deregisterFuncs = [];\n\n      /**\n       * @name AxAreaHelper\n       * @constructor\n       */\n      return {\n         /**\n          * Looks up the global name of a widget area within a widget, as generated by LaxarJS.\n          * This is the reverse of {@link #AxAreaHelper.localName()}.\n          *\n          * @param {String} localAreaName\n          *    the widget-local name of the area\n          *\n          * @return {String}\n          *    the globally valid name of the area\n          *\n          * @memberof AxAreaHelper\n          */\n         fullName( localAreaName ) {\n            assert( localAreaName || null ).hasType( String ).isNotNull();\n            return qualify( localAreaName );\n         },\n\n         /**\n          * Returns the local part of a global area name.\n          * This is the reverse of {@link #AxAreaHelper.fullName()}.\n          *\n          * @param {String} fullAreaName\n          *    the global name of the area\n          *\n          * @return {String}\n          *    the name of the area as it is known to the widget\n          *\n          * @memberof AxAreaHelper\n          */\n         localName( fullAreaName ) {\n            assert( fullAreaName ).hasType( String ).isNotNull();\n            return unqualify( fullAreaName );\n         },\n\n         /**\n          * Registers a DOM element as area of a widget with the area helper.\n          *\n          * @param {String} localAreaName\n          *    the widget-local name of the area\n          * @param {HTMLElement} element\n          *    the element to register as widget area\n          *\n          * @memberof AxAreaHelper\n          */\n         register( localAreaName, element ) {\n            assert( localAreaName ).hasType( String ).isNotNull();\n            assert( element ).hasType( Object ).isNotNull();\n            const areaHelper = pageService.controller().areaHelper();\n            deregisterFuncs.push( areaHelper.register( qualify( localAreaName ), element ) );\n         },\n         release() {\n            deregisterFuncs.forEach( _ => { _(); } );\n         }\n      };\n\n      function qualify( localAreaName ) {\n         return `${widgetId}.${localAreaName}`;\n      }\n\n      function unqualify( fullAreaName ) {\n         return fullAreaName.slice( widgetId.length + 1 );\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createAssetsServiceForWidget( widgetName ) {\n      const widgetArtifacts = artifactProvider.forWidget( widgetName );\n\n      /**\n       * _Note:_ This service is a function with the {@link #AxAssets.url()}, {@link #AxAssets.forTheme()} and\n       * {@link #AxAssets.urlForTheme()} functions as properties.\n       *\n       * Resolves an asset located directly in the widget folder or a subfolder of it.\n       * Valid assets are all non-binary files like JSON or text files.\n       * For binary files there exists the {@link #AxAssets.url} function.\n       *\n       * Example:\n       * ```\n       * function Controller( axAssets ) {\n       *    axAssets( 'data.json' ).then( fileContent => { ... } );\n       * }\n       * ```\n       *\n       * @param {String} name\n       *    name of the asset to resolve\n       *\n       * @return {Promise}\n       *    promise for the asset\n       *\n       * @name AxAssets\n       */\n      const assetService = name => widgetArtifacts.asset( name );\n\n      /**\n       * Resolves the absolute url to the given asset located directly in the widget folder or a subfolder of\n       * it.\n       * This can then be safely used in e.g. `video` or `img` tags.\n       *\n       * Example:\n       * ```\n       * function Controller( axAssets ) {\n       *    axAssets.url( 'tux.jpg' ).then( url => { img.src = url; } );\n       * }\n       * ```\n       *\n       * @param  {String} name\n       *    name of the asset the url should be returned of\n       *\n       * @return {Promise}\n       *    promise for the url\n       *\n       * @memberof AxAssets\n       */\n      assetService.url = name => widgetArtifacts.assetUrl( name );\n\n      /**\n       * Resolves an asset from one of the `*.theme` subfolders of the widget.\n       * The folder from which the asset is taken, depends on the selected theme and the availability of the\n       * file within that theme (See\n       * [here](http://laxarjs.org/docs/laxar-latest/manuals/creating_themes/#how-the-runtime-finds-css) for\n       * further information on theme asset lookup).\n       * Valid assets are all non-binary files like JSON or text files.\n       * For binary files there exists the {@link #AxAssets.urlForTheme} function.\n       *\n       * Example:\n       * ```\n       * function Controller( axAssets ) {\n       *    axAssets.forTheme( 'some-template.html' ).then( template => { ... } );\n       * }\n       * ```\n       *\n       * @param {String} name\n       *    name of the asset to resolve\n       *\n       * @return {Promise}\n       *    promise for the asset\n       *\n       * @memberof AxAssets\n       */\n      assetService.forTheme = name => widgetArtifacts.assetForTheme( name );\n\n      /**\n       * Resolves the absolute url to the given asset from one of the `*.theme` subfolders of the widget.\n       * This can then be safely used in e.g. `video` or `img` tags.\n       * The folder from which the asset is taken, depends on the selected theme and the availability of the\n       * file within that theme (See\n       * [here](http://laxarjs.org/docs/laxar-latest/manuals/creating_themes/#how-the-runtime-finds-css) for\n       * further information on theme asset lookup).\n       *\n       * Example:\n       * ```\n       * function Controller( axAssets ) {\n       *    axAssets.urlForTheme( 'icon.jpg' ).then( url => { img.src = url; } );\n       * }\n       * ```\n       *\n       * @param  {String} name\n       *    name of the asset the url should be returned of\n       *\n       * @return {Promise}\n       *    promise for the url\n       *\n       * @memberof AxAssets\n       */\n      assetService.urlForTheme = name => widgetArtifacts.assetUrlForTheme( name );\n      return assetService;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createLoggerForWidget( logger, widgetName, widgetId ) {\n      const newLogger = Object.create( logger );\n      newLogger.log = ( level, message, ...rest ) =>\n         logger.log( level, enrich( message ), ...rest, BLACKBOX );\n      Object.keys( logger.levels )\n         .map( _ => _.toLowerCase() )\n         .forEach( method => {\n            newLogger[ method ] = ( message, ...rest ) =>\n               logger[ method ]( enrich( message ), ...rest, BLACKBOX );\n         } );\n      return newLogger;\n\n      function enrich( message ) {\n         return `${widgetName}: ${message} (widget-id: ${widgetId})`;\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createStorageForWidget( storage, widgetId ) {\n      const namespace = `widget-${widgetId}`;\n\n      /**\n       * Ready to use storage API for a single widget instance.\n       * All keys are namespaced by the widget id to limit visibility to this specific instance.\n       *\n       * @name AxStorage\n       * @constructor\n       */\n      return {\n         /**\n          * An instance of the storage api using the persistent `window.localStorage`.\n          *\n          * @type {StorageApi}\n          * @memberof AxStorage\n          */\n         local: storage.getLocalStorage( namespace ),\n\n         /**\n          * An instance of the storage api using the non-persistent `window.sessionStorage`.\n          *\n          * @type {StorageApi}\n          * @memberof AxStorage\n          */\n         session: storage.getSessionStorage( namespace )\n      };\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createIdGeneratorForWidget( widgetId ) {\n      const charCodeOfA = 'a'.charCodeAt( 0 );\n      function fixLetter( l ) {\n         // We map invalid characters deterministically to valid lower case letters. Thereby a collision of\n         // two IDs with different invalid characters at the same positions is less likely to occur.\n         return String.fromCharCode( charCodeOfA + ( l.charCodeAt( 0 ) % 26 ) );\n      }\n\n      const prefix = `ax${ID_SEPARATOR}${widgetId.replace( INVALID_ID_MATCHER, fixLetter )}${ID_SEPARATOR}`;\n      return localId => prefix + `${localId}`.replace( INVALID_ID_MATCHER, fixLetter );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function createEventBusForWidget( eventBus, widgetName, widgetId ) {\n\n      const collaboratorId = `widget.${widgetName}#${widgetId}`;\n      const inspectorRemoveFunctions = [];\n      const unsubscribeFunctions = [];\n\n      /**\n       * This is an extension of the global {@link event_bus#EventBus EventBus} by widget specific information\n       * and tasks.\n       * For example a combination of the widget's name and its id is always used as subscriber and sender\n       * id.\n       * Hence for example {@link event_bus#EventBus.publishAndGatherReplies EventBus.publishAndGatherReplies}\n       * works without passing in any options.\n       *\n       * Additionally all subscriptions of a widget are removed as soon as the widget itself is destroyed.\n       * So in practice a widget will receive no further events after the `endLifecycleRequest` event\n       * processing has finished.\n       *\n       * The documentation for the events bus api can be found {@linkplain event_bus here}.\n       *\n       * @name AxEventBus\n       * @constructor\n       */\n      return {\n         addInspector( inspector ) {\n            return makeAutoRemovable( inspectorRemoveFunctions, eventBus.addInspector( inspector ) );\n         },\n         unsubscribe( subscriber ) {\n            return eventBus.unsubscribe( subscriber );\n         },\n         subscribe( eventName, subscriber, optionalOptions ) {\n            const options = { ...optionalOptions, subscriber: collaboratorId };\n            const unsubscribe = eventBus.subscribe( eventName, subscriber, options );\n\n            return makeAutoRemovable( unsubscribeFunctions, unsubscribe );\n         },\n         publish( eventName, optionalEvent, optionalOptions ) {\n            const options = { ...optionalOptions, sender: collaboratorId };\n            return eventBus.publish( eventName, optionalEvent, options );\n         },\n         publishAndGatherReplies( eventName, optionalEvent, optionalOptions ) {\n            const options = { ...optionalOptions, sender: collaboratorId };\n            return eventBus.publishAndGatherReplies( eventName, optionalEvent, options );\n         },\n         release() {\n            purgeAutoRemoveRegistries( inspectorRemoveFunctions, unsubscribeFunctions );\n         }\n      };\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function makeAutoRemovable( registry, removeFunction ) {\n         registry.push( removeFunction );\n         return () => {\n            removeFunction();\n            const index = registry.indexOf( removeFunction );\n            if( index !== -1 ) {\n               registry.splice( index, 1 );\n            }\n         };\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function purgeAutoRemoveRegistries( ...registries ) {\n         registries.forEach( registry => {\n            registry.forEach( _ => { _(); } );\n            registry.length = 0;\n         } );\n      }\n\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/widget_services.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\n/**\n * Factory for i18n widget service instances.\n *\n * @module widget_services_i18n\n */\nimport assert from '../utilities/assert';\nimport { path, setPath } from '../utilities/object';\nimport { format as stringFormat } from '../utilities/string';\n\nconst noDeliveryToSender = { deliverToSender: false };\n\nconst primitives = {\n   string: true,\n   number: true,\n   boolean: true\n};\n\nconst normalize = memoize( languageTag => languageTag.toLowerCase().replace( /[_]/g, '-' ) );\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a widget-specific helper for `didChangeLocale` events.\n *\n * @param {AxContext} context\n *    the widget context/scope that the handler should work with. It uses the `eventBus` property there\n *    with which it can do the event handling. The i18n service may be asked to `track` more context\n *    properties `i18n`, an object that maps each locale to its current language tag.\n * @param {Object} [optionalOptions]\n *    the fallback language tag to use when no localization is available for a locale's current language tag\n * @param {String} [optionalOptions.fallback]\n *    the fallback language tag to use when no localization is available for a locale's current language tag\n * @param {Boolean} [optionalOptions.strict]\n *    if `true`, localizations are only used if the language tags exactly match the current locale's tag\n *    (after normalizing case and dash/underscore). If `false` (default), specific requests can be satisfied\n *    by general localizations (e.g. a translation for 'en' may be used when missing 'en_GB' was requested).\n *\n * @return {AxI18n}\n *    an i18n instance\n */\nexport function create( context, optionalOptions = {} ) {\n\n   const { features, eventBus } = context;\n   const { fallback = 'en', strict = false } = optionalOptions;\n   const handlers = {};\n   const tags = {};\n   const callbacks = {};\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   const release = eventBus.subscribe( 'didChangeLocale', handleLocaleChange );\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * An i18n instance allows to create {@link #AxI18nHandler} instances for any feature, but is itself also\n    * an i18n handler for the feature `i18n`.\n    * So if the widget using the {@link widget_services#axI18n axI18n} injection does use the recommended\n    * name `i18n` for the localization feature, use this directly with the i18n handler API.\n    *\n    * @constructor\n    * @name AxI18n\n    */\n   return {\n      forFeature,\n      release,\n      ...forFeature( 'i18n' )\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Creates and returns an i18n handler for the loclization configuration under the given\n    * [feature path](../glossary#feature-path).\n    * The value is expected to be an object with the key `locale` that is configured with the locale to use\n    * in the widget instance.\n    *\n    * @param {String} featurePath\n    *    the feature path localization configuration can be found at\n    *\n    * @return {AxI18nHandler}\n    *    the i18n handler for the given feature path\n    *\n    * @memberof AxI18n\n    */\n   function forFeature( featurePath ) {\n      assert( featurePath ).hasType( String ).isNotNull();\n      if( handlers[ featurePath ] ) {\n         return handlers[ featurePath ];\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * @constructor\n       * @name AxI18nHandler\n       */\n      const api = {\n         format,\n         languageTag,\n\n         /**\n          * Localize the given internationalized object using the given languageTag.\n          *\n          * If i18n is configured to be _strict_, the currently active language tag is used to lookup a\n          * translation.\n          * If nothing is found, the `languageTag` argument is tried.\n          * If still nothing is found, `undefined` is returned.\n          *\n          * In the case _strict_ is set to `false`, the behavior is the same as in _strict_ mode if an exact\n          * localization is available.\n          * If not, the language tag is successively generalized by stripping off the rightmost sub-tags\n          * until a localization is found.\n          * Eventually, a fallback (default: 'en') is used.\n          * This behavior is especially useful for controls (such as a datepicker), where we cannot\n          * anticipate all required language tags, as they may be app-specific.\n          *\n          * @param {*} i18nValue\n          *    a possibly internationalized value:\n          *    - when passing a primitive value, it is returned as-is\n          *    - when passing an object, the languageTag is used as a key within that object\n          * @param {*} [optionalFallbackValue]\n          *    a value to use if no localization is available for the given language tag\n          * @param {String} [languageTag]\n          *    a language tag to override the current locale tag. Only available in _strict_ mode\n          *\n          * @return {*}\n          *    the localized value if found, the fallback (or `undefined`) otherwise\n          *\n          * @memberof AxI18nHandler\n          * @name localize\n          */\n         localize: strict ? localizeStrict : localizeRelaxed,\n         track,\n         update,\n         whenLocaleChanged\n      };\n      handlers[ featurePath ] = api;\n      const locale = path( features, `${featurePath}.locale` );\n      assert( locale ).hasType( String ).isNotNull(\n         `axI18n: missing feature-configuration '${featurePath}.locale' (widget: ${context.widget.id})`\n      );\n      return api;\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Updates the language tag for the configured locale by emitting the according `changeLocaleRequest`\n       * event.\n       *\n       * @param {String} languageTag\n       *    the language tag to propagate\n       *\n       * @return {Promise}\n       *    the promise of the event cycle\n       *\n       * @memberof AxI18nHandler\n       */\n      function update( languageTag ) {\n         return eventBus.publishAndGatherReplies( `changeLocaleRequest.${locale}`, {\n            locale,\n            languageTag\n         }, noDeliveryToSender ).then( () => {\n            tags[ locale ] = languageTag;\n         } );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Returns the language tag set for the configured locale.\n       * If no tag is available, `undefined` is returned.\n       *\n       * @return {String}\n       *    the active language tag or `undefined`\n       *\n       * @memberof AxI18nHandler\n       */\n      function languageTag() {\n         return tags[ locale ];\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Tracks the current i18n state under the given property.\n       * This includes the current locale and the currently valid tag for this locale.\n       *\n       * @param {Boolean} [enabled=true]\n       *    if `true`, tracking is enabled\n       * @param {*} [property=featurePath]\n       *    name of the context property to store the state at\n       *\n       * @memberof AxI18nHandler\n       */\n      function track( enabled = true, property = featurePath ) {\n         if( enabled && property ) {\n            setPath( context, property, { locale, tags } );\n         }\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Format an i18n value, by first localizing it and then applying substitutions.\n       *\n       * These are equivalent:\n       * - `string.format( axI18n.localize( i18nValue ), numericArgs, namedArgs )`\n       * - `axI18n.format( i18nValue, numericArgs, namedArgs )`.\n       *\n       * @param {String} i18nValue\n       *    the value to localize and then format\n       * @param {Array} [optionalIndexedReplacements]\n       *    replacements for any numeric placeholders in the localized value\n       * @param {Object} [optionalNamedReplacements]\n       *    replacements for any named placeholders in the localized value\n       *\n       * @return {String}\n       *    the formatted string after localization\n       *\n       * @memberof AxI18nHandler\n       */\n      function format( i18nValue, optionalIndexedReplacements, optionalNamedReplacements ) {\n         const formatString = api.localize( i18nValue );\n         return formatString && stringFormat(\n            formatString, optionalIndexedReplacements, optionalNamedReplacements\n         );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      /**\n       * Registers a callback that is called whenever the new valid locale was received via event.\n       *\n       * @param {Function} callback\n       *    the function to call on locale change\n       *\n       * @memberof AxI18nHandler\n       */\n      function whenLocaleChanged( callback ) {\n         callbacks[ locale ] = callbacks[ locale ] || [];\n         callbacks[ locale ].push( callback );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function localizeRelaxed( i18nValue, optionalFallbackValue ) {\n         if( !i18nValue || primitives[ typeof i18nValue ] ) {\n            // value is not internationalized\n            return i18nValue;\n         }\n\n         const tag = tags[ locale ];\n         const tagParts = tag ? tag.replace( /-/g, '_' ).split( '_' ) : [];\n         while( tagParts.length > 0 ) {\n            const currentLocaleTag = tagParts.join( '-' );\n            const value = localizeStrict( i18nValue, undefined, currentLocaleTag );\n            if( value !== undefined ) {\n               return value;\n            }\n            tagParts.pop();\n         }\n\n         return fallback ?\n            localizeStrict( i18nValue, optionalFallbackValue, fallback ) :\n            optionalFallbackValue;\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function localizeStrict( i18nValue, optionalFallbackValue, languageTag = tags[ locale ] ) {\n         if( !i18nValue || primitives[ typeof i18nValue ] ) {\n            // Value is not i18n\n            return i18nValue;\n         }\n         if( !languageTag ) {\n            return optionalFallbackValue;\n         }\n\n         // Try one direct lookup before scanning the input keys,\n         // assuming that language-tags are written in consistent style.\n         const value = i18nValue[ languageTag ];\n         if( value !== undefined ) {\n            return value;\n         }\n\n         const lookupKey = normalize( languageTag );\n         const availableTags = Object.keys( i18nValue );\n         const n = availableTags.length;\n         for( let i = 0; i < n; ++i ) {\n            const t = availableTags[ i ];\n            if( normalize( t ) === lookupKey ) {\n               return i18nValue[ t ];\n            }\n         }\n\n         return optionalFallbackValue;\n      }\n\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function handleLocaleChange({ locale, languageTag }) {\n      const newTag = normalize( languageTag );\n      if( newTag === tags[ locale ] ) {\n         return;\n      }\n      tags[ locale ] = newTag;\n      callbacks[ locale ] = callbacks[ locale ] || [];\n      callbacks[ locale ].forEach( f => { f( languageTag ); } );\n   }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction memoize( f ) {\n   const cache = {};\n   return key => {\n      let value = cache[ key ];\n      if( value === undefined ) {\n         value = f( key );\n         cache[ key ] = value;\n      }\n      return value;\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/widget_services_i18n.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n\n/**\n * Factory for i18n widget service instances.\n *\n * @module widget_services_visibility\n */\n\n// <-- temporary guard until https://github.com/LaxarJS/laxar-dox/issues/21 is fixed\nconst noDeliveryToSender = { deliverToSender: false };\nconst noOp = () => {};\n\n/**\n * Creates a widget-specific helper for `didChangeAreaVisibility` events.\n *\n * @param {AxContext} context\n *    the widget context/scope that the handler should work with. It uses the `eventBus` property there\n *    with which it can do the event handling. The visibility handler will set the boolean context property\n *    `isVisible` which can be used to determine the visibility state of the entire widget, e.g. for use in\n *    templates.\n *\n * @param {AxAreaHelper} areaHelper\n *    an area helper to qualify/unqualify names for this widget's areas\n *\n * @return {AxVisibility}\n *    a visibility handler instance\n */\nexport function create( context, areaHelper ) {\n\n   /**\n    *\n    *\n    * @constructor\n    * @name AxVisibility\n    */\n   const api = {\n      onChange,\n      onHide,\n      onShow,\n      release,\n      track,\n      unsubscribe,\n      updateAreaVisibility,\n      updateWidgetVisibility\n   };\n\n   const { eventBus } = context;\n\n   // reading the widget visibility\n   let isVisible = false;\n   let trackingProperty;\n   const showListeners = [];\n   const hideListeners = [];\n   let unsubscribeToChanges = noOp;\n\n   // controlling the visibility of the widget and its areas\n   const visibilityByArea = {};\n   const overrideByArea = {};\n   let unsubscribeToAreaRequests = noOp;\n\n   return api;\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Registers a callback to be run when this widget becomes hidden.\n    *\n    * @param {Function} callback\n    *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating\n    *    the new visibility state (`false`). The callback will *not* be invoked for the start value (`false`).\n    *\n    * @return {AxVisibility}\n    *    this instance for chaining\n    *\n    * @memberof AxVisibility\n    */\n   function onHide( callback ) {\n      hideListeners.push( callback );\n      updateChangeSubscription();\n      return api;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Registers a callback to be run when this widget becomes visbile.\n    *\n    * @param {Function} callback\n    *    a callback to be invoked whenever the widget becomes visible, with a boolean argument indicating\n    *    the new visibility state (`true`).\n    *\n    * @return {AxVisibility}\n    *    this instance for chaining\n    *\n    * @memberof AxVisibility\n    */\n   function onShow( callback ) {\n      showListeners.push( callback );\n      updateChangeSubscription();\n      return api;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Registers a callback for changes to this widget's visibility.\n    *\n    * @param {Function} callback\n    *    a callback to be invoked whenever the widget visibility changes, with a boolean argument indicating\n    *    the new visibility state. The callback will *not* be invoked for the start value (`false`).\n    *\n    * @return {AxVisibility}\n    *    this instance for chaining\n    *\n    * @memberof AxVisibility\n    */\n   function onChange( callback ) {\n      showListeners.push( callback );\n      hideListeners.push( callback );\n      updateChangeSubscription();\n      return api;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Starts tracking visibility as a property on the context.\n    *\n    * @param {Boolean} enabled\n    *    If `true` (default) an event bus subscription will be maintained to track visibility changes of the\n    *    current widget by updating a managed property on the context. If `false`, any existing subscription\n    *    will be cancelled. If set, the context property will *not* be removed.\n    * @param {String} property\n    *    The name of the context property to maintain. Changing the property name after tracking has started\n    *    once will not remove previously created properties.\n    *\n    * @return {AxVisibility}\n    *    this instance for chaining\n    *\n    * @memberof AxVisibility\n    */\n   function track( enabled = true, property = 'isVisible' ) {\n      trackingProperty = enabled ? property : null;\n      if( enabled ) {\n         context[ trackingProperty ] = isVisible;\n      }\n      updateChangeSubscription();\n      return api;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Triggers a visibility change to the given area. The visibility of the area and its nested areas is\n    * re-evaluated over the event bus. Use this to implement e.g. tabbing/accordion/expander widgets.\n    *\n    * @param {Object} visibilityByLocalArea\n    *   A mapping of local area names (without the widget ID) to their new visibility state (Boolean).\n    *   Areas that are omitted here are left as is. Areas that have not been set at all just assume the\n    *   visibility state of the containing area.\n    * @param {Object} [optionalOptions]\n    *   Additional options\n    * @param {Object} [optionalOptions.overrideContainer]\n    *   Allows the specified areas to become visible even if the widget's container area is not visible.\n    *\n    * @return {Promise}\n    *    a promise that is resolved (without a value) when the visibility change was applied\n    *\n    * @memberof AxVisibility\n    */\n   function updateAreaVisibility( visibilityByLocalArea, optionalOptions = {} ) {\n      const { overrideContainer = false } = optionalOptions;\n\n      if( unsubscribeToAreaRequests === noOp ) {\n         const requestEvent = `changeAreaVisibilityRequest.${context.widget.id}`;\n         unsubscribeToAreaRequests = eventBus.subscribe( requestEvent, responder( isAreaVisible ) );\n      }\n\n      const promises = Object.keys( visibilityByLocalArea ).map( name => {\n         const oldVisible = visibilityByArea[ name ];\n         const oldOverride = overrideByArea[ name ];\n         const visible = visibilityByArea[ name ] = visibilityByLocalArea[ name ];\n         if( overrideContainer ) {\n            overrideByArea[ name ] = overrideContainer;\n         }\n         else if( oldOverride ) {\n            delete overrideByArea[ name ];\n         }\n         if( oldVisible !== visible || oldOverride !== overrideByArea[ name ] ) {\n            const area = areaHelper.fullName( name );\n            const eventName = `changeAreaVisibilityRequest.${area}.${visible}`;\n            return eventBus.publishAndGatherReplies( eventName, { area, visible }, noDeliveryToSender );\n         }\n         return Promise.resolve();\n      } );\n\n      return Promise.all( promises ).then( noOp );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /* @private helper for updateAreaVisibility */\n   function isAreaVisible( localAreaName, containerVisible ) {\n      const areaVisible = visibilityByArea[ localAreaName ];\n      if( areaVisible === undefined ) {\n         return containerVisible;\n      }\n      return areaVisible && ( containerVisible || overrideByArea[ localAreaName ] );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Triggers a visibility change the widget itself and all its areas, always overriding its container\n    * visibility with the given value.\n    * This simplifies implementing popup/popover/layer widgets, which always live in an invisible container\n    * area, but need to show/hide all their owned areas.\n    *\n    * To control the visibility of individual areas, use #updateAreaVisibility\n    *\n    * @param {Boolean} visible\n    *   The new visibility state of the widget.\n    *\n    * @return {AxVisibility}\n    *    this instance for chaining\n    *\n    * @memberof AxVisibility\n    */\n   function updateWidgetVisibility( visible ) {\n      const widget = context.widget.id;\n      const eventName = `changeWidgetVisibilityRequest.${widget}.${visible}`;\n      return eventBus.publishAndGatherReplies( eventName, { widget, visible }, noDeliveryToSender );\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Remove the given callback (registered through one or more of the on... methods) from any subscriptions.\n    *\n    * @param {Function} callback\n    *    a callback that was previously registered using any of the `on...` methods.\n    *    It will be removed from all registrations. Passing an unknown callback has no effect.\n    *\n    * @return {AxVisibility}\n    *    this instance for chaining\n    *\n    * @memberof AxVisibility\n    */\n   function unsubscribe( callback ) {\n      [ showListeners, hideListeners ].forEach( remove );\n\n      function remove( array ) {\n         const index = array.indexOf( callback );\n         if( index === -1 ) { return; }\n         array.splice( index, 1 );\n         remove( array );\n      }\n      return api;\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function release() {\n      unsubscribeToAreaRequests();\n      unsubscribeToChanges();\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function updateChangeSubscription() {\n      const needsSubscription = trackingProperty || ( showListeners.length + hideListeners.length );\n      if( needsSubscription && unsubscribeToChanges === noOp ) {\n         unsubscribeToChanges = eventBus.subscribe(\n            `didChangeAreaVisibility.${context.widget.area}`,\n            ({ visible } ) => {\n               if( visible === isVisible ) { return; }\n               isVisible = visible;\n               if( trackingProperty ) {\n                  context[ trackingProperty ] = visible;\n               }\n               ( visible ? showListeners : hideListeners ).forEach( f => f( visible ) );\n            }\n         );\n      }\n      else if( unsubscribeToChanges && !needsSubscription ) {\n         unsubscribeToChanges();\n         unsubscribeToChanges = noOp;\n      }\n   }\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   function responder( callback ) {\n      return ({ area, visible: containerVisible }) => {\n         const visible = callback( areaHelper.localName( area ), containerVisible );\n         if( visible === true || visible === false ) {\n            const didEvent = `didChangeAreaVisibility.${area}.${visible}`;\n            eventBus.publish( didEvent, { area, visible }, noDeliveryToSender );\n         }\n      };\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/widget_services_visibility.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Accepts and keeps laxarjs application data from various laxarjs services, and makes it available to\n * development tools.\n *\n * This module has an internal API (the `collectors`-service), and an external API (the `providers` service).\n * The collectors service is fed data by the other laxarjs services, while the provider allows external\n * listeners to subscribe to that data's changes, or to retrieve snapshots of it.\n */\n\nimport { createProvider as createPagesProvider, createCollector as createPagesCollector } from './pages';\n\n\n// eslint-disable-next-line valid-jsdoc\n/** Collects inspection data from laxarjs services */\nexport function createCollectors( configuration, log ) {\n   return {\n      pages: createPagesCollector( configuration, log )\n   };\n}\n\n// eslint-disable-next-line valid-jsdoc\n/** Exposes inspection data from laxarjs services to development tools */\nexport function createProviders( collectors ) {\n   return {\n      pages: createPagesProvider( collectors.pages )\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/tooling/tooling.js","/**\n * Copyright 2016 aixigo AG\n * Released under the MIT license.\n * http://laxarjs.org/license\n */\n/**\n * Module for the plain widget adapter factory.\n * In LaxarJS _plain_ widgets are defined as widgets without dependency to a specific view library or\n * framwork, and instead would be implemented using simple DOM access and manipulation.\n *\n * A developer will never call any of the API of this module.\n * The documentation solely exists as a blueprint for custom widget adapters and to explain certain concepts.\n *\n * @module plain_adapter\n */\n\nexport const technology = 'plain';\n\nconst noOp = () => {};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Initializes the adapter module and returns a factory for plain widgets.\n * Note that the plain adapter doesn't need all the provided arguments, but they are listed here for\n * documentation purposes.\n *\n * @param {Object} artifacts\n *    the artifacts available to this adapter factory\n * @param {Object} artifacts.widgets\n *    all widgets, that are implemented in the adapter's technology\n * @param {Object} artifacts.controls\n *    all controls, that are implemented in the adapter's technology\n * @param {Object} services\n *    a selection of services adapter implementations may need to fulfill their task\n * @param {AdapterUtilities} services.adapterUtilities\n *    common utilities, that may be useful to a widget adapter\n * @param {ArtifactProvider} services.artifactProvider\n *    the artifact provider instance\n * @param {Configuration} services.configuration\n *    access to the application configuration\n * @param {EventBus} services.globalEventBus\n *    the global event bus.\n *    Note that an adapter should not sent any events by itself.\n *    It may instead be necessary that the adapter makes the event bus globally available to its widgets (for\n *    example like the AngularJS 1.x adapter), or that it registers an inspector\n * @param {Heartbeat} services.heartbeat\n *    the heartbeat instance.\n *    Depending on the underlying view technology (like AngularJS 1.x) it may be important to get notified\n *    when to re-render the user interface.\n *    For that reason an adapter can register a callback at the heartbeat, that gets called after all events\n *    of the current cycle were processed\n * @param {Log} services.log\n *    the global log instance\n * @param {StorageFactory} services.storage\n *    the global storage factory api\n * @param {Tooling} services.tooling\n *    access to the tooling api\n * @param {HTMLElement} anchorElement\n *    the DOM node the laxar application is bootstrapped on.\n *    An adapter should never try to access DOM nodes that are not the `anchorElement` or any of its children,\n *    since they are not under control of this LaxarJS application.\n *\n * @return {PlainAdapterFactory}\n *    the factory for plain widget adapters\n */\nexport function bootstrap( artifacts, { widgetLoader, artifactProvider } ) {\n\n   const { adapterErrors } = widgetLoader;\n\n   /**\n    * A factory for plain widget adapters.\n    *\n    * @constructor\n    * @name PlainAdapterFactory\n    */\n   return {\n      create\n   };\n\n   ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Creates a new adapter instance for the given widget environment.\n    *\n    * @param {Object} environment\n    *    the environment for the widget to create and manage\n    * @param {HTMLElement} environment.anchorElement\n    *    the DOM node that the widget's DOM fragment should be inserted into\n    * @param {String} environment.name\n    *    the name of the widget to load, exactly as specified by the widget descriptor\n    * @param {widget_services} environment.services\n    *    the services for this widget instance\n    * @param {Function} environment.onBeforeControllerCreation\n    *    a function that the adapter must call with a map of all to-be-injected services, just before\n    *    creating the controller\n    *\n    * @return {Object}\n    *    the adapter instance\n    *\n    * @memberof PlainAdapterFactory\n    */\n   function create( { widgetName, anchorElement, services, onBeforeControllerCreation } ) {\n\n      let onDomAvailable = null;\n      let domAttached = false;\n\n      const provider = artifactProvider.forWidget( widgetName );\n\n      return Promise.all( [ provider.descriptor(), provider.module() ] )\n         .then( createController, () => adapterErrors.unknownWidget( { technology, widgetName } ) )\n         .then( () => ( {\n            domAttachTo,\n            domDetach\n         } ) );\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function createController( [ descriptor, module ] ) {\n         services.axWithDom = callback => {\n            if( domAttached ) {\n               callback( anchorElement );\n            }\n         };\n         const injections = ( module.injections || [] ).map( injection => {\n            if( !( injection in services ) ) {\n               throw adapterErrors.unknownInjection( { technology, injection, widgetName } );\n            }\n            if( injection === 'axWithDom' && descriptor.integration.type === 'activity' ) {\n               throw adapterErrors.activityAccessingDom( { technology, injection, widgetName } );\n            }\n            return services[ injection ];\n         } );\n\n         onBeforeControllerCreation( services );\n         ( { onDomAvailable = noOp } = module.create( ...injections ) || {} );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function domAttachTo( areaElement, htmlTemplate ) {\n         if( htmlTemplate === null ) { return; }\n         anchorElement.innerHTML = htmlTemplate;\n         areaElement.appendChild( anchorElement );\n         domAttached = true;\n         onDomAvailable( anchorElement );\n      }\n\n      ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      function domDetach() {\n         const parent = anchorElement.parentNode;\n         if( parent ) {\n            parent.removeChild( anchorElement );\n         }\n         domAttached = false;\n      }\n\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/runtime/plain_adapter.js","/* global require */\nimport 'promise-polyfill/promise';\nimport 'whatwg-fetch/fetch.js';\nimport './lib/polyfills/array_from.js';\nimport './lib/polyfills/array_includes.js';\nimport './lib/polyfills/object_assign.js';\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/polyfills.js","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n// WEBPACK FOOTER //\n// ./~/promise-polyfill/promise.js","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/~/node-libs-browser/~/timers-browserify/main.js","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/~/node-libs-browser/~/timers-browserify/~/setimmediate/setImmediate.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n// WEBPACK FOOTER //\n// ./~/whatwg-fetch/fetch.js","/* eslint-disable prefer-rest-params */\n// Polyfill based on:\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif( !Array.from ) {\n   const toStr = Object.prototype.toString;\n   const isCallable = function( fn ) {\n      return typeof fn === 'function' || toStr.call( fn ) === '[ object Function ]';\n   };\n   const toInteger = function( value ) {\n      const number = Number( value );\n      if( isNaN( number ) ) { return 0; }\n      if( number === 0 || !isFinite( number ) ) { return number; }\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\n   };\n   const maxSafeInteger = Math.pow( 2, 53 ) - 1;\n   const toLength = function( value ) {\n      const len = toInteger( value );\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\n   };\n\n   // The length property of the from method is 1.\n   Array.from = function from( arrayLike/*, mapFn, thisArg */ ) {\n      // 1. Let C be the this value.\n      const C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      const items = Object( arrayLike );\n\n      // 3. ReturnIfAbrupt(items).\n      if( arrayLike == null ) {\n         throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      // eslint-disable-next-line no-void\n      const mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\n      let T;\n      if( typeof mapFn !== 'undefined' ) {\n         // 5. else\n         // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n         if( !isCallable( mapFn ) ) {\n            throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\n         }\n\n         // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n         if( arguments.length > 2 ) {\n            T = arguments[ 2 ];\n         }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      const len = toLength( items.length );\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [ [Construct] ] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      const A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\n\n      // 16. Let k be 0.\n      let k = 0;\n      // 17. Repeat, while k < len… (also steps a - h)\n      let kValue;\n      while( k < len ) {\n         kValue = items[ k ];\n         if( mapFn ) {\n            A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\n         }\n         else {\n            A[ k ] = kValue;\n         }\n         k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n   };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/polyfills/array_from.js","// Polyfill based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\n// Alternatives seem to cause problems with MSIE (e.g. by relying on a `global` object).\nif( !Array.prototype.includes ) {\n   // eslint-disable-next-line no-extend-native\n   Array.prototype.includes = function( searchElement, optionalFromIndex ) {\n      'use strict';\n      if( this == null ) {\n         throw new TypeError( 'Array.prototype.includes called on null or undefined' );\n      }\n      const list = Object( this );\n      const n = parseInt( list.length, 10 ) || 0;\n      if( n === 0 ) { return false; }\n\n      const start = parseInt( optionalFromIndex, 10 ) || 0;\n      let k = start >= 0 ? start : Math.max( 0, n + start );\n\n      // detect special case (only NaN !== NaN):\n      // eslint-disable-next-line no-self-compare\n      if( searchElement !== searchElement ) {\n         while( k < n ) {\n            if( list[ k ] !== list[ k ] ) { return true; }\n            k++;\n         }\n         return false;\n      }\n\n      while( k < n ) {\n         if( searchElement === list[ k ] ) { return true; }\n         k++;\n      }\n      return false;\n   };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/polyfills/array_includes.js","/* eslint-disable prefer-rest-params */\n// Polyfill based on:\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif( !Object.assign ) {\n   Object.assign = function( target ) {\n      'use strict';\n      // We must check against these specific cases.\n      if( target === undefined || target === null ) {\n         throw new TypeError( 'Cannot convert undefined or null to object' );\n      }\n\n      const output = Object( target );\n      for( let index = 1; index < arguments.length; index++ ) {\n         const source = arguments[ index ];\n         if( source !== undefined && source !== null ) {\n            for( const nextKey in source ) {\n               // eslint-disable-next-line max-depth\n               if( source.hasOwnProperty( nextKey ) ) {\n                  output[ nextKey ] = source[ nextKey ];\n               }\n            }\n         }\n      }\n      return output;\n   };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./vendor/laxar/lib/polyfills/object_assign.js"],"sourceRoot":""}